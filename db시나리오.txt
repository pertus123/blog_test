
추가할 때,
검색할 때 밑에 추천 검색어
select course from inflearn_total_list where course = "";

ok 눌렀을 때, 선택했을 때 추가
Optional<inflearn> select * from inflearn_total_list where course = "";
-> 비어 있는지 안비어있는지 체크

	@Query("SELECT p FROM Post p WHERE p.title like %:keyword% "
			+ "or p.content like %:keyword% ORDER BY p.pid desc")
    public Object<List<String>> findInflearnByCourse(String keyword);

한ㄴ 번 검 토 후 다 시

시나리오 작성
프로필에 들어왔을 때,
1. 프로필 들어오면 수강하는 강의가 카드 리스트들로 보인다. 카드 세션에는 수강하는 사진, 강의 제목, 등등이 노출된다.
=> user_course에서 uid로 현재 있는 gid의 정보들을 course_info와 조회하여
정보들을 같이 조회한다.
// course_info 와 class간의 연결은 필요가 없는건가? - 생각

+를 눌러서 새로운 강의를 생성한다.
1. 강의를 가져올 플랫폼을 선택 후, 해당 강의 제목을 검색한다.
=> 1)인프런 선택시, 인프런 토탈 리스트에서 모든 제목 정보를 보내준다. - 뷰에서 드롭다운으로 노출

2. 해당 강의가 이미 만들어져 있을 경우, x, 없으면 만들고(게시글까지) 기존 화면에서 갱신.
=>1)강의 제목으로 생성할 때, 현재 내 수강 리스트에 있는지 없는지 체크를핸다.
1.1)문자열 기준으로 course_info에 gid가 없다면 새로 생성을 한다.
타입과 제목을 통해 inflearn_total_list에서 정보를 가져온 후, course_info에 생성한다음,
해당 url을 클로링하여 course_info_class에 생성을 해준다.대 중 분류.
그리고  user_course에 uid와 해당 gid 정보로 생성을 한다.
1.2)ci에 gid가 있다면, user_course를 uid와 gid통해 조회한다. 있으면 생성 X
만약 없다면, 하나 gid로 만들어준다. 그리고 생성을 한다.
1.2.1)course_list에 uid, gid, 가 생성되며 해당 gid의 course_info_class 정보들이 들어가진다.
1.2.2)그리고 course_post에 middlecategory(제목)을 통한 게시글이 만들어진다. 

강의를 본다.
1. 카드 세션을 클릭했을 때, 해당 강의의 리스트가 출력된다.
=> course_list를 통해 전체 리스트가 생성된다.
리스트 안에 리스트 넣어서 보내준다. 알아서 꺼내 써라

2. 리스트는 대분류와 중분류로 나눠지며, 중분류를 클릭한 경우, 해당 게시글로 넘어가진다. 
=> gid, uid, maincategory, middlecategory를 보내서 course_post의 해당 페이지가 보이게 한다.
3. 게시글은 상세보기 형태로 넘어가지며, 거기서 수정을 통해 강의를 작성한다.

강의를 삭제한다.
1. 카드리스트에서 삭제를 한다. -> 종속된것 전체 삭제 이건 나중에





이거 끝난 후, tag db 도 다시
태그 db 시나리오 작성
게시글에 태그 저장
1. post_tag에서 해당 pid uid의 tid를 모두 삭제한다.
1. 게시글에 태그들을 입력한다 a b c
1. 해당 태그들이 tag목록에 있는지 확인하고, 없으면 추가, 그리고 해당 tid를 반환한다.
1. post tag에 uid pid 해당 tag를 저장한다.

게시글보기
1. 해당 uid, pid의 태그를 불러온다.

tag조회.
해당 tag를 가진 모든 pid를 뿌려준다.

tag로 상위 몇개 뽑기

집가서 소스 리펙토링 한 후, 
tag구현, 
