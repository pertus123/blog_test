-- MySQL dump 10.17  Distrib 10.3.25-MariaDB, for debian-linux-gnu (x86_64)
--
-- Host: localhost    Database: common
-- ------------------------------------------------------
-- Server version	10.3.25-MariaDB-0ubuntu0.20.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `comment`
--

DROP TABLE IF EXISTS `comment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `comment` (
  `cid` bigint(20) NOT NULL AUTO_INCREMENT,
  `pid` bigint(20) NOT NULL,
  `email` varchar(100) DEFAULT NULL,
  `content` varchar(5000) DEFAULT NULL,
  `create_date` datetime DEFAULT current_timestamp(),
  PRIMARY KEY (`cid`),
  KEY `pid` (`pid`),
  CONSTRAINT `comment_ibfk_1` FOREIGN KEY (`pid`) REFERENCES `post` (`pid`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=86 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `comment`
--

LOCK TABLES `comment` WRITE;
/*!40000 ALTER TABLE `comment` DISABLE KEYS */;
INSERT INTO `comment` VALUES (79,291,'frontend@gmail.com','와 유용합니다','2021-02-18 00:14:02'),(80,285,'frontend@gmail.com','알고리즘 어려워요','2021-02-18 00:14:45'),(81,283,'frontend@gmail.com','장고를 쓴지 오래돼서 다 까먹었어요ㅜㅜ','2021-02-18 00:17:53'),(82,279,'frontend@gmail.com','역시 파이썬이 편해요ㅠ','2021-02-18 00:19:00'),(83,263,'frontend@gmail.com','push로 params 보내려면 name 꼭 써야하나요?','2021-02-18 00:21:11');
/*!40000 ALTER TABLE `comment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `course_info`
--

DROP TABLE IF EXISTS `course_info`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `course_info` (
  `gid` bigint(20) NOT NULL AUTO_INCREMENT,
  `coursetype` int(11) DEFAULT NULL,
  `course` varchar(200) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `courseurl` varchar(200) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `imageurl` varchar(500) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `instructor` varchar(200) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`gid`)
) ENGINE=InnoDB AUTO_INCREMENT=58 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `course_info`
--

LOCK TABLES `course_info` WRITE;
/*!40000 ALTER TABLE `course_info` DISABLE KEYS */;
INSERT INTO `course_info` VALUES (43,1,'JSP WEB MVC Model2 Programming(중급 과정)','https://www.inflearn.com/course/jsp-웹개발-mvc-model2-중급','https://cdn.inflearn.com/public/courses/325299/course_cover/52cdc1f9-de30-43e1-8b25-cfe870075362/softcampus-jsp-mvc-model2-eng.png','소프트캠퍼스'),(44,1,'제주코딩베이스캠프 Code Festival: JavaScript 100제','https://www.inflearn.com/course/제주코딩-자바스크립트-100제','https://cdn.inflearn.com/public/courses/324470/course_cover/93df16b3-38c5-4265-b00a-208075d2f135/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-100%EC%A0%9C%28%EC%88%98%EC%A0%95%29.png','제주코딩베이스캠프'),(45,1,'실습 UI 개발로 배워보는 순수 javascript 와 VueJS 개발','https://www.inflearn.com/course/순수js-vuejs-개발-강좌','https://cdn.inflearn.com/wp-content/uploads/vuejsandpure.png','김정환'),(46,1,'Python 부트캠프','https://www.inflearn.com/course/파이썬-부트캠프','https://cdn.inflearn.com/public/course-325339-cover/9f2bb0a8-26c3-4520-aaf6-5a3ff4466b7d','제주코딩베이스캠프'),(47,1,'Vue.js 완벽 가이드 - 실습과 리팩토링으로 배우는 실전 개념','https://www.inflearn.com/course/vue-js','https://cdn.inflearn.com/public/courses/262728/course_cover/e4e95dfd-4e83-4ded-b6be-aa9f2078982e/lv3.png','장기효(캡틴판교)'),(48,1,'제주 하간디 이신 데이터들 Python으로 몬딱 분석해불게','https://www.inflearn.com/course/제주코딩베이스캠프-파이썬-데이터분석','https://cdn.inflearn.com/public/course-324437-cover/de15fa3a-9089-47f0-bb5c-19ce062afd97','제주코딩베이스캠프'),(49,1,'Django, 데이터 분석, 프론트엔드까지 내 손으로 만드는 페이스북 클론 강의','https://www.inflearn.com/course/페이스북-풀스택-클론-웹개발','https://cdn.inflearn.com/public/course-324818-cover/bb4320c6-c054-4396-b6c8-38f6ee1e4144','제주코딩베이스캠프'),(50,1,'Vue, 뷰 100분 핵심강의','https://www.inflearn.com/course/Vue-뷰-100분강의','https://cdn.inflearn.com/public/courses/324150/course_cover/da849df0-392d-4a2a-a89e-eb9d9532ff54/sjh_vue100.png','노마드크리에이터'),(51,1,'Spring Boot를 이용한 RESTful Web Services 개발','https://www.inflearn.com/course/spring-boot-restful-web-services','https://cdn.inflearn.com/public/courses/325065/course_cover/66cd1514-8296-4ec6-9e72-e1305c4d80a0/springboot-restful-web-dev-eng.png','Dowon Lee'),(52,1,'실전! 스프링 부트와 JPA 활용1 - 웹 애플리케이션 개발','https://www.inflearn.com/course/스프링부트-JPA-활용-1','https://cdn.inflearn.com/public/courses/324119/course_cover/07c45106-3cfa-4dd6-93ed-a6449591831c/%E1%84%80%E1%85%B3%E1%84%85%E1%85%AE%E1%86%B8%205%20%E1%84%87%E1%85%A9%E1%86%A8%E1%84%89%E1%85%A1%204.png','김영한'),(53,1,'프로그래밍 시작하기: 웹 입문 (Inflearn Original)','https://www.inflearn.com/course/웹개발-입문-인프런-오리지널','https://cdn.inflearn.com/public/courses/325307/course_cover/587aaeec-bee9-4c1e-9c90-9ae48b20f109/inflearn-original-web-ef.png','인프런'),(54,1,'실전 리액트 프로그래밍','https://www.inflearn.com/course/실전-리액트-프로그래밍','https://cdn.inflearn.com/public/course-325676-cover/5d8d0b4f-c65e-449c-8948-8577dcd30514','이재승'),(55,1,'따라하며 배우는 노드, 리액트 시리즈 - 쇼핑몰 사이트 만들기','https://www.inflearn.com/course/따라하며-배우는-노드-리액트-쇼핑몰','https://cdn.inflearn.com/public/courses/325240/course_cover/d5d7e9a9-2d6f-4a81-84da-5e9cde3f39a4/nodereactecommerce-eng.png','John Ahn'),(56,1,'따라하며 배우는 노드, 리액트 시리즈 - 기본 강의','https://www.inflearn.com/course/따라하며-배우는-노드-리액트-기본','https://cdn.inflearn.com/public/courses/324951/course_cover/510c265a-6de2-456d-8e6a-351b9ce29608/nodeReactbasic.png','John Ahn'),(57,1,'따라하며 배우는 노드, 리액트 시리즈 - 영화 사이트 만들기','https://www.inflearn.com/course/따라하며-배우는-노드-리액트-영화사이트-만들기','https://cdn.inflearn.com/public/courses/324906/course_cover/63e47a67-f188-41a1-94a0-1ffecc7734c0/nodeReact-film.png','John Ahn');
/*!40000 ALTER TABLE `course_info` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `course_info_class`
--

DROP TABLE IF EXISTS `course_info_class`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `course_info_class` (
  `cicid` bigint(20) NOT NULL AUTO_INCREMENT,
  `gid` bigint(20) NOT NULL,
  `maincategory` varchar(200) DEFAULT NULL,
  `middlecategory` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`cicid`),
  KEY `gid` (`gid`),
  CONSTRAINT `course_info_class_ibfk_1` FOREIGN KEY (`gid`) REFERENCES `course_info` (`gid`)
) ENGINE=InnoDB AUTO_INCREMENT=3348 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `course_info_class`
--

LOCK TABLES `course_info_class` WRITE;
/*!40000 ALTER TABLE `course_info_class` DISABLE KEYS */;
INSERT INTO `course_info_class` VALUES (2282,43,'섹션 0. JSP Model 2의 이해','1강 모델2 이해'),(2283,43,'섹션 1. JSP Expression Language 사용법','2강 Expression Language 사용법 1'),(2284,43,'섹션 1. JSP Expression Language 사용법','3강 Expression Language 사용법 2'),(2285,43,'섹션 2. JSTL','4강 JSTL 1'),(2286,43,'섹션 2. JSTL','5강 JSTL 2'),(2287,43,'섹션 3. Servlet 활용 및 파라미터 사용','6강 서블릿'),(2288,43,'섹션 3. Servlet 활용 및 파라미터 사용','7강 서블릿 활용'),(2289,43,'섹션 3. Servlet 활용 및 파라미터 사용','8강 파라미터 사용'),(2290,43,'섹션 4. MVC 패턴 연습','9강 MVC패턴 연습 1 (회원가입)'),(2291,43,'섹션 4. MVC 패턴 연습','10강 MVC패턴 연습 2 (회원가입)'),(2292,43,'섹션 4. MVC 패턴 연습','11강 MVC패턴 연습 3 (회원보기)'),(2293,43,'섹션 5. MVC Model 2 게시판 프로젝트','12강 모델2 게시판 - 게시글 보기'),(2294,43,'섹션 5. MVC Model 2 게시판 프로젝트','13강 모델2 게시판 - 게시글 보기 2'),(2295,43,'섹션 5. MVC Model 2 게시판 프로젝트','14강 모델2 게시판 - 게시글 보기 3'),(2296,43,'섹션 5. MVC Model 2 게시판 프로젝트','15강 모델2 게시판 - 게시글 보기 4'),(2297,43,'섹션 5. MVC Model 2 게시판 프로젝트','16강 모델2 게시판 - 게시글 쓰기'),(2298,43,'섹션 5. MVC Model 2 게시판 프로젝트','17강 모델2 게시판 - 게시글 보기'),(2299,43,'섹션 5. MVC Model 2 게시판 프로젝트','18강 모델2 게시판 - 답글쓰기'),(2300,43,'섹션 5. MVC Model 2 게시판 프로젝트','19강 모델2 게시판- 게시판 수정 고급'),(2301,43,'섹션 5. MVC Model 2 게시판 프로젝트','20강 모델2 게시판 - 수정과 삭제'),(2302,43,'섹션 5. MVC Model 2 게시판 프로젝트','21강 모델2 게시판 - 삭제'),(2303,43,'섹션 5. MVC Model 2 게시판 프로젝트','수업자료'),(2304,43,'섹션 5. MVC Model 2 게시판 프로젝트','JSP 기본 과정 소스 코드'),(2305,44,'섹션 0. 제코베 포트폴리오 템플릿','제코베 포트폴리오 템플릿'),(2306,44,'섹션 1. Intro','수업자료'),(2307,44,'섹션 1. Intro','강좌 소개'),(2308,44,'섹션 1. Intro','환경설정'),(2309,44,'섹션 1. Intro','[공지] 문제 및 답안 오류에 대한 수정사항'),(2310,44,'섹션 2. 1부(1번 ~ 50번)','1번 문제풀이'),(2311,44,'섹션 2. 1부(1번 ~ 50번)','2번 문제풀이'),(2312,44,'섹션 2. 1부(1번 ~ 50번)','3번 문제풀이'),(2313,44,'섹션 2. 1부(1번 ~ 50번)','4번 문제풀이'),(2314,44,'섹션 2. 1부(1번 ~ 50번)','5번 문제풀이'),(2315,44,'섹션 2. 1부(1번 ~ 50번)','6번 문제풀이'),(2316,44,'섹션 2. 1부(1번 ~ 50번)','7번 문제풀이'),(2317,44,'섹션 2. 1부(1번 ~ 50번)','8번 문제풀이'),(2318,44,'섹션 2. 1부(1번 ~ 50번)','9번 문제풀이'),(2319,44,'섹션 2. 1부(1번 ~ 50번)','10번 문제풀이'),(2320,44,'섹션 2. 1부(1번 ~ 50번)','11번 문제풀이'),(2321,44,'섹션 2. 1부(1번 ~ 50번)','12번 문제풀이'),(2322,44,'섹션 2. 1부(1번 ~ 50번)','13번 문제풀이'),(2323,44,'섹션 2. 1부(1번 ~ 50번)','14번 문제풀이'),(2324,44,'섹션 2. 1부(1번 ~ 50번)','15번 문제풀이'),(2325,44,'섹션 2. 1부(1번 ~ 50번)','16번 문제풀이'),(2326,44,'섹션 2. 1부(1번 ~ 50번)','17번 문제풀이'),(2327,44,'섹션 2. 1부(1번 ~ 50번)','18번 문제풀이'),(2328,44,'섹션 2. 1부(1번 ~ 50번)','19번 문제풀이'),(2329,44,'섹션 2. 1부(1번 ~ 50번)','20번 문제풀이'),(2330,44,'섹션 2. 1부(1번 ~ 50번)','21번 문제풀이'),(2331,44,'섹션 2. 1부(1번 ~ 50번)','22번 문제풀이'),(2332,44,'섹션 2. 1부(1번 ~ 50번)','23번 문제풀이'),(2333,44,'섹션 2. 1부(1번 ~ 50번)','24번 문제풀이'),(2334,44,'섹션 2. 1부(1번 ~ 50번)','25번 문제풀이'),(2335,44,'섹션 2. 1부(1번 ~ 50번)','26번 문제풀이'),(2336,44,'섹션 2. 1부(1번 ~ 50번)','27번 문제풀이'),(2337,44,'섹션 2. 1부(1번 ~ 50번)','28번 문제풀이'),(2338,44,'섹션 2. 1부(1번 ~ 50번)','29번 문제풀이'),(2339,44,'섹션 2. 1부(1번 ~ 50번)','30번 문제풀이'),(2340,44,'섹션 2. 1부(1번 ~ 50번)','31번 문제풀이'),(2341,44,'섹션 2. 1부(1번 ~ 50번)','32번 문제풀이'),(2342,44,'섹션 2. 1부(1번 ~ 50번)','33번 문제풀이'),(2343,44,'섹션 2. 1부(1번 ~ 50번)','34번 문제풀이'),(2344,44,'섹션 2. 1부(1번 ~ 50번)','35번 문제풀이'),(2345,44,'섹션 2. 1부(1번 ~ 50번)','36번 문제풀이'),(2346,44,'섹션 2. 1부(1번 ~ 50번)','37번 문제풀이'),(2347,44,'섹션 2. 1부(1번 ~ 50번)','38번 문제풀이'),(2348,44,'섹션 2. 1부(1번 ~ 50번)','39번 문제풀이'),(2349,44,'섹션 2. 1부(1번 ~ 50번)','40번 문제풀이'),(2350,44,'섹션 2. 1부(1번 ~ 50번)','41번 문제풀이'),(2351,44,'섹션 2. 1부(1번 ~ 50번)','42번 문제풀이'),(2352,44,'섹션 2. 1부(1번 ~ 50번)','43번 문제풀이'),(2353,44,'섹션 2. 1부(1번 ~ 50번)','44번 문제풀이'),(2354,44,'섹션 2. 1부(1번 ~ 50번)','45번 문제풀이'),(2355,44,'섹션 2. 1부(1번 ~ 50번)','46번 문제풀이'),(2356,44,'섹션 2. 1부(1번 ~ 50번)','47번 문제풀이'),(2357,44,'섹션 2. 1부(1번 ~ 50번)','48번 문제풀이'),(2358,44,'섹션 2. 1부(1번 ~ 50번)','49번 문제풀이'),(2359,44,'섹션 2. 1부(1번 ~ 50번)','50번 문제풀이'),(2360,44,'섹션 3. 2부(51번 ~ 100번)','51번 문제풀이'),(2361,44,'섹션 3. 2부(51번 ~ 100번)','52번 문제풀이'),(2362,44,'섹션 3. 2부(51번 ~ 100번)','53번 문제풀이'),(2363,44,'섹션 3. 2부(51번 ~ 100번)','54번 문제풀이'),(2364,44,'섹션 3. 2부(51번 ~ 100번)','54번 문제풀이 (해설 수정)'),(2365,44,'섹션 3. 2부(51번 ~ 100번)','55번 문제풀이'),(2366,44,'섹션 3. 2부(51번 ~ 100번)','56번 문제풀이'),(2367,44,'섹션 3. 2부(51번 ~ 100번)','57번 문제풀이'),(2368,44,'섹션 3. 2부(51번 ~ 100번)','58번 문제풀이'),(2369,44,'섹션 3. 2부(51번 ~ 100번)','59번 문제풀이'),(2370,44,'섹션 3. 2부(51번 ~ 100번)','60번 문제풀이'),(2371,44,'섹션 3. 2부(51번 ~ 100번)','61번 문제풀이'),(2372,44,'섹션 3. 2부(51번 ~ 100번)','62번 문제풀이'),(2373,44,'섹션 3. 2부(51번 ~ 100번)','63번 문제풀이'),(2374,44,'섹션 3. 2부(51번 ~ 100번)','64번 문제풀이'),(2375,44,'섹션 3. 2부(51번 ~ 100번)','65번 문제풀이'),(2376,44,'섹션 3. 2부(51번 ~ 100번)','66번 문제풀이'),(2377,44,'섹션 3. 2부(51번 ~ 100번)','67번 문제풀이'),(2378,44,'섹션 3. 2부(51번 ~ 100번)','68번 문제풀이'),(2379,44,'섹션 3. 2부(51번 ~ 100번)','69번 문제풀이'),(2380,44,'섹션 3. 2부(51번 ~ 100번)','70번 문제풀이'),(2381,44,'섹션 3. 2부(51번 ~ 100번)','71, 72번 문제풀이'),(2382,44,'섹션 3. 2부(51번 ~ 100번)','73번 문제풀이'),(2383,44,'섹션 3. 2부(51번 ~ 100번)','74번 문제풀이'),(2384,44,'섹션 3. 2부(51번 ~ 100번)','75번 문제풀이'),(2385,44,'섹션 3. 2부(51번 ~ 100번)','76번 문제풀이'),(2386,44,'섹션 3. 2부(51번 ~ 100번)','77번 문제풀이'),(2387,44,'섹션 3. 2부(51번 ~ 100번)','78번 문제풀이'),(2388,44,'섹션 3. 2부(51번 ~ 100번)','79번 문제풀이'),(2389,44,'섹션 3. 2부(51번 ~ 100번)','80번 문제풀이'),(2390,44,'섹션 3. 2부(51번 ~ 100번)','81번 문제풀이'),(2391,44,'섹션 3. 2부(51번 ~ 100번)','82, 83번 문제풀이'),(2392,44,'섹션 3. 2부(51번 ~ 100번)','84번 문제풀이'),(2393,44,'섹션 3. 2부(51번 ~ 100번)','85번 문제풀이'),(2394,44,'섹션 3. 2부(51번 ~ 100번)','86번 문제풀이'),(2395,44,'섹션 3. 2부(51번 ~ 100번)','87번 문제풀이'),(2396,44,'섹션 3. 2부(51번 ~ 100번)','88번 문제풀이'),(2397,44,'섹션 3. 2부(51번 ~ 100번)','89번 문제풀이'),(2398,44,'섹션 3. 2부(51번 ~ 100번)','90번 문제풀이'),(2399,44,'섹션 3. 2부(51번 ~ 100번)','91번 문제풀이'),(2400,44,'섹션 3. 2부(51번 ~ 100번)','92번 문제풀이'),(2401,44,'섹션 3. 2부(51번 ~ 100번)','93번 문제풀이'),(2402,44,'섹션 3. 2부(51번 ~ 100번)','94번 문제풀이'),(2403,44,'섹션 3. 2부(51번 ~ 100번)','95번 문제풀이'),(2404,44,'섹션 3. 2부(51번 ~ 100번)','96번 문제풀이'),(2405,44,'섹션 3. 2부(51번 ~ 100번)','97번 문제풀이'),(2406,44,'섹션 3. 2부(51번 ~ 100번)','98번 문제풀이'),(2407,44,'섹션 3. 2부(51번 ~ 100번)','99번 문제풀이'),(2408,44,'섹션 3. 2부(51번 ~ 100번)','100번 문제풀이'),(2409,44,'섹션 4. 30분 JavaScript 요약강좌(기초)','요약강좌 1부'),(2410,44,'섹션 4. 30분 JavaScript 요약강좌(기초)','요약강좌 2부'),(2411,44,'섹션 5. (구) JavaScript 기본 강좌','변수와 상수'),(2412,44,'섹션 5. (구) JavaScript 기본 강좌','비교와 논리연산'),(2413,44,'섹션 5. (구) JavaScript 기본 강좌','오브젝트 타입'),(2414,44,'섹션 5. (구) JavaScript 기본 강좌','함수'),(2415,44,'섹션 5. (구) JavaScript 기본 강좌','배열'),(2416,44,'섹션 5. (구) JavaScript 기본 강좌','오브젝트'),(2417,44,'섹션 5. (구) JavaScript 기본 강좌','조건문'),(2418,44,'섹션 5. (구) JavaScript 기본 강좌','switch문'),(2419,44,'섹션 5. (구) JavaScript 기본 강좌','반복문'),(2420,44,'섹션 5. (구) JavaScript 기본 강좌','프로젝트사이트 메뉴 동작 구현 1'),(2421,44,'섹션 5. (구) JavaScript 기본 강좌','프로젝트사이트 메뉴 동작 구현 2'),(2422,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','JavaScript 소개 및 기본 기능'),(2423,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','변수들의 연산'),(2424,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','할당연산, 증감연산과 template literal'),(2425,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','비교연산'),(2426,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','논리연산'),(2427,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','변수의 타입'),(2428,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','변수의 형변환'),(2429,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','함수'),(2430,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','지역변수와 전역변수'),(2431,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','Arrow function (화살표 함수)'),(2432,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','함수 표현식과 함수 선언문, 콜백함수'),(2433,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','자료형 - Object'),(2434,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','자료형- Array'),(2435,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','자료형 - 배열의 내장함수'),(2436,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','자료형 - 다차원배열'),(2437,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','자료형 - String'),(2438,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','자료형 - String includes'),(2439,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','자료형 - Number'),(2440,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','자료형 - Number 관련함수'),(2441,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','제어문 - if'),(2442,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','제어문 - 삼항연산자'),(2443,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','제어문 - switch'),(2444,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','제어문 - for'),(2445,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','제어문 - forEach, for_in, for_of'),(2446,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','제어문 - while'),(2447,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','제어문 - break, continue'),(2448,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','연습문제 1'),(2449,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','연습문제 2'),(2450,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','Map'),(2451,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','Set'),(2452,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','this'),(2453,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','JSON'),(2454,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','JSON 응용 1'),(2455,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','JSON 응용 2'),(2456,44,'섹션 6. (신) JavaScript 기본 강좌(리뉴얼 영상)','window'),(2457,44,'섹션 7. 기본 알고리즘 강좌','[재귀함수] 반복문을 이용한 1부터 100까지의 합과 곱'),(2458,44,'섹션 7. 기본 알고리즘 강좌','[재귀함수] 재귀함수를 이용한 1부터 100가지의 합과 곱'),(2459,44,'섹션 7. 기본 알고리즘 강좌','[재귀함수] 2진수 변환'),(2460,44,'섹션 7. 기본 알고리즘 강좌','[재귀함수] 문자열 뒤집기'),(2461,44,'섹션 7. 기본 알고리즘 강좌','[재귀함수] 각 자릿수의 합'),(2462,44,'섹션 7. 기본 알고리즘 강좌','[재귀함수] 피보나치'),(2463,44,'섹션 7. 기본 알고리즘 강좌','최솟값과 최댓값 구하기'),(2464,44,'섹션 7. 기본 알고리즘 강좌','최솟값과 최댓값 - reduce'),(2465,44,'섹션 7. 기본 알고리즘 강좌','[정렬] 정렬이론'),(2466,44,'섹션 7. 기본 알고리즘 강좌','[정렬] 선택정렬'),(2467,44,'섹션 7. 기본 알고리즘 강좌','[정렬] 삽입정렬'),(2468,44,'섹션 7. 기본 알고리즘 강좌','[정렬] 병합정렬'),(2469,44,'섹션 7. 기본 알고리즘 강좌','[정렬] 퀵정렬'),(2470,44,'섹션 7. 기본 알고리즘 강좌','트리와 그래프'),(2471,44,'섹션 7. 기본 알고리즘 강좌','깊이우선 탐색과 너비우선 탐색_이론'),(2472,44,'섹션 8. 자바스크립트 게임 제작 강좌 < Flappy Bird >','게임 소개, html, css 스타일링'),(2473,44,'섹션 8. 자바스크립트 게임 제작 강좌 < Flappy Bird >','html에 이벤트 리스너 달기 (게임 시작, 키보드 감지처리)'),(2474,44,'섹션 8. 자바스크립트 게임 제작 강좌 < Flappy Bird >','키 이벤트 상태 체크하기'),(2475,44,'섹션 8. 자바스크립트 게임 제작 강좌 < Flappy Bird >','플레이어 생성하고 스타일링 하기'),(2476,44,'섹션 8. 자바스크립트 게임 제작 강좌 < Flappy Bird >','requestAnimationframe 소개'),(2477,44,'섹션 8. 자바스크립트 게임 제작 강좌 < Flappy Bird >','게임 에리어로 이동 한정하기, 날개짓 만들기'),(2478,44,'섹션 8. 자바스크립트 게임 제작 강좌 < Flappy Bird >','중력 만들기, 게임 스코어 추가하기'),(2479,44,'섹션 8. 자바스크립트 게임 제작 강좌 < Flappy Bird >','게임종료 구현하기'),(2480,44,'섹션 8. 자바스크립트 게임 제작 강좌 < Flappy Bird >','장애물 만들고 움직이기_1'),(2481,44,'섹션 8. 자바스크립트 게임 제작 강좌 < Flappy Bird >','장애물 만들고 움직이기_2'),(2482,44,'섹션 8. 자바스크립트 게임 제작 강좌 < Flappy Bird >','충돌 체크하기, 게임 오버 연결하기'),(2483,44,'섹션 9. 코딩 테스트 Final 메서드 정리!','코딩 테스트 Final 메서드 정리! (PDF 파일)'),(2484,44,'섹션 9. 코딩 테스트 Final 메서드 정리!','코딩 테스트 Final 메서드 정리! - JS'),(2485,45,'섹션 0. 준비','강의 소개'),(2486,45,'섹션 0. 준비','개발환경 구성'),(2487,45,'섹션 0. 준비','요구사항 분석'),(2488,45,'섹션 1. 순수JS (MVC)','MVC 패턴 설명'),(2489,45,'섹션 1. 순수JS (MVC)','폴더 구조'),(2490,45,'섹션 2. - 검색폼','검색폼 구현 1'),(2491,45,'섹션 2. - 검색폼','검색폼 구현 2'),(2492,45,'섹션 2. - 검색폼','검색폼 구현 3'),(2493,45,'섹션 2. - 검색폼','검색폼 구현 4 (실습)'),(2494,45,'섹션 2. - 검색폼','검색폼 구현 4 (구현)'),(2495,45,'섹션 3. - 검색결과','검색결과 구현 1'),(2496,45,'섹션 3. - 검색결과','검색결과 구현 2'),(2497,45,'섹션 3. - 검색결과','검색결과 구현 3 (실습)'),(2498,45,'섹션 3. - 검색결과','검색결과 구현 3 (구현)'),(2499,45,'섹션 4. - 탭','탭 구현 1'),(2500,45,'섹션 4. - 탭','탭 구현 2'),(2501,45,'섹션 4. - 탭','탭 구현 3 (실습)'),(2502,45,'섹션 4. - 탭','탭 구현 3 (구현)'),(2503,45,'섹션 5. - 추천 검색어','추천 검색어 구현 1'),(2504,45,'섹션 5. - 추천 검색어','추천 검색어 구현 2'),(2505,45,'섹션 5. - 추천 검색어','추천 검색어 구현 3 (실습)'),(2506,45,'섹션 5. - 추천 검색어','추천 검색어 구현 3 (구현)'),(2507,45,'섹션 6. - 최근 검색어','최근 검색어 구현 1, 2'),(2508,45,'섹션 6. - 최근 검색어','최근 검색어 구현 3'),(2509,45,'섹션 6. - 최근 검색어','최근 검색어 구현 4 (실습)'),(2510,45,'섹션 6. - 최근 검색어','최근 검색어 구현 4 (구현)'),(2511,45,'섹션 6. - 최근 검색어','최근 검색어 구현 checkout'),(2512,45,'섹션 6. - 최근 검색어','최근 검색어 구현 5 (실습)'),(2513,45,'섹션 6. - 최근 검색어','최근 검생어 구현 5 (구현)'),(2514,45,'섹션 7. Vue.js (MVVM)','MVVM 구조설명'),(2515,45,'섹션 7. Vue.js (MVVM)','vue.js 설치'),(2516,45,'섹션 8. - 검색폼','검색폼'),(2517,45,'섹션 8. - 검색폼','검색폼 (실습)'),(2518,45,'섹션 8. - 검색폼','검색폼 (구현)'),(2519,45,'섹션 9. - 검색결과','검색결과'),(2520,45,'섹션 9. - 검색결과','검색결과 (실습)'),(2521,45,'섹션 9. - 검색결과','검색결과 (구현)'),(2522,45,'섹션 10. - 탭','탭'),(2523,45,'섹션 10. - 탭','탭 (실습)'),(2524,45,'섹션 10. - 탭','탭 (구현)'),(2525,45,'섹션 11. - 추천 검색어','추천 검색어 구현'),(2526,45,'섹션 12. - 최근 검색어','최근 검색어'),(2527,45,'섹션 12. - 최근 검색어','최근 검색어 (실습)'),(2528,45,'섹션 12. - 최근 검색어','최근 검색어 (구현)'),(2529,45,'섹션 13. - 개선된 점','개선된 점'),(2530,45,'섹션 14. 컴포넌트','Vue Component 소개'),(2531,45,'섹션 14. 컴포넌트','FormComponent 구현 1'),(2532,45,'섹션 14. 컴포넌트','FormComponent 구현 2'),(2533,45,'섹션 14. 컴포넌트','ResultComponent 구현'),(2534,45,'섹션 14. 컴포넌트','List Component 구현 1'),(2535,45,'섹션 14. 컴포넌트','List Component 구현 2'),(2536,45,'섹션 14. 컴포넌트','Tab Component 1'),(2537,45,'섹션 14. 컴포넌트','Tab Component 2'),(2538,45,'섹션 15. 단일 파일 컴포넌트 구현','단일 파일 컴포넌트 1'),(2539,45,'섹션 15. 단일 파일 컴포넌트 구현','단일 파일 컴포넌트 2'),(2540,45,'섹션 15. 단일 파일 컴포넌트 구현','단일 파일 컴포넌트 3'),(2541,45,'섹션 15. 단일 파일 컴포넌트 구현','단일 파일 컴포넌트 (실습)'),(2542,45,'섹션 15. 단일 파일 컴포넌트 구현','단일 파일 컴포넌트 (구현)'),(2543,45,'섹션 16. 정리','정리'),(2544,46,'섹션 0. 제코베 포트폴리오 템플릿','제코베 포트폴리오 템플릿'),(2545,46,'섹션 1. Intro','얕은물 강의자료(인쇄용 PDF파일)'),(2546,46,'섹션 1. Intro','깊은물 강의노트(Jupyter notebook)'),(2547,46,'섹션 1. Intro','HTML, CSS, JS와 Front-end! 무엇을 할 수 있나요!?'),(2548,46,'섹션 1. Intro','Python과 Back-end! 무엇을 할 수 있나요!?'),(2549,46,'섹션 2. 얕은 물 환경 설정','Google Colab 사용법'),(2550,46,'섹션 3. 얕은 물','라이캣의 탄생 - 변수와 type'),(2551,46,'섹션 3. 얕은 물','라이캣의 탄생 - int, float, str, bool'),(2552,46,'섹션 3. 얕은 물','라이캣의 탄생 - list, tuple, dict, set'),(2553,46,'섹션 3. 얕은 물','라이캣의 탄생 - 형변환과 input, print'),(2554,46,'섹션 3. 얕은 물','생선을 잡아라 - 산술연산과 할당연산'),(2555,46,'섹션 3. 얕은 물','생선을 잡아라 - 비교 연산'),(2556,46,'섹션 3. 얕은 물','생선을 잡아라 - 논리 연산'),(2557,46,'섹션 3. 얕은 물','생선을 잡아라 - 비트 연산'),(2558,46,'섹션 3. 얕은 물','생선을 잡아라 - 멤버 연산과 식별 연산, 연산자 우선순위'),(2559,46,'섹션 3. 얕은 물','[연습문제] 캣의 해골섬 출항'),(2560,46,'섹션 3. 얕은 물','효율적으로 생선 잡기 - 함수'),(2561,46,'섹션 3. 얕은 물','효율적으로 생선 잡기 - global'),(2562,46,'섹션 3. 얕은 물','효율적으로 생선 잡기 - 함수 안에 함수'),(2563,46,'섹션 3. 얕은 물','생선 회사를 운영하라 - if, elif, else'),(2564,46,'섹션 3. 얕은 물','[연습문제] 캣의 고객 관리'),(2565,46,'섹션 3. 얕은 물','라이캣의 EXIT - for'),(2566,46,'섹션 3. 얕은 물','라이캣의 EXIT - while'),(2567,46,'섹션 3. 얕은 물','[연습문제] 사자탈을 쓴 캣'),(2568,46,'섹션 3. 얕은 물','[연습문제] 쏘아진 화살'),(2569,46,'섹션 3. 얕은 물','파이와 썬의 알고리즘 7원석을 찾아서 - 클래스'),(2570,46,'섹션 3. 얕은 물','[연습문제] 캣의 모험 자금을 모아라'),(2571,46,'섹션 3. 얕은 물','[연습문제] 파이와 썬이 남긴 단 하나의 단서'),(2572,46,'섹션 4. 깊은 물 환경설정','Python Editor 설치'),(2573,46,'섹션 4. 깊은 물 환경설정','Jupyter notebook 사용법'),(2574,46,'섹션 5. 깊은 물','주석과 변수'),(2575,46,'섹션 5. 깊은 물','입력과 출력'),(2576,46,'섹션 5. 깊은 물','숫자 자료형'),(2577,46,'섹션 5. 깊은 물','문자 자료형'),(2578,46,'섹션 5. 깊은 물','문자 자료형 - 연산과 format'),(2579,46,'섹션 5. 깊은 물','형변환'),(2580,46,'섹션 5. 깊은 물','연산 - 산술연산과 비교연산'),(2581,46,'섹션 5. 깊은 물','연산 - 논리연산'),(2582,46,'섹션 5. 깊은 물','연산 - 비트연산, 할당연산, 식별연산, in 구문'),(2583,46,'섹션 5. 깊은 물','함수 - 기본 개념'),(2584,46,'섹션 5. 깊은 물','함수 - 지역변수와 전역변수'),(2585,46,'섹션 5. 깊은 물','함수 - 재귀함수'),(2586,46,'섹션 5. 깊은 물','리스트'),(2587,46,'섹션 5. 깊은 물','리스트 - 다차원 리스트와 built-in functions , range, list comprehension'),(2588,46,'섹션 5. 깊은 물','튜플'),(2589,46,'섹션 5. 깊은 물','딕셔너리'),(2590,46,'섹션 5. 깊은 물','셋'),(2591,46,'섹션 5. 깊은 물','조건문 - if, elif, else'),(2592,46,'섹션 5. 깊은 물','반복문 - for, while, continue, pass, break, else'),(2593,46,'섹션 5. 깊은 물','클래스 - 클래스 변수와 인스턴스 변수'),(2594,46,'섹션 5. 깊은 물','클래스 - 상속'),(2595,46,'섹션 5. 깊은 물','모듈과 패키지 - import'),(2596,46,'섹션 5. 깊은 물','built-in functions'),(2597,46,'섹션 5. 깊은 물','args, kwargs'),(2598,46,'섹션 5. 깊은 물','lambda와 응용식'),(2599,46,'섹션 5. 깊은 물','파일 입출력'),(2600,46,'섹션 5. 깊은 물','이터레이터 순회 가능한 객체 - iter, __next__, slice'),(2601,46,'섹션 5. 깊은 물','제너레이터'),(2602,46,'섹션 5. 깊은 물','factory 함수, 클로저'),(2603,46,'섹션 5. 깊은 물','decorator'),(2604,46,'섹션 5. 깊은 물','예외처리'),(2605,46,'섹션 6. Python 재귀함수 자세히 알아보기!','반복문을 이용한 1부터 100까지의 합과 곱'),(2606,46,'섹션 6. Python 재귀함수 자세히 알아보기!','재귀함수를 이용한 1부터 100까지의 합과 곱'),(2607,46,'섹션 6. Python 재귀함수 자세히 알아보기!','재귀함수 사례'),(2608,46,'섹션 6. Python 재귀함수 자세히 알아보기!','재귀함수 보강예제'),(2609,46,'섹션 7. Python 30분 요약 강좌','Python 30분 요약 강좌 - 1부'),(2610,46,'섹션 7. Python 30분 요약 강좌','Python 30분 요약 강좌 - 2부'),(2611,46,'섹션 8. Python 100제(PDF 파일)','Python 100제 - 노션링크, PDF 파일'),(2612,46,'섹션 9. 보너스 영상!(Python 최신 경향, 추가 보충설명)','Python 3.8 무엇이 달라졌나요?'),(2613,46,'섹션 9. 보너스 영상!(Python 최신 경향, 추가 보충설명)','Python 3.9 무엇이 달라졌나요?'),(2614,46,'섹션 9. 보너스 영상!(Python 최신 경향, 추가 보충설명)','보강 - in 구문'),(2615,46,'섹션 9. 보너스 영상!(Python 최신 경향, 추가 보충설명)','보강 - 2의 보수'),(2616,47,'섹션 0. ----- 오리엔테이션 -----','강의 소개'),(2617,47,'섹션 1. 제작할 앱 & API 소개 & Vue.js 스타일 가이드 소개','개발 환경 설정 및 비공개 리포지토리 주소 안내'),(2618,47,'섹션 1. 제작할 앱 & API 소개 & Vue.js 스타일 가이드 소개','VSCode 플러그인 목록'),(2619,47,'섹션 1. 제작할 앱 & API 소개 & Vue.js 스타일 가이드 소개','Vue.js 스타일 가이드 및 코딩 컨벤션 소개'),(2620,47,'섹션 3. 소개 및 설계','제작할 사이트 및 API 소개'),(2621,47,'섹션 3. 소개 및 설계','애플리케이션 라우터 설계'),(2622,47,'섹션 3. 소개 및 설계','비공개 리포지토리 소개 및 뷰 CLI 설명'),(2623,47,'섹션 3. 소개 및 설계','Vue CLI 2.x vs Vue CLI 3.x'),(2624,47,'섹션 4. 프로젝트 셋업','Vue CLI로 프로젝트 생성 및 ESLint 로그 확인'),(2625,47,'섹션 4. 프로젝트 셋업','ESLint 도구 소개와 사용해야 하는 이유?'),(2626,47,'섹션 4. 프로젝트 셋업','Vue CLI 3.x에서 ESLint 설정 끄는 방법'),(2627,47,'섹션 5. 라우터 기본','라우터 설치 및 라우터 구현'),(2628,47,'섹션 5. 라우터 기본','router-view를 이용한 라우팅 컴포넌트 표시'),(2629,47,'섹션 5. 라우터 기본','redirect 속성과 router-link'),(2630,47,'섹션 5. 라우터 기본','ToolBar의 라우터 링크 스타일링'),(2631,47,'섹션 5. 라우터 기본','[실습 안내] ItemView와 UserView 라우터 구현'),(2632,47,'섹션 5. 라우터 기본','라우터 폴더 작명 팁과 라우터 mode 안내'),(2633,47,'섹션 6. API 구현','axios를 이용한 api 호출'),(2634,47,'섹션 6. API 구현','[실습 안내] axios의 api 함수 구조화 방법 및 실습 안내'),(2635,47,'섹션 6. API 구현','[실습] JobsView와 AskView 구현'),(2636,47,'섹션 6. API 구현','자바스크립트 this 4가지와 화살표 함수의 this'),(2637,47,'섹션 6. API 구현','자바스크립트 비동기 처리(1) - Callback'),(2638,47,'섹션 6. API 구현','자바스크립트 비동기 처리(2) - Promise'),(2639,47,'섹션 7. 스토어 구현','Vuex 설치 및 Vuex가 적용된 앱 구조 소개'),(2640,47,'섹션 7. 스토어 구현','Vuex 모듈화 및 state 적용'),(2641,47,'섹션 7. 스토어 구현','NewsView에 actions와 mutations 적용'),(2642,47,'섹션 7. 스토어 구현','[실습 안내] JobsView와 AskView 실습 안내'),(2643,47,'섹션 7. 스토어 구현','[실습] JobsView에 스토어 적용'),(2644,47,'섹션 7. 스토어 구현','[실습] map 헬퍼 함수를 이용한 AskView 풀이'),(2645,47,'섹션 7. 스토어 구현','스토어 속성 모듈화'),(2646,47,'섹션 8. ----- 중간 정리 -----','중간 정리 및 스타일링'),(2647,47,'섹션 9. 라우터 실전','동적 라우트 매칭 원리 및 적용'),(2648,47,'섹션 9. 라우터 실전','라우터 params을 이용한 User 상세 페이지 구현'),(2649,47,'섹션 9. 라우터 실전','[실습] 질문 상세 페이지 구현 실습 안내'),(2650,47,'섹션 9. 라우터 실전','[실습] 질문 상세 페이지 실습 풀이 및 오류 디버깅'),(2651,47,'섹션 9. 라우터 실전','질문 상세 페이지 스타일링 및 v-html 디렉티브 사용법 소개'),(2652,47,'섹션 9. 라우터 실전','라우터 트랜지션'),(2653,47,'섹션 10. 리팩토링 1 - 리스트 아이템 컴포넌트 공통화','컴포넌트 공통화 리팩토링 소개'),(2654,47,'섹션 10. 리팩토링 1 - 리스트 아이템 컴포넌트 공통화','[실습 안내] 뉴스 리스트 스타일링'),(2655,47,'섹션 10. 리팩토링 1 - 리스트 아이템 컴포넌트 공통화','[실습] 질문, 구직 리스트 스타일링'),(2656,47,'섹션 10. 리팩토링 1 - 리스트 아이템 컴포넌트 공통화','[실습 안내] 공통 컴포넌트 ListItem 제작 및 실습 안내'),(2657,47,'섹션 10. 리팩토링 1 - 리스트 아이템 컴포넌트 공통화','[실습] 공통 컴포넌트 구현(1) - 페이지별 데이터 분기'),(2658,47,'섹션 10. 리팩토링 1 - 리스트 아이템 컴포넌트 공통화','공통 컴포넌트 구현(2) - computed 속성'),(2659,47,'섹션 10. 리팩토링 1 - 리스트 아이템 컴포넌트 공통화','공통 컴포넌트 구현(3) - template 속성과 v-if 디렉티브 활용 1'),(2660,47,'섹션 10. 리팩토링 1 - 리스트 아이템 컴포넌트 공통화','공통 컴포넌트 구현(4) - template 속성과 v-if 디렉티브 활용 2'),(2661,47,'섹션 11. 리팩토링 2 - 사용자 프로필 컴포넌트 공통화','사용자 프로필 컴포넌트 소개 및 등록'),(2662,47,'섹션 11. 리팩토링 2 - 사용자 프로필 컴포넌트 공통화','사용자 컴포넌트 데이터 흐름 처리 1'),(2663,47,'섹션 11. 리팩토링 2 - 사용자 프로필 컴포넌트 공통화','사용자 컴포넌트 데이터 흐름 처리 2'),(2664,47,'섹션 11. 리팩토링 2 - 사용자 프로필 컴포넌트 공통화','2가지 데이터 처리 흐름 비교'),(2665,47,'섹션 11. 리팩토링 2 - 사용자 프로필 컴포넌트 공통화','slot을 이용한 사용자 프로필 컴포넌트 구현'),(2666,47,'섹션 11. 리팩토링 2 - 사용자 프로필 컴포넌트 공통화','사용자 프로필 컴포넌트 스타일링 및 코드 정리'),(2667,47,'섹션 12. 리팩토링 3 - Mixin과 하이 오더 컴포넌트','컴포넌트 재활용 방법 및 재활용할 포인트 소개'),(2668,47,'섹션 12. 리팩토링 3 - Mixin과 하이 오더 컴포넌트','이벤트 버스를 이용한 스피너 컴포넌트 구현'),(2669,47,'섹션 12. 리팩토링 3 - Mixin과 하이 오더 컴포넌트','스피너 실행 및 종료 시점 알아보기'),(2670,47,'섹션 12. 리팩토링 3 - Mixin과 하이 오더 컴포넌트','하이 오더 컴포넌트(HOC) 소개 및 구현'),(2671,47,'섹션 12. 리팩토링 3 - Mixin과 하이 오더 컴포넌트','하이 오더 컴포넌트에서 사용할 ListView 컴포넌트 구현'),(2672,47,'섹션 12. 리팩토링 3 - Mixin과 하이 오더 컴포넌트','하이 오더 컴포넌트가 적용된 앱 구조 설명 및 흐름 정리'),(2673,47,'섹션 12. 리팩토링 3 - Mixin과 하이 오더 컴포넌트','Mixin의 개요와 활용처 그리고 HOC와의 차이점'),(2674,47,'섹션 12. 리팩토링 3 - Mixin과 하이 오더 컴포넌트','[실습 안내] Mixin 적용 후 HOC 구조와 비교'),(2675,47,'섹션 12. 리팩토링 3 - Mixin과 하이 오더 컴포넌트','[실습] Mixin 실습 및 컴포넌트 재활용 방법에 대한 리뷰'),(2676,47,'섹션 13. 리팩토링 4 - 데이터 호출과 UX','UX를 고려한 데이터 호출 시점'),(2677,47,'섹션 13. 리팩토링 4 - 데이터 호출과 UX','라이프 사이클 훅을 이용한 데이터 호출 방법의 문제와 비동기 처리 코드 수정'),(2678,47,'섹션 13. 리팩토링 4 - 데이터 호출과 UX','라우터 네비게이션을 이용한 데이터 호출 방법'),(2679,47,'섹션 13. 리팩토링 4 - 데이터 호출과 UX','[실습] 라우터 네비게이션 가드 실습 안내'),(2680,47,'섹션 13. 리팩토링 4 - 데이터 호출과 UX','[실습] 라우터 네비게이션 가드 실습 및 스피너 종료 시점 변경'),(2681,47,'섹션 13. 리팩토링 4 - 데이터 호출과 UX','UX를 고려한 데이터 호출 시점 요약 정리 및 추가 고려 사항 안내'),(2682,47,'섹션 14. 리팩토링 5 - async & await를 이용한 비동기 처리','자바스크립트 비동기 처리 패턴의 발전 과정'),(2683,47,'섹션 14. 리팩토링 5 - async & await를 이용한 비동기 처리','async & await 문법 소개'),(2684,47,'섹션 14. 리팩토링 5 - async & await를 이용한 비동기 처리','async & await 예제 소개'),(2685,47,'섹션 14. 리팩토링 5 - async & await를 이용한 비동기 처리','async await 예제 실습'),(2686,47,'섹션 14. 리팩토링 5 - async & await를 이용한 비동기 처리','async await 에러 처리 방법과 공통화 함수 작성 방법'),(2687,47,'섹션 14. 리팩토링 5 - async & await를 이용한 비동기 처리','async 함수를 이용한 코드 리팩토링'),(2688,47,'섹션 14. 리팩토링 5 - async & await를 이용한 비동기 처리','[실습 안내] async await 실습 안내'),(2689,47,'섹션 14. 리팩토링 5 - async & await를 이용한 비동기 처리','[실습] async await 실습 풀이'),(2690,47,'섹션 16. 외부 라이브러리 모듈화 방법(차트)','라이브러리 모듈화의 이유와 배경'),(2691,47,'섹션 16. 외부 라이브러리 모듈화 방법(차트)','차트 라이브러리 설치 및 차트 그리기'),(2692,47,'섹션 16. 외부 라이브러리 모듈화 방법(차트)','BarChart 컴포넌트화 작업'),(2693,47,'섹션 16. 외부 라이브러리 모듈화 방법(차트)','[실습] LineChart 실습 안내'),(2694,47,'섹션 16. 외부 라이브러리 모듈화 방법(차트)','[실습] LineChart 제작 및 차트 충돌 문제 해결'),(2695,47,'섹션 16. 외부 라이브러리 모듈화 방법(차트)','Vue에서 DOM을 접근하는 방법인 ref 속성 소개'),(2696,47,'섹션 16. 외부 라이브러리 모듈화 방법(차트)','Vue.js 플러그인 소개 및 차트 플러그인 제작'),(2697,47,'섹션 16. 외부 라이브러리 모듈화 방법(차트)','결합력 높은 차트 컴포넌트 모듈 제작 방법'),(2698,47,'섹션 17. 컴포넌트 디자인 패턴','Component Design Patterns 소개'),(2699,47,'섹션 17. 컴포넌트 디자인 패턴','Common Approach'),(2700,47,'섹션 17. 컴포넌트 디자인 패턴','Component with Slots - Slot vs Props'),(2701,47,'섹션 17. 컴포넌트 디자인 패턴','Component with Slots 구현 방법과 활용처'),(2702,47,'섹션 17. 컴포넌트 디자인 패턴','Controlled Component - Input 박스를 다룰 때 생기는 문제점'),(2703,47,'섹션 17. 컴포넌트 디자인 패턴','Controlled Component - 구현 방법과 활용처'),(2704,47,'섹션 17. 컴포넌트 디자인 패턴','Renderless Component - 소개'),(2705,47,'섹션 17. 컴포넌트 디자인 패턴','Renderless Component - Render Function'),(2706,47,'섹션 17. 컴포넌트 디자인 패턴','Renderless Component - 구현 방법과 활용처'),(2707,47,'섹션 18. 서비스 배포 환경 구성','서비스 배포를 위한 명령어 소개 및 실습'),(2708,47,'섹션 18. 서비스 배포 환경 구성','Netlify를 이용한 배포 실습'),(2709,47,'섹션 18. 서비스 배포 환경 구성','base 디렉토리 설정 및 배포 완료'),(2710,47,'섹션 18. 서비스 배포 환경 구성','SPA 호스팅시에 서버에 추가해줘야 하는 설정 안내'),(2711,47,'섹션 18. 서비스 배포 환경 구성','env 환경 변수 파일을 이용한 옵션 변경 방법'),(2712,48,'섹션 0. 제코베 포트폴리오 템플릿','제코베 포트폴리오 템플릿'),(2713,48,'섹션 0. 제코베 포트폴리오 템플릿','데이터 분석 분석보고서 양식'),(2714,48,'섹션 0. 제코베 포트폴리오 템플릿','수업 PDF와 Notion 링크'),(2715,48,'섹션 1. 필수시청! 강의 듣는 법과 각 분여별 가볍게 훑어보기!','강의 듣는 법!'),(2716,48,'섹션 1. 필수시청! 강의 듣는 법과 각 분여별 가볍게 훑어보기!','데이터 분석에 대한 고찰'),(2717,48,'섹션 1. 필수시청! 강의 듣는 법과 각 분여별 가볍게 훑어보기!','가볍게 훑어보는 인공지능'),(2718,48,'섹션 1. 필수시청! 강의 듣는 법과 각 분여별 가볍게 훑어보기!','HTML, CSS, JS와 Front-end! 무엇을 할 수 있나요?!'),(2719,48,'섹션 1. 필수시청! 강의 듣는 법과 각 분여별 가볍게 훑어보기!','Python과 Back-end! 무엇을 할 수 있나요?!'),(2720,48,'섹션 1. 필수시청! 강의 듣는 법과 각 분여별 가볍게 훑어보기!','Jupyter notebook 사용법'),(2721,48,'섹션 1. 필수시청! 강의 듣는 법과 각 분여별 가볍게 훑어보기!','Google Colab 사용법'),(2722,48,'섹션 2. 1일차 - Numpy 기초','수업 자료 및 교재 링크'),(2723,48,'섹션 2. 1일차 - Numpy 기초','numpy 소개'),(2724,48,'섹션 2. 1일차 - Numpy 기초','numpy를 사용하는 이유와 간단한 행렬 연산'),(2725,48,'섹션 2. 1일차 - Numpy 기초','numpy의 차원'),(2726,48,'섹션 2. 1일차 - Numpy 기초','numpy의 자료형과 형변환'),(2727,48,'섹션 2. 1일차 - Numpy 기초','numpy의 arange와 reshape 값의 호출'),(2728,48,'섹션 2. 1일차 - Numpy 기초','slicing'),(2729,48,'섹션 2. 1일차 - Numpy 기초','배열의 연결과 분할'),(2730,48,'섹션 2. 1일차 - Numpy 기초','다양한 matrix 만들기'),(2731,48,'섹션 2. 1일차 - Numpy 기초','최댓값과 최솟값'),(2732,48,'섹션 2. 1일차 - Numpy 기초','다양한 집계함수'),(2733,48,'섹션 2. 1일차 - Numpy 기초','Boolean Indexing'),(2734,48,'섹션 2. 1일차 - Numpy 기초','Broadcasting'),(2735,48,'섹션 2. 1일차 - Numpy 기초','Random'),(2736,48,'섹션 3. 2일차 - Pandas 기초','수업 자료'),(2737,48,'섹션 3. 2일차 - Pandas 기초','Series'),(2738,48,'섹션 3. 2일차 - Pandas 기초','Series의 key,value, index'),(2739,48,'섹션 3. 2일차 - Pandas 기초','결측값 처리하기'),(2740,48,'섹션 3. 2일차 - Pandas 기초','Series의 Multi-Index'),(2741,48,'섹션 3. 2일차 - Pandas 기초','연산과 집계함수'),(2742,48,'섹션 3. 2일차 - Pandas 기초','Series의 연결'),(2743,48,'섹션 3. 2일차 - Pandas 기초','DataFrame'),(2744,48,'섹션 3. 2일차 - Pandas 기초','DataFrame의 데이터 조작'),(2745,48,'섹션 3. 2일차 - Pandas 기초','DataFrame의 Multi-Index'),(2746,48,'섹션 4. 3일차 - 소규모 샘플데이터로 다뤄보는 Pandas','수업 자료'),(2747,48,'섹션 4. 3일차 - 소규모 샘플데이터로 다뤄보는 Pandas','Pandas로 데이터 다루기'),(2748,48,'섹션 5. 4일차 - 데이터 시각화','수업 자료'),(2749,48,'섹션 5. 4일차 - 데이터 시각화','EDA 그래프 분석 - 이미지 분석 개요'),(2750,48,'섹션 5. 4일차 - 데이터 시각화','matplotlib 기본 사용법 (line 종류, 색)'),(2751,48,'섹션 5. 4일차 - 데이터 시각화','matplotlib 경계표현'),(2752,48,'섹션 5. 4일차 - 데이터 시각화','matplotlib legend'),(2753,48,'섹션 5. 4일차 - 데이터 시각화','scatter와 hist'),(2754,48,'섹션 5. 4일차 - 데이터 시각화','basic attribute와 marker'),(2755,48,'섹션 5. 4일차 - 데이터 시각화','Bar Chart와 Pie Chart'),(2756,48,'섹션 5. 4일차 - 데이터 시각화','plot의 분할과 텍스트 삽입'),(2757,48,'섹션 5. 4일차 - 데이터 시각화','matplotlib에 기타 그래프 소개'),(2758,48,'섹션 5. 4일차 - 데이터 시각화','matplotlib Cheetsheet (영상강좌X)'),(2759,48,'섹션 6. 5일차 - 시각화 패키지','수업 자료'),(2760,48,'섹션 6. 5일차 - 시각화 패키지','seaborn'),(2761,48,'섹션 6. 5일차 - 시각화 패키지','plotly'),(2762,48,'섹션 7. 6일차 - 코로나 데이터 분석','수업 자료'),(2763,48,'섹션 7. 6일차 - 코로나 데이터 분석','코로나 데이터 분석(성별, 나이)'),(2764,48,'섹션 7. 6일차 - 코로나 데이터 분석','코로나 데이터 분석(지역)'),(2765,48,'섹션 7. 6일차 - 코로나 데이터 분석','코로나 데이터 분석(한국)'),(2766,48,'섹션 7. 6일차 - 코로나 데이터 분석','코로나 데이터 분석(세계 데이터)'),(2767,48,'섹션 8. 7일차 - 수학적이론','수업 자료'),(2768,48,'섹션 8. 7일차 - 수학적이론','통계 이론'),(2769,48,'섹션 8. 7일차 - 수학적이론','확률 이론'),(2770,48,'섹션 8. 7일차 - 수학적이론','미분 개념'),(2771,48,'섹션 8. 7일차 - 수학적이론','선형 회귀'),(2772,48,'섹션 8. 7일차 - 수학적이론','행렬'),(2773,48,'섹션 9. 8일차 - 크롤링(request, beautifulsoup)','크롤링(request, beautifulsoup) - 1'),(2774,48,'섹션 9. 8일차 - 크롤링(request, beautifulsoup)','크롤링(request, beautifulsoup) - 2'),(2775,48,'섹션 10. 보너스챕터 :: Python 30분 요약강좌','Python 30분 요약강좌 - 1부'),(2776,48,'섹션 10. 보너스챕터 :: Python 30분 요약강좌','Python 30분 요약강좌 - 2부'),(2777,48,'섹션 11. Advance 챕터 :: 이력서 100개를 분석하라!','수업 자료'),(2778,48,'섹션 11. Advance 챕터 :: 이력서 100개를 분석하라!','개선된 코드(class 구현)'),(2779,48,'섹션 11. Advance 챕터 :: 이력서 100개를 분석하라!','개인정보 추출'),(2780,48,'섹션 11. Advance 챕터 :: 이력서 100개를 분석하라!','학교정보 추출'),(2781,48,'섹션 11. Advance 챕터 :: 이력서 100개를 분석하라!','모듈화'),(2782,48,'섹션 11. Advance 챕터 :: 이력서 100개를 분석하라!','영어 능력 정보 추출'),(2783,48,'섹션 11. Advance 챕터 :: 이력서 100개를 분석하라!','자격증 정보 추출'),(2784,48,'섹션 11. Advance 챕터 :: 이력서 100개를 분석하라!','교육활동 및 수상경력 정보 추출'),(2785,48,'섹션 11. Advance 챕터 :: 이력서 100개를 분석하라!','군필 여부와 언어능력 추출'),(2786,48,'섹션 11. Advance 챕터 :: 이력서 100개를 분석하라!','여러개의 파일 읽어오기'),(2787,48,'섹션 11. Advance 챕터 :: 이력서 100개를 분석하라!','읽어온 100개의 데이터 가공하기'),(2788,48,'섹션 11. Advance 챕터 :: 이력서 100개를 분석하라!','결측치 처리 및 데이터 보완'),(2789,48,'섹션 11. Advance 챕터 :: 이력서 100개를 분석하라!','데이터 시각화'),(2790,48,'섹션 11. Advance 챕터 :: 이력서 100개를 분석하라!','엑셀로 보고서 만들기'),(2791,48,'섹션 11. Advance 챕터 :: 이력서 100개를 분석하라!','최종 보고서 다듬기'),(2792,48,'섹션 12. 실전 돌입! 데이터 분석으로 제주 돋보기!','수업 자료'),(2793,48,'섹션 12. 실전 돌입! 데이터 분석으로 제주 돋보기!','제주 여행, 언제 가야 하나요?'),(2794,48,'섹션 12. 실전 돌입! 데이터 분석으로 제주 돋보기!','제주에서 가장 핫한 여행지는 어디인가요?'),(2795,48,'섹션 12. 실전 돌입! 데이터 분석으로 제주 돋보기!','제주 데이터 허브 이용해보기!'),(2796,48,'섹션 12. 실전 돌입! 데이터 분석으로 제주 돋보기!','제주도 인구구조를 그래프로 만들어보기!'),(2797,48,'섹션 12. 실전 돌입! 데이터 분석으로 제주 돋보기!','3다 제주도, 진짜 여자가 많나요?'),(2798,48,'섹션 12. 실전 돌입! 데이터 분석으로 제주 돋보기!','제주에 나만의 가게를 차리고 싶어요 - 1부'),(2799,48,'섹션 12. 실전 돌입! 데이터 분석으로 제주 돋보기!','제주에 나만의 가게를 차리고 싶어요 - 2부'),(2800,48,'섹션 12. 실전 돌입! 데이터 분석으로 제주 돋보기!','제주에 나만의 가게를 차리고 싶어요 - 3부'),(2801,48,'섹션 13. 20년 하반기 추가 영상 : 생애 첫 SQL With 제코베','웹에서 바로 SQL 실습해보기'),(2802,48,'섹션 13. 20년 하반기 추가 영상 : 생애 첫 SQL With 제코베','SQL에서 사용하는 함수 알아보기'),(2803,48,'섹션 13. 20년 하반기 추가 영상 : 생애 첫 SQL With 제코베','SQL의 조건문!'),(2804,48,'섹션 13. 20년 하반기 추가 영상 : 생애 첫 SQL With 제코베','PHP + MySQL로 간단한 웹페이지 만들기!'),(2805,48,'섹션 14. 부록 : 폴리움으로 제주 오름 정보 시각화하기','폴리움 한글깨짐 현상 해결하기'),(2806,48,'섹션 14. 부록 : 폴리움으로 제주 오름 정보 시각화하기','오름 정보 시각화하기'),(2807,49,'섹션 0. 제코베 포트폴리오 템플릿','제코베 포트폴리오 템플릿'),(2808,49,'섹션 1. 강의 안내 영상','강의 안내'),(2809,49,'섹션 2. HTML, CSS, JS, Python은 무엇이고 무엇을 할 수 있나요?','HTML, CSS, JS와 Front-end 개발자에 대하여'),(2810,49,'섹션 2. HTML, CSS, JS, Python은 무엇이고 무엇을 할 수 있나요?','Python과 Back-end 개발자에 대하여'),(2811,49,'섹션 3. front-end','완성본 예제 소스'),(2812,49,'섹션 3. front-end','인트로'),(2813,49,'섹션 3. front-end','settings'),(2814,49,'섹션 3. front-end','웹스톰 100% 활용하기'),(2815,49,'섹션 3. front-end','수업방향'),(2816,49,'섹션 3. front-end','basic html part1'),(2817,49,'섹션 3. front-end','basic html part2'),(2818,49,'섹션 3. front-end','basic css part1'),(2819,49,'섹션 3. front-end','basic css part2'),(2820,49,'섹션 3. front-end','basic css part3'),(2821,49,'섹션 3. front-end','reset'),(2822,49,'섹션 3. front-end','header part1'),(2823,49,'섹션 3. front-end','header part2'),(2824,49,'섹션 3. front-end','header part3'),(2825,49,'섹션 3. front-end','left box'),(2826,49,'섹션 3. front-end','create_box part01'),(2827,49,'섹션 3. front-end','create_box part02'),(2828,49,'섹션 3. front-end','contents part01'),(2829,49,'섹션 3. front-end','contents part02'),(2830,49,'섹션 3. front-end','right_box'),(2831,49,'섹션 3. front-end','side_box'),(2832,49,'섹션 3. front-end','반응형'),(2833,49,'섹션 3. front-end','javascript란?'),(2834,49,'섹션 3. front-end','변수와 상수'),(2835,49,'섹션 3. front-end','데이터타입'),(2836,49,'섹션 3. front-end','연산자'),(2837,49,'섹션 3. front-end','조건문'),(2838,49,'섹션 3. front-end','반복문'),(2839,49,'섹션 3. front-end','선택자'),(2840,49,'섹션 3. front-end','click_event'),(2841,49,'섹션 3. front-end','add, remove, toggle'),(2842,49,'섹션 3. front-end','scroll_event'),(2843,49,'섹션 3. front-end','resize_event'),(2844,49,'섹션 3. front-end','event delegation'),(2845,49,'섹션 3. front-end','ajax란?'),(2846,49,'섹션 3. front-end','ajax - 댓글달기'),(2847,49,'섹션 3. front-end','ajax - 댓글삭제'),(2848,49,'섹션 3. front-end','ajax - 무한스크롤링'),(2849,49,'섹션 3. front-end','file-reader'),(2850,49,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','소스코드 다운로드'),(2851,49,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Flex 시작하기'),(2852,49,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Flex 핵심정리 #1 - 배치의 흐름'),(2853,49,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Flex 핵심정리 #2 - 간단한 예제'),(2854,49,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Flex 핵심정리 #3 - 전체 아이템 정렬'),(2855,49,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Flex 핵심정리 #4 - 유연한 박스'),(2856,49,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Flex 핵심정리 #5 - Flex 속성 활용'),(2857,49,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Flex 핵심정리 #6 - 반응형 컬럼'),(2858,49,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Flex 핵심정리 #7 - 유용한 기법들'),(2859,49,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Flex 핵심정리 #8 - 개별 아이템 속성'),(2860,49,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Grid 시작하기'),(2861,49,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Grid 핵심정리 #1 - 용어 정리'),(2862,49,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Grid 핵심정리 #2 - 그리드의 기본 형태'),(2863,49,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Grid 핵심정리 #3 - 자동으로 채우기'),(2864,49,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Grid 핵심정리 #4 - 셀 간격 만들기'),(2865,49,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Grid 핵심정리 #5 - 그리드 자동 정의'),(2866,49,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Grid 핵심정리 #6 - 각 셀의 영역 지정'),(2867,49,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Grid 핵심정리 #7 - 영역 이름 사용하기'),(2868,49,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Grid 핵심정리 #8 - 자동 배치 알고리즘'),(2869,49,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Grid 핵심정리 #9 - 정렬하기'),(2870,49,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Grid 핵심정리 #10 - 순서 정하기'),(2871,49,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Facebook 레이아웃 Grid로 만들기 #1'),(2872,49,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Facebook 레이아웃 Grid로 만들기 #2'),(2873,49,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Facebook 레이아웃 Grid로 만들기 #3'),(2874,49,'섹션 5. back-end','settings'),(2875,49,'섹션 5. back-end','accounts - base'),(2876,49,'섹션 5. back-end','accounts-model'),(2877,49,'섹션 5. back-end','accounts-admin'),(2878,49,'섹션 5. back-end','static'),(2879,49,'섹션 5. back-end','accounts'),(2880,49,'섹션 5. back-end','accounts-view'),(2881,49,'섹션 5. back-end','accounts-form'),(2882,49,'섹션 5. back-end','accounts-templates'),(2883,49,'섹션 5. back-end','오류해결방법과 도움요청하기 -:)'),(2884,49,'섹션 5. back-end','post'),(2885,49,'섹션 5. back-end','post header'),(2886,49,'섹션 5. back-end','post header 2'),(2887,49,'섹션 5. back-end','post models'),(2888,49,'섹션 5. back-end','post admin'),(2889,49,'섹션 5. back-end','post views'),(2890,49,'섹션 5. back-end','post templates'),(2891,49,'섹션 5. back-end','like bookmark models'),(2892,49,'섹션 5. back-end','like bookmark admin'),(2893,49,'섹션 5. back-end','like bookmark models'),(2894,49,'섹션 5. back-end','like bookmark urls views'),(2895,49,'섹션 5. back-end','like ajax'),(2896,49,'섹션 5. back-end','like 버튼 로그인 여부 확인해서 active 상태로 변경하기'),(2897,49,'섹션 5. back-end','bookmark ajax'),(2898,49,'섹션 5. back-end','bookmark list'),(2899,49,'섹션 5. back-end','친구기능동작설명'),(2900,49,'섹션 5. back-end','friends models'),(2901,49,'섹션 5. back-end','friends admin'),(2902,49,'섹션 5. back-end','friends url view'),(2903,49,'섹션 5. back-end','친구상태표시'),(2904,49,'섹션 5. back-end','friends ajax 친구요청 보내기'),(2905,49,'섹션 5. back-end','friends 친구수락 친구리스트 출력'),(2906,49,'섹션 5. back-end','comment models'),(2907,49,'섹션 5. back-end','comment admin'),(2908,49,'섹션 5. back-end','comment url view'),(2909,49,'섹션 5. back-end','comment form'),(2910,49,'섹션 5. back-end','comment list'),(2911,49,'섹션 5. back-end','comment ajax new'),(2912,49,'섹션 5. back-end','comment delete'),(2913,49,'섹션 5. back-end','newpost models'),(2914,49,'섹션 5. back-end','newpost admin'),(2915,49,'섹션 5. back-end','newpost url views'),(2916,49,'섹션 5. back-end','newpost forms'),(2917,49,'섹션 5. back-end','newpost ajax'),(2918,49,'섹션 5. back-end','newpost tag'),(2919,49,'섹션 5. back-end','newpost 사용자정의필터'),(2920,49,'섹션 5. back-end','edit delete post views'),(2921,49,'섹션 5. back-end','edit delete post template'),(2922,49,'섹션 5. back-end','무한스크롤'),(2923,49,'섹션 5. back-end','무한스크롤 ajax'),(2924,49,'섹션 5. back-end','chat 세팅'),(2925,49,'섹션 5. back-end','chat models views admin'),(2926,49,'섹션 5. back-end','chat urls views'),(2927,49,'섹션 5. back-end','chat chat_list'),(2928,49,'섹션 5. back-end','chat room'),(2929,49,'섹션 5. back-end','chat routing'),(2930,49,'섹션 5. back-end','chat messenger'),(2931,49,'섹션 5. back-end','chat consumer'),(2932,49,'섹션 6. 페이스북 User 데이터 분석','Django에서 Jupyter Notebook 사용해보기'),(2933,49,'섹션 6. 페이스북 User 데이터 분석','ChartJS 살펴보기'),(2934,49,'섹션 6. 페이스북 User 데이터 분석','데이터분석 App page 만들기'),(2935,49,'섹션 6. 페이스북 User 데이터 분석','데이터 DataFrame으로 만들고 확인하기'),(2936,49,'섹션 6. 페이스북 User 데이터 분석','데이터 분석 및 시각화'),(2937,49,'섹션 6. 페이스북 User 데이터 분석','데이터 분석 결과 페이지 만들기'),(2938,49,'섹션 6. 페이스북 User 데이터 분석','최종소스코드'),(2939,49,'섹션 7. 기초 :: 데이터 분석','실습환경구축'),(2940,49,'섹션 7. 기초 :: 데이터 분석','강의자료 다운로드'),(2941,49,'섹션 7. 기초 :: 데이터 분석','1회차 - numpy 소개'),(2942,49,'섹션 7. 기초 :: 데이터 분석','1회차 - numpy를 사용하는 이유와 간단한 행렬 연산'),(2943,49,'섹션 7. 기초 :: 데이터 분석','1회차 - numpy의 자료형과 형변환'),(2944,49,'섹션 7. 기초 :: 데이터 분석','1회차 - numpy의 차원'),(2945,49,'섹션 7. 기초 :: 데이터 분석','1회차 - numpy에 arange와 reshape 값의 호출'),(2946,49,'섹션 7. 기초 :: 데이터 분석','1회차 - slicing'),(2947,49,'섹션 7. 기초 :: 데이터 분석','1회차 - 배열의 연결과 분할'),(2948,49,'섹션 7. 기초 :: 데이터 분석','1회차 - 다양한 matrix 만들기'),(2949,49,'섹션 7. 기초 :: 데이터 분석','1회차 - 최대값과 최소값'),(2950,49,'섹션 7. 기초 :: 데이터 분석','1회차 - 다양한 집계함수'),(2951,49,'섹션 7. 기초 :: 데이터 분석','1회차 - Boolean Indexing'),(2952,49,'섹션 7. 기초 :: 데이터 분석','1회차 - Broadcasting'),(2953,49,'섹션 7. 기초 :: 데이터 분석','1회차 - random'),(2954,49,'섹션 7. 기초 :: 데이터 분석','2회차 - Series'),(2955,49,'섹션 7. 기초 :: 데이터 분석','2회차 - Series의 key, value, index'),(2956,49,'섹션 7. 기초 :: 데이터 분석','2회차 - 결측값 처리하기'),(2957,49,'섹션 7. 기초 :: 데이터 분석','2회차 - Series의 MultiIndex'),(2958,49,'섹션 7. 기초 :: 데이터 분석','2회차 - 연산과 집계함수'),(2959,49,'섹션 7. 기초 :: 데이터 분석','2회차 - Series의 연결'),(2960,49,'섹션 7. 기초 :: 데이터 분석','2회차 - DataFrame'),(2961,49,'섹션 7. 기초 :: 데이터 분석','2회차 - DataFrame의 데이터조작'),(2962,49,'섹션 7. 기초 :: 데이터 분석','2회차 - DataFrame의 MultiIndex'),(2963,49,'섹션 7. 기초 :: 데이터 분석','3회차 - pandas로 데이터 다루기'),(2964,49,'섹션 7. 기초 :: 데이터 분석','4회차 - EDA 그래프 분석과 이미지 분석의 개요'),(2965,49,'섹션 7. 기초 :: 데이터 분석','4회차 - matplotlib 기본 사용법(line 종류, 색)'),(2966,49,'섹션 7. 기초 :: 데이터 분석','4회차 - matplotlib 경계표현'),(2967,49,'섹션 7. 기초 :: 데이터 분석','4회차 - matplotlib legend'),(2968,49,'섹션 7. 기초 :: 데이터 분석','4회차 - scatter와 hist'),(2969,49,'섹션 7. 기초 :: 데이터 분석','4회차 - basic attribute와 maker'),(2970,49,'섹션 7. 기초 :: 데이터 분석','4회차 - Bar Chart와 Pie Chart'),(2971,49,'섹션 7. 기초 :: 데이터 분석','4회차 - plot의 분할과 텍스트 삽입'),(2972,49,'섹션 7. 기초 :: 데이터 분석','4회차 - matplotlib의 기타 그래프 소개'),(2973,49,'섹션 7. 기초 :: 데이터 분석','5회차 - seaborn'),(2974,49,'섹션 7. 기초 :: 데이터 분석','5회차 - plotly'),(2975,49,'섹션 7. 기초 :: 데이터 분석','보너스챕터 :: 크롤링(request, beautifulsoup4) - 1'),(2976,49,'섹션 7. 기초 :: 데이터 분석','보너스챕터 :: 크롤링(request, beautifulsoup4) - 2'),(2977,49,'섹션 7. 기초 :: 데이터 분석','6회차 - 코로나 Data 분석(성별, 나이)'),(2978,49,'섹션 7. 기초 :: 데이터 분석','6회차 - 코로나 Data 분석(지역)'),(2979,49,'섹션 7. 기초 :: 데이터 분석','6회차 - 코로나 Data 분석(한국 확진자와 사망자 분석)'),(2980,49,'섹션 7. 기초 :: 데이터 분석','6회차 - 코로나 Data 분석(세계 데이터 분석)'),(2981,49,'섹션 7. 기초 :: 데이터 분석','7회차 - 통계이론'),(2982,49,'섹션 7. 기초 :: 데이터 분석','7회차 - 확률이론'),(2983,49,'섹션 7. 기초 :: 데이터 분석','7회차 - 미분개념'),(2984,49,'섹션 7. 기초 :: 데이터 분석','7회차 - 선형회귀'),(2985,49,'섹션 7. 기초 :: 데이터 분석','7회차 - 행렬'),(2986,49,'섹션 7. 기초 :: 데이터 분석','제주 여행, 언제 가야 하나요?'),(2987,49,'섹션 7. 기초 :: 데이터 분석','제주에서 가장 핫한 여행지는 어디인가요'),(2988,49,'섹션 7. 기초 :: 데이터 분석','제주도 인구구조를 그래프로 만들어보기'),(2989,49,'섹션 7. 기초 :: 데이터 분석','3다 제주도, 진짜 여자가 많나요'),(2990,49,'섹션 7. 기초 :: 데이터 분석','제주에 나만에 가게를 차리고 싶어요 1'),(2991,49,'섹션 7. 기초 :: 데이터 분석','제주에 나만에 가게를 차리고 싶어요 2'),(2992,49,'섹션 7. 기초 :: 데이터 분석','제주에 나만에 가게를 차리고 싶어요 3'),(2993,49,'섹션 8. 기초 :: 우분투','리눅스(우분투)1_리눅스에 대하여'),(2994,49,'섹션 8. 기초 :: 우분투','리눅스(우분트)2_기본명령어 폴더 및 이동파일 생성과 삭제'),(2995,49,'섹션 8. 기초 :: 우분투','리눅스(우분투)3_기본명령어 파일 읽기, 복사, 이동'),(2996,49,'섹션 9. 기초 :: 기본 에디터 사용법','jupyter notebook'),(2997,49,'섹션 9. 기초 :: 기본 에디터 사용법','atom (영상 강의가 아닙니다)'),(2998,49,'섹션 9. 기초 :: 기본 에디터 사용법','emmet'),(2999,49,'섹션 9. 기초 :: 기본 에디터 사용법','Visual Studio Code_1_VSCode와 Extension설치하기'),(3000,49,'섹션 9. 기초 :: 기본 에디터 사용법','Visual Studio Code_2_VSCode와 Window Ubuntu 연결하기'),(3001,49,'섹션 9. 기초 :: 기본 에디터 사용법','Visual Studio Code_3_github 연동하기'),(3002,49,'섹션 9. 기초 :: 기본 에디터 사용법','Visual Studio Online Code'),(3003,49,'섹션 10. 기초 :: Python','세팅, 변수와 상수'),(3004,49,'섹션 10. 기초 :: Python','format'),(3005,49,'섹션 10. 기초 :: Python','변수의 타입'),(3006,49,'섹션 10. 기초 :: Python','연산'),(3007,49,'섹션 10. 기초 :: Python','조건문'),(3008,49,'섹션 10. 기초 :: Python','반복문'),(3009,49,'섹션 10. 기초 :: Python','함수'),(3010,49,'섹션 10. 기초 :: Python','자료구조_리스트'),(3011,49,'섹션 10. 기초 :: Python','자료구조_튜플'),(3012,49,'섹션 10. 기초 :: Python','자료구조_셋'),(3013,49,'섹션 10. 기초 :: Python','자료구조_딕셔너리'),(3014,49,'섹션 10. 기초 :: Python','형변환'),(3015,49,'섹션 10. 기초 :: Python','class_1 클래스 기본 기념'),(3016,49,'섹션 10. 기초 :: Python','class_2 클래스 변수와 인스턴스 변수'),(3017,49,'섹션 10. 기초 :: Python','class_3 매직 메서드(Magic Method)와 연산자 오버로딩'),(3018,49,'섹션 10. 기초 :: Python','class_4 클래스 상속과 상속 우선순위'),(3019,49,'섹션 10. 기초 :: Python','내장함수(Built-in Functions)_1_형변환'),(3020,49,'섹션 10. 기초 :: Python','내장함수(Built-in Functions)_2_진법과 정렬'),(3021,49,'섹션 10. 기초 :: Python','내장함수(Built-in Functions)_3'),(3022,49,'섹션 10. 기초 :: Python','내장함수(Built-in Functions)_4_enumerate'),(3023,49,'섹션 10. 기초 :: Python','파일 입출력'),(3024,49,'섹션 10. 기초 :: Python','모듈'),(3025,49,'섹션 11. 기초 :: Django','Django 소개'),(3026,49,'섹션 11. 기초 :: Django','Django 세팅'),(3027,49,'섹션 11. 기초 :: Django','url'),(3028,49,'섹션 11. 기초 :: Django','이미지 넣기'),(3029,49,'섹션 11. 기초 :: Django','모델'),(3030,49,'섹션 11. 기초 :: Django','카페 리스트 띄우기 1'),(3031,49,'섹션 11. 기초 :: Django','카페 리스트 띄우기 2'),(3032,49,'섹션 11. 기초 :: Django','이미지 업로드 구현'),(3033,49,'섹션 11. 기초 :: Django','댓글 및 태그 기능 구현'),(3034,49,'섹션 11. 기초 :: Django','템플릿 태그'),(3035,49,'섹션 11. 기초 :: Django','템플릿 변수'),(3036,49,'섹션 11. 기초 :: Django','템플릿 필터'),(3037,49,'섹션 11. 기초 :: Django','템플릿 상속과 템플릿 입히기'),(3038,49,'섹션 11. 기초 :: Django','메인 페이지 작성'),(3039,49,'섹션 11. 기초 :: Django','배포'),(3040,49,'섹션 12. 30분 요약 시리즈(HTML, CSS, JS, Python)','30분 요약시리즈 - Python 1부'),(3041,49,'섹션 12. 30분 요약 시리즈(HTML, CSS, JS, Python)','30분 요약시리즈 - Python 2부'),(3042,49,'섹션 12. 30분 요약 시리즈(HTML, CSS, JS, Python)','30분 요약시리즈 - HTML'),(3043,49,'섹션 12. 30분 요약 시리즈(HTML, CSS, JS, Python)','30분 요약시리즈 - CSS'),(3044,49,'섹션 12. 30분 요약 시리즈(HTML, CSS, JS, Python)','30분 요약시리즈 - JS 1부'),(3045,49,'섹션 12. 30분 요약 시리즈(HTML, CSS, JS, Python)','30분 요약시리즈 - JS 2부'),(3046,49,'섹션 13. 배포','NCP 서버에 Django 배포, URL 연결'),(3047,50,'섹션 0. 강좌 소개','소개하기'),(3048,50,'섹션 1. 뷰 십계명','시작하기'),(3049,50,'섹션 1. 뷰 십계명','아키텍쳐'),(3050,50,'섹션 1. 뷰 십계명','라우팅'),(3051,50,'섹션 1. 뷰 십계명','라우팅 파라미터'),(3052,50,'섹션 1. 뷰 십계명','클래스'),(3053,50,'섹션 1. 뷰 십계명','메쏘드'),(3054,50,'섹션 1. 뷰 십계명','서비스'),(3055,50,'섹션 1. 뷰 십계명','데이터 바인딩'),(3056,50,'섹션 1. 뷰 십계명','필터'),(3057,50,'섹션 1. 뷰 십계명','스타일'),(3058,50,'섹션 2. 다음 단계','강좌정리'),(3059,51,'섹션 0. Web Service & Web Application','Web Service와 Web APplication의 개요'),(3060,51,'섹션 0. Web Service & Web Application','Web Service 개발 방법 SOAP과 REST의 이해'),(3061,51,'섹션 1. Spring Boot로 개발하는 RESTful Service','Spring Boot 개요'),(3062,51,'섹션 1. Spring Boot로 개발하는 RESTful Service','REST API 설계'),(3063,51,'섹션 1. Spring Boot로 개발하는 RESTful Service','Spring Boot Project 생성'),(3064,51,'섹션 1. Spring Boot로 개발하는 RESTful Service','Spring Boot Project 구조 확인과 실행 방법'),(3065,51,'섹션 1. Spring Boot로 개발하는 RESTful Service','HelloWorld Controller 추가'),(3066,51,'섹션 1. Spring Boot로 개발하는 RESTful Service','HelloWorld Bean 추가'),(3067,51,'섹션 1. Spring Boot로 개발하는 RESTful Service','DispatcherServlet과 프로젝트 동작의 이해'),(3068,51,'섹션 1. Spring Boot로 개발하는 RESTful Service','Path Variable 사용'),(3069,51,'섹션 2. User Service API 구현','User 도메인 클래스 생성'),(3070,51,'섹션 2. User Service API 구현','사용자 목록 조회를 위한 API 구현 - GET HTTP Method'),(3071,51,'섹션 2. User Service API 구현','사용자 등록을 위한 API 구현 - POST HTTP Method'),(3072,51,'섹션 2. User Service API 구현','HTTP Status Code 제어'),(3073,51,'섹션 2. User Service API 구현','HTTP Status Code 제어를 위한 Exception Handling'),(3074,51,'섹션 2. User Service API 구현','Spring의 AOP를 이용한 Exception Handling'),(3075,51,'섹션 2. User Service API 구현','사용자 삭제를 위한 API 구현 - DELETE HTTP Method'),(3076,51,'섹션 3. RESTful Service 기능 확장','Section 3 수업 소개'),(3077,51,'섹션 3. RESTful Service 기능 확장','유효성 체크를 위한 Validation API 사용'),(3078,51,'섹션 3. RESTful Service 기능 확장','다국어 처리를 위한 Internationalization 구현 방법'),(3079,51,'섹션 3. RESTful Service 기능 확장','Response 데이터 형식 변환 - XML format'),(3080,51,'섹션 3. RESTful Service 기능 확장','Response 데이터 제어를 위한 Filtering'),(3081,51,'섹션 3. RESTful Service 기능 확장','프로그래밍으로 제어하는 Filtering 방법 - 개별 사용자 조회'),(3082,51,'섹션 3. RESTful Service 기능 확장','프로그래밍으로 제어하는 Filtering 방법 - 전체 사용자 조회'),(3083,51,'섹션 3. RESTful Service 기능 확장','URI를 이용한 REST API Version 관리'),(3084,51,'섹션 3. RESTful Service 기능 확장','Request Parameter와 Header를 이용한 API Version 관리'),(3085,51,'섹션 4. Spring Boot API 사용','Section 4 수업 소개'),(3086,51,'섹션 4. Spring Boot API 사용','Level3 단계의 REST API 구현을 위한 HATEOAS 적용'),(3087,51,'섹션 4. Spring Boot API 사용','REST API Documentation을 위한 Swagger 사용'),(3088,51,'섹션 4. Spring Boot API 사용','Swagger Documentation 구현 방법'),(3089,51,'섹션 4. Spring Boot API 사용','REST API Monitoring을 위한 Actuator 설정'),(3090,51,'섹션 4. Spring Boot API 사용','HAL Browser를 이용한 HATEOAS 기능 구현'),(3091,51,'섹션 4. Spring Boot API 사용','Spring Security를 이용한 인증 처리'),(3092,51,'섹션 4. Spring Boot API 사용','Configuration 클래스를 이용한 사용자 인증 처리'),(3093,51,'섹션 5. Java Persistence API 사용','Section 5 수업 소개'),(3094,51,'섹션 5. Java Persistence API 사용','Java Persistence API의 개요'),(3095,51,'섹션 5. Java Persistence API 사용','JPA를 사용을 위한 Dependency 추가와 설정'),(3096,51,'섹션 5. Java Persistence API 사용','Spring Data JPA를 이용한 Entity 설정과 초기 데이터 생성'),(3097,51,'섹션 5. Java Persistence API 사용','JPA Service 구현을 위한 Controller, Repository 생성'),(3098,51,'섹션 5. Java Persistence API 사용','JPA를 이용한 사용자 목록 조회 - GET HTTP Method'),(3099,51,'섹션 5. Java Persistence API 사용','JPA를 이용한 사용자 추가와 삭제 - POST/DELETE HTTP Method'),(3100,51,'섹션 5. Java Persistence API 사용','게시물 관리를 위한 Post Entity 추가와 초기 데이터 생성'),(3101,51,'섹션 5. Java Persistence API 사용','게시물 조회를 위한 Post Entity와 User Entity와의 관계 설정'),(3102,51,'섹션 5. Java Persistence API 사용','JPA를 이용한 새 게시물 추가 - POST HTTP Method'),(3103,51,'섹션 6. RESTful API 설계 가이드','Section 6 수업 소개'),(3104,51,'섹션 6. RESTful API 설계 가이드','Richardson Maturity Model 소개'),(3105,51,'섹션 6. RESTful API 설계 가이드','REST API 설계 시 고려해야 할 사항'),(3106,51,'섹션 6. RESTful API 설계 가이드','마치며'),(3107,52,'섹션 0. 강좌 소개','강좌 소개'),(3108,52,'섹션 0. 강좌 소개','수업 자료'),(3109,52,'섹션 1. 프로젝트 환경설정','프로젝트 생성'),(3110,52,'섹션 1. 프로젝트 환경설정','라이브러리 살펴보기'),(3111,52,'섹션 1. 프로젝트 환경설정','View 환경 설정'),(3112,52,'섹션 1. 프로젝트 환경설정','H2 데이터베이스 설치'),(3113,52,'섹션 1. 프로젝트 환경설정','JPA와 DB 설정, 동작확인'),(3114,52,'섹션 2. 도메인 분석 설계','요구사항 분석'),(3115,52,'섹션 2. 도메인 분석 설계','도메인 모델과 테이블 설계'),(3116,52,'섹션 2. 도메인 분석 설계','엔티티 클래스 개발1'),(3117,52,'섹션 2. 도메인 분석 설계','엔티티 클래스 개발2'),(3118,52,'섹션 2. 도메인 분석 설계','엔티티 설계시 주의점'),(3119,52,'섹션 3. 애플리케이션 구현 준비','구현 요구사항'),(3120,52,'섹션 3. 애플리케이션 구현 준비','애플리케이션 아키텍처'),(3121,52,'섹션 4. 회원 도메인 개발','회원 리포지토리 개발'),(3122,52,'섹션 4. 회원 도메인 개발','회원 서비스 개발'),(3123,52,'섹션 4. 회원 도메인 개발','회원 기능 테스트'),(3124,52,'섹션 5. 상품 도메인 개발','상품 엔티티 개발(비즈니스 로직 추가)'),(3125,52,'섹션 5. 상품 도메인 개발','상품 리포지토리 개발'),(3126,52,'섹션 5. 상품 도메인 개발','상품 서비스 개발'),(3127,52,'섹션 6. 주문 도메인 개발','주문, 주문상품 엔티티 개발'),(3128,52,'섹션 6. 주문 도메인 개발','주문 리포지토리 개발'),(3129,52,'섹션 6. 주문 도메인 개발','주문 서비스 개발'),(3130,52,'섹션 6. 주문 도메인 개발','주문 기능 테스트'),(3131,52,'섹션 6. 주문 도메인 개발','주문 검색 기능 개발'),(3132,52,'섹션 7. 웹 계층 개발','홈 화면과 레이아웃'),(3133,52,'섹션 7. 웹 계층 개발','회원 등록'),(3134,52,'섹션 7. 웹 계층 개발','회원 목록 조회'),(3135,52,'섹션 7. 웹 계층 개발','상품 등록'),(3136,52,'섹션 7. 웹 계층 개발','상품 목록'),(3137,52,'섹션 7. 웹 계층 개발','상품 수정'),(3138,52,'섹션 7. 웹 계층 개발','변경 감지와 병합(merge)'),(3139,52,'섹션 7. 웹 계층 개발','상품 주문'),(3140,52,'섹션 7. 웹 계층 개발','주문 목록 검색, 취소'),(3141,52,'섹션 7. 웹 계층 개발','다음으로'),(3142,53,'섹션 0. 웹 개발 시작해봐요','웹 맛보기'),(3143,53,'섹션 0. 웹 개발 시작해봐요','강의 자료 내려받기 (PPT)'),(3144,53,'섹션 1. 기초 HTML','HTML 개념 알기 (1-1)'),(3145,53,'섹션 1. 기초 HTML','서식 관련 태그 알아보기 (1-2)'),(3146,53,'섹션 1. 기초 HTML','리스트 태그 알아보기 (1-3)'),(3147,53,'섹션 1. 기초 HTML','실습: 자기소개 페이지 만들기 (1-4)'),(3148,53,'섹션 1. 기초 HTML','블록/인라인 요소 알아보기 (1-5)'),(3149,53,'섹션 1. 기초 HTML','하이퍼미디어 태그 알아보기 (1-6)'),(3150,53,'섹션 1. 기초 HTML','표 관련 태그 알아보기 (1-7)'),(3151,53,'섹션 1. 기초 HTML','실습: 여행 계획 페이지 만들기 (1-8)'),(3152,53,'섹션 1. 기초 HTML','폼 태그 알아보기 (1-9)'),(3153,53,'섹션 1. 기초 HTML','폼 관련 기본 태그 알아보기 (1-10)'),(3154,53,'섹션 1. 기초 HTML','폼 관련 응용 태그 알아보기 (1-11)'),(3155,53,'섹션 1. 기초 HTML','메타 태그 알아보기 (1-12)'),(3156,53,'섹션 1. 기초 HTML','iframe 태그 알아보기 (1-13)'),(3157,53,'섹션 1. 기초 HTML','실습: 회원가입 폼 만들기 (1-14)'),(3158,53,'섹션 2. 멋진 CSS','CSS 개념 알기 (2-1)'),(3159,53,'섹션 2. 멋진 CSS','CSS 선언하기 (2-2)'),(3160,53,'섹션 2. 멋진 CSS','폰트 스타일 속성과 색상 알아보기 (2-3)'),(3161,53,'섹션 2. 멋진 CSS','폰트와 크기의 단위 알아보기 (2-4)'),(3162,53,'섹션 2. 멋진 CSS','텍스트 스타일 알아보기 (2-5)'),(3163,53,'섹션 2. 멋진 CSS','크기를 적용하기 (2-6)'),(3164,53,'섹션 2. 멋진 CSS','실습: 여행 계획 페이지에 스타일 적용해보기 (2-7)'),(3165,53,'섹션 2. 멋진 CSS','CSS 선택자 알아보기 (2-8)'),(3166,53,'섹션 2. 멋진 CSS','조금 복잡한 셀렉터 알아보기 (2-9)'),(3167,53,'섹션 2. 멋진 CSS','블록 태그 요소와 여백 적용하기 (2-10)'),(3168,53,'섹션 2. 멋진 CSS','위치를 적용하기 (2-11)'),(3169,53,'섹션 2. 멋진 CSS','테두리 적용하기 (2-12)'),(3170,53,'섹션 2. 멋진 CSS','테두리 둥글게 하기 (2-13)'),(3171,53,'섹션 2. 멋진 CSS','실습: 갤러리 페이지 만들기 (2-14)'),(3172,53,'섹션 2. 멋진 CSS','실습: 뉴스 기사 페이지 만들기 (2-15)'),(3173,53,'섹션 3. 진짜배기 JAVASCRIPT','Javascript 개념 알기 (3-1)'),(3174,53,'섹션 3. 진짜배기 JAVASCRIPT','Type 이해하기 (3-2)'),(3175,53,'섹션 3. 진짜배기 JAVASCRIPT','변수, 산술연산 이해하기 (3-3)'),(3176,53,'섹션 3. 진짜배기 JAVASCRIPT','실습: 사칙연산과 변수 다루기 (3-4)'),(3177,53,'섹션 3. 진짜배기 JAVASCRIPT','값을 비교하기 (3-5)'),(3178,53,'섹션 3. 진짜배기 JAVASCRIPT','조건문 사용하기 (3-6)'),(3179,53,'섹션 3. 진짜배기 JAVASCRIPT','실습: 퀴즈게임 만들기 (3-7)'),(3180,53,'섹션 3. 진짜배기 JAVASCRIPT','반복문 사용하기 (3-8)'),(3181,53,'섹션 3. 진짜배기 JAVASCRIPT','실습: 피보나치 수열 출력하기 (3-9)'),(3182,53,'섹션 3. 진짜배기 JAVASCRIPT','배열 사용하기 (3-10)'),(3183,53,'섹션 3. 진짜배기 JAVASCRIPT','객체 사용하기 (3-11)'),(3184,53,'섹션 3. 진짜배기 JAVASCRIPT','실습: 설문조사 만들기 (3-12)'),(3185,53,'섹션 3. 진짜배기 JAVASCRIPT','함수 선언하기 (3-13)'),(3186,53,'섹션 3. 진짜배기 JAVASCRIPT','스코프 이해하기 (3-14)'),(3187,53,'섹션 3. 진짜배기 JAVASCRIPT','HTML 코드에 Javascript 가져오기 (3-15)'),(3188,53,'섹션 3. 진짜배기 JAVASCRIPT','선택자로 DOM 가져오기 (3-16)'),(3189,53,'섹션 3. 진짜배기 JAVASCRIPT','DOM을 동적으로 생성하기 (3-17)'),(3190,53,'섹션 3. 진짜배기 JAVASCRIPT','DOM의 내용을 바꾸기 (3-18)'),(3191,53,'섹션 3. 진짜배기 JAVASCRIPT','이벤트 처리하기 (3-19)'),(3192,53,'섹션 3. 진짜배기 JAVASCRIPT','실습: 회원가입 폼 검증하기 - 1 (3-20)'),(3193,53,'섹션 3. 진짜배기 JAVASCRIPT','실습: 회원가입 폼 검증하기 - 2 (3-21)'),(3194,53,'섹션 3. 진짜배기 JAVASCRIPT','심화 개념: 클로져 이해하기 (3-22)'),(3195,53,'섹션 3. 진짜배기 JAVASCRIPT','심화 개념: Ajax 개념 알기 (3-23)'),(3196,53,'섹션 4. 실습으로 검증하기','인스타그램 포스팅 카드 만들기 - UI (4-1)'),(3197,53,'섹션 4. 실습으로 검증하기','인스타그램 포스팅 카드 만들기 - 자바스크립트, 캐러셀 (4-2)'),(3198,54,'섹션 0. 강의 소개','강의 소개 영상'),(3199,54,'섹션 1. 리액트 프로젝트 시작하기','리액트란 무엇인가'),(3200,54,'섹션 1. 리액트 프로젝트 시작하기','리액트 개발 환경 직접 구축하기'),(3201,54,'섹션 1. 리액트 프로젝트 시작하기','바벨 사용해 보기'),(3202,54,'섹션 1. 리액트 프로젝트 시작하기','웹팩 사용해 보기'),(3203,54,'섹션 1. 리액트 프로젝트 시작하기','create-react-app으로 시작하기'),(3204,54,'섹션 1. 리액트 프로젝트 시작하기','create-react-app으로 시작하기2'),(3205,54,'섹션 1. 리액트 프로젝트 시작하기','CSS 작성 방법 결정하기'),(3206,54,'섹션 1. 리액트 프로젝트 시작하기','단일 페이지 애플리케이션(SPA) 만들기'),(3207,54,'섹션 2. 중요하지만 헷갈리는 리액트 개념 이해하기','리액트를 사용한 코드의 특징'),(3208,54,'섹션 2. 중요하지만 헷갈리는 리액트 개념 이해하기','컴포넌트의 속성값과 상탯값'),(3209,54,'섹션 2. 중요하지만 헷갈리는 리액트 개념 이해하기','컴포넌트 함수의 반환값'),(3210,54,'섹션 2. 중요하지만 헷갈리는 리액트 개념 이해하기','리액트 요소와 가상돔1'),(3211,54,'섹션 2. 중요하지만 헷갈리는 리액트 개념 이해하기','리액트 요소와 가상돔2'),(3212,54,'섹션 2. 중요하지만 헷갈리는 리액트 개념 이해하기','리액트 훅 기초 익히기1'),(3213,54,'섹션 2. 중요하지만 헷갈리는 리액트 개념 이해하기','리액트 훅 기초 익히기2'),(3214,54,'섹션 2. 중요하지만 헷갈리는 리액트 개념 이해하기','훅 직접 만들기'),(3215,54,'섹션 2. 중요하지만 헷갈리는 리액트 개념 이해하기','훅 사용 시 지켜야 할 규칙'),(3216,54,'섹션 3. 프로젝트1: 2048 게임 만들기','2048 게임 만들기'),(3217,54,'섹션 4. 중요하지만 헷갈리는 리액트 개념 이해하기2','콘텍스트 API로 데이터 전달하기'),(3218,54,'섹션 4. 중요하지만 헷갈리는 리액트 개념 이해하기2','ref 속성값으로 자식 요소에 접근하기'),(3219,54,'섹션 4. 중요하지만 헷갈리는 리액트 개념 이해하기2','리액트 내장 훅 살펴보기'),(3220,54,'섹션 5. 리액트 실전 활용법','추천하는 컴포넌트 파일 작성법'),(3221,54,'섹션 5. 리액트 실전 활용법','속성값 타입 정의하기: prop-types'),(3222,54,'섹션 5. 리액트 실전 활용법','가독성을 높이는 조건부 렌더링 방법'),(3223,54,'섹션 5. 리액트 실전 활용법','재사용성을 고려한 컴포넌트 구분법'),(3224,54,'섹션 5. 리액트 실전 활용법','useEffect 실전 활용법1'),(3225,54,'섹션 5. 리액트 실전 활용법','useEffect 실전 활용법2'),(3226,54,'섹션 5. 리액트 실전 활용법','렌더링 속도를 올리기 위한 성능 최적화 방법1'),(3227,54,'섹션 5. 리액트 실전 활용법','렌더링 속도를 올리기 위한 성능 최적화 방법2'),(3228,54,'섹션 5. 리액트 실전 활용법','렌더링 속도를 올리기 위한 성능 최적화 방법3'),(3229,54,'섹션 6. 리덕스로 상태 관리하기','리덕스 소개'),(3230,54,'섹션 6. 리덕스로 상태 관리하기','액션, 미들웨어'),(3231,54,'섹션 6. 리덕스로 상태 관리하기','리듀서, 스토어'),(3232,54,'섹션 6. 리덕스로 상태 관리하기','react-redux 없이 직접 구현하기'),(3233,54,'섹션 6. 리덕스로 상태 관리하기','react-redux 사용하기'),(3234,54,'섹션 6. 리덕스로 상태 관리하기','reselect로 선택자 함수 만들기'),(3235,54,'섹션 6. 리덕스로 상태 관리하기','몇 가지 리덕스 사용 팁'),(3236,54,'섹션 6. 리덕스로 상태 관리하기','redux-saga를 이용한 비동기 액션 처리1'),(3237,54,'섹션 6. 리덕스로 상태 관리하기','제너레이터 이해하기'),(3238,54,'섹션 6. 리덕스로 상태 관리하기','redux-saga를 이용한 비동기 액션 처리2'),(3239,54,'섹션 7. 프로젝트2: 집단지성을 이용한 담당자찾기 서비스','프로젝트 소개'),(3240,54,'섹션 7. 프로젝트2: 집단지성을 이용한 담당자찾기 서비스','프로젝트 설정하기'),(3241,54,'섹션 7. 프로젝트2: 집단지성을 이용한 담당자찾기 서비스','서버 API 호출하기'),(3242,54,'섹션 7. 프로젝트2: 집단지성을 이용한 담당자찾기 서비스','사용자 페이지 구현하기'),(3243,54,'섹션 7. 프로젝트2: 집단지성을 이용한 담당자찾기 서비스','makeFetchSaga로 API 통신 상탯값 관리하기'),(3244,54,'섹션 7. 프로젝트2: 집단지성을 이용한 담당자찾기 서비스','SPA 초기 로딩 처리하기'),(3245,54,'섹션 7. 프로젝트2: 집단지성을 이용한 담당자찾기 서비스','사용자 정보 수정하기'),(3246,54,'섹션 7. 프로젝트2: 집단지성을 이용한 담당자찾기 서비스','태그 정보 수정하기'),(3247,54,'섹션 7. 프로젝트2: 집단지성을 이용한 담당자찾기 서비스','수정 내역 구현하기'),(3248,54,'섹션 7. 프로젝트2: 집단지성을 이용한 담당자찾기 서비스','인증 화면 만들기'),(3249,54,'섹션 7. 프로젝트2: 집단지성을 이용한 담당자찾기 서비스','인증 API 호출하기'),(3250,54,'섹션 7. 프로젝트2: 집단지성을 이용한 담당자찾기 서비스','프로젝트 마무리하기'),(3251,55,'섹션 0. 강의 소개 및 초기 설정','강의 소개'),(3252,55,'섹션 0. 강의 소개 및 초기 설정','Boiler Plate을 가져오고 Mongo DB 연결하기'),(3253,55,'섹션 1. 업로드 페이지 만들기','업로드 페이지 만들기 시작'),(3254,55,'섹션 1. 업로드 페이지 만들기','onChange Event 처리하기'),(3255,55,'섹션 1. 업로드 페이지 만들기','Select Option 처리하기'),(3256,55,'섹션 1. 업로드 페이지 만들기','Drop-Zone 적용하기'),(3257,55,'섹션 1. 업로드 페이지 만들기','이미지 파일을 서버로 보내기'),(3258,55,'섹션 1. 업로드 페이지 만들기','multer를 이용하여 이미지 저장'),(3259,55,'섹션 1. 업로드 페이지 만들기','이미지 지우기'),(3260,55,'섹션 1. 업로드 페이지 만들기','이미지 State을 부모 컴포넌트로 업데이트하기'),(3261,55,'섹션 1. 업로드 페이지 만들기','모든 상품 정보를 데이터베이스에 저장하기'),(3262,55,'섹션 2. 랜딩 페이지 만들기','데이터베이스에 들어 있는 모든 상품을 가져오기'),(3263,55,'섹션 2. 랜딩 페이지 만들기','카드 만들기'),(3264,55,'섹션 2. 랜딩 페이지 만들기','이미지 슬라이더 만들기'),(3265,55,'섹션 2. 랜딩 페이지 만들기','더보기 버튼 만들기 #1'),(3266,55,'섹션 2. 랜딩 페이지 만들기','더보기 버튼 만들기 #2'),(3267,55,'섹션 2. 랜딩 페이지 만들기','체크 박스 필터 만들기 #1'),(3268,55,'섹션 2. 랜딩 페이지 만들기','체크 박스 필터 만들기 #2'),(3269,55,'섹션 2. 랜딩 페이지 만들기','체크 박스 필터 만들기 #3'),(3270,55,'섹션 2. 랜딩 페이지 만들기','라디오 박스 필터 만들기 #1'),(3271,55,'섹션 2. 랜딩 페이지 만들기','라디오 박스 필터 만들기 #2'),(3272,55,'섹션 2. 랜딩 페이지 만들기','검색 기능 만들기 #1'),(3273,55,'섹션 2. 랜딩 페이지 만들기','검색 기능 만들기 #2'),(3274,55,'섹션 3. 상세 보기 페이지 만들기','상품의 상세정보를 데이터베이스에서 가져오기'),(3275,55,'섹션 3. 상세 보기 페이지 만들기','Product Image 컴포넌트 만들기'),(3276,55,'섹션 3. 상세 보기 페이지 만들기','Product Info 컴포넌트 만들기'),(3277,55,'섹션 3. 상세 보기 페이지 만들기','Add to Cart 버튼 만들기 #1'),(3278,55,'섹션 3. 상세 보기 페이지 만들기','Add to Cart 버튼 만들기 #2'),(3279,55,'섹션 4. 카트 페이지 만들기','Add to Cart 기능 개선 및 카트 Tab 만들기'),(3280,55,'섹션 4. 카트 페이지 만들기','카트에 담긴 상품 정보들을 데이터베이스에서 가져오기 #1'),(3281,55,'섹션 4. 카트 페이지 만들기','카트에 담긴 상품 정보들을 데이터베이스에서 가져오기 #2'),(3282,55,'섹션 4. 카트 페이지 만들기','데이터베이스에서 가져온 상품 정보들을 화면에서 보여주기'),(3283,55,'섹션 4. 카트 페이지 만들기','카트에 담긴 상품 정보 가져오는 부분 코드 수정'),(3284,55,'섹션 4. 카트 페이지 만들기','카트에 들어있는 상품들 가격 계산'),(3285,55,'섹션 4. 카트 페이지 만들기','카트에 들어 있는 상품 지우기'),(3286,55,'섹션 4. 카트 페이지 만들기','카트에 있는 모든 상품 지운 다음 처리할 것들'),(3287,55,'섹션 4. 카트 페이지 만들기','Paypal 버튼 만들기'),(3288,55,'섹션 4. 카트 페이지 만들기','Paypal로 결제하기'),(3289,55,'섹션 4. 카트 페이지 만들기','Paypal로 결제 성공 후 할 일들 #1'),(3290,55,'섹션 4. 카트 페이지 만들기','Paypal로 결제 성공 후 할 일들 #2'),(3291,55,'섹션 4. 카트 페이지 만들기','Paypal로 결제 성공 후 할 일들 #3'),(3292,55,'섹션 5. 결제 내역 페이지 만들기','결제 내역 페이지 만들기'),(3293,55,'섹션 6. 강의 자료들','전체 소스 코드 주소'),(3294,55,'섹션 6. 강의 자료들','Diagram HTML 파일'),(3295,55,'섹션 6. 강의 자료들','Diagram XML 파일'),(3296,56,'섹션 0. Node JS','노드 리액트 기초 강의 #1 소개'),(3297,56,'섹션 0. Node JS','노드 리액트 기초 강의 #2 NODE JS 와 EXPRESS JS 다운로드 하기'),(3298,56,'섹션 0. Node JS','노드 리액트 기초 강의 #3 몽고 DB 연결'),(3299,56,'섹션 0. Node JS','노드 리액트 기초 강의 #4 MongoDB Model & Schema'),(3300,56,'섹션 0. Node JS','노드 리액트 기초 강의 #5 GIT 설치'),(3301,56,'섹션 0. Node JS','노드 리액트 기초 강의 #6 SSH를 이용해 GITHUB 연결'),(3302,56,'섹션 0. Node JS','노드 리액트 기초 강의 #7 BodyParser & PostMan & 회원 가입 기능'),(3303,56,'섹션 0. Node JS','노드 리액트 기초 강의 #8 Nodemon 설치'),(3304,56,'섹션 0. Node JS','노드 리액트 기초 강의 #9 비밀 설정 정보 관리'),(3305,56,'섹션 0. Node JS','노드 리액트 기초 강의 #10 Bcrypt로 비밀번호 암호화 하기'),(3306,56,'섹션 0. Node JS','노드 리액트 기초 강의 #11 로그인 기능 with Bcrypt (1)'),(3307,56,'섹션 0. Node JS','노드 리액트 기초 강의 #12 토큰 생성 with jsonwebtoken'),(3308,56,'섹션 0. Node JS','노드 리액트 기초 강의 #13 Auth 기능 만들기'),(3309,56,'섹션 0. Node JS','노드 리액트 기초 강의 #14 로그아웃 기능'),(3310,56,'섹션 1. React JS','노드 리액트 기초 강의 #15 리액트란 ?'),(3311,56,'섹션 1. React JS','노드 리액트 기초 강의 #16 Create-React-App'),(3312,56,'섹션 1. React JS','노드 리액트 기초 강의 #17 npm npx'),(3313,56,'섹션 1. React JS','노드 리액트 기초 강의 #18 구조 설명'),(3314,56,'섹션 1. React JS','노드 리액트 기초 강의 #19 CRA to Our Boilerplate'),(3315,56,'섹션 1. React JS','노드 리액트 기초 강의 #20 React Router Dom'),(3316,56,'섹션 1. React JS','노드 리액트 기초 강의 #21 데이터 Flow & Axios'),(3317,56,'섹션 1. React JS','노드 리액트 기초 강의 #22 CORS 이슈, Proxy 설정'),(3318,56,'섹션 1. React JS','노드 리액트 기초 강의 #23 Proxy Server ?'),(3319,56,'섹션 1. React JS','노드 리액트 기초 강의 #24 Concurrently'),(3320,56,'섹션 1. React JS','노드 리액트 기초 강의 #25 Antd CSS Framwork'),(3321,56,'섹션 1. React JS','노드 리액트 기초 강의 #26 Redux 기초'),(3322,56,'섹션 1. React JS','노드 리액트 기초 강의 #27 Redux UP !!!!!'),(3323,56,'섹션 1. React JS','노드 리액트 기초 강의 #28 React Hooks'),(3324,56,'섹션 1. React JS','노드 리액트 기초 강의 #29 로그인 페이지 (1)'),(3325,56,'섹션 1. React JS','노드 리액트 기초 강의 #30 로그인 페이지 (2)'),(3326,56,'섹션 1. React JS','노드 리액트 기초 강의 #31 회원 가입 페이지'),(3327,56,'섹션 1. React JS','노드 리액트 기초 강의 #32 로그아웃'),(3328,56,'섹션 1. React JS','노드 리액트 기초 강의 #33 인증 체크 (1)'),(3329,56,'섹션 1. React JS','노드 리액트 기초 강의 #34 인증 체크 (2) 강의 마무리.'),(3330,56,'섹션 2. Diagram 자료','Diagram HTML 자료'),(3331,56,'섹션 2. Diagram 자료','Diagram XML 자료'),(3332,57,'섹션 0. 영화 사이트 만들기','무비앱 시리즈 #1 소개 영상 ( 따라하며 배우는 리액트 노드 )'),(3333,57,'섹션 0. 영화 사이트 만들기','무비앱 시리즈 #2 Boiler-Plate & MongoDB 연결 ( 따라하며 배우는 리액트 노드 )'),(3334,57,'섹션 0. 영화 사이트 만들기','무비앱 시리즈 #3 The MovieDB API 설명 ( 따라하며 배우는 리액트 노드 )'),(3335,57,'섹션 0. 영화 사이트 만들기','무비앱 시리즈 #4 Landing Page 만들기 (1) ( 따라하며 배우는 리액트 노드 )'),(3336,57,'섹션 0. 영화 사이트 만들기','무비앱 시리즈 #5 Grid Card Component ( 따라하며 배우는 리액트 노드 )'),(3337,57,'섹션 0. 영화 사이트 만들기','무비앱 시리즈 #6 Load More Button 만들기 ( 따라하며 배우는 리액트 노드 )'),(3338,57,'섹션 0. 영화 사이트 만들기','무비앱 시리즈 #7 Movie Detail 페이지 만들기 ( 따라하며 배우는 리액트 노드 )'),(3339,57,'섹션 0. 영화 사이트 만들기','무비앱 시리즈 #8 영화 출연진들 가져오기 ( 따라하며 배우는 리액트 노드 )'),(3340,57,'섹션 0. 영화 사이트 만들기','무비앱 시리즈 #9 Favorite 버튼 만들기 (1) ( 따라하며 배우는 리액트 노드 )'),(3341,57,'섹션 0. 영화 사이트 만들기','무비앱 시리즈 #10 Favorite 버튼 만들기 (2) ( 따라하며 배우는 리액트 노드 )'),(3342,57,'섹션 0. 영화 사이트 만들기','무비앱 시리즈 #11 Favorite Button 만들기 (3) ( 따라하며 배우는 리액트 노드 )'),(3343,57,'섹션 0. 영화 사이트 만들기','무비앱 시리즈 #12 Favorite list에 추가 삭제 ( 따라하며 배우는 리액트 노드 )'),(3344,57,'섹션 0. 영화 사이트 만들기','무비앱 시리즈 #13 Favorite 페이지 만들기 (1) ( 따라하며 배우는 리액트 노드 )'),(3345,57,'섹션 0. 영화 사이트 만들기','무비앱 시리즈 #14 Favorite 페이지 (2) ( 따라하며 배우는 리액트 노드 )'),(3346,57,'섹션 0. 영화 사이트 만들기','무비앱 시리즈 #15 강의 마무리 ( 따라하며 배우는 리액트 노드 )'),(3347,57,'섹션 0. 영화 사이트 만들기','강의 자료 Diagram');
/*!40000 ALTER TABLE `course_info_class` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `course_list`
--

DROP TABLE IF EXISTS `course_list`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `course_list` (
  `uid` bigint(20) NOT NULL,
  `gid` bigint(20) NOT NULL,
  `pid` bigint(20) DEFAULT 0,
  `maincategory` varchar(200) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `middlecategory` varchar(200) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `clid` bigint(20) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`clid`),
  KEY `pid` (`pid`)
) ENGINE=InnoDB AUTO_INCREMENT=3964 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `course_list`
--

LOCK TABLES `course_list` WRITE;
/*!40000 ALTER TABLE `course_list` DISABLE KEYS */;
INSERT INTO `course_list` VALUES (86,45,0,'섹션 0. 준비','강의 소개',2960),(86,45,0,'섹션 0. 준비','개발환경 구성',2961),(86,45,0,'섹션 0. 준비','요구사항 분석',2962),(86,45,0,'섹션 1. 순수JS (MVC)','MVC 패턴 설명',2963),(86,45,0,'섹션 1. 순수JS (MVC)','폴더 구조',2964),(86,45,0,'섹션 2. - 검색폼','검색폼 구현 1',2965),(86,45,0,'섹션 2. - 검색폼','검색폼 구현 2',2966),(86,45,0,'섹션 2. - 검색폼','검색폼 구현 3',2967),(86,45,0,'섹션 2. - 검색폼','검색폼 구현 4 (실습)',2968),(86,45,0,'섹션 2. - 검색폼','검색폼 구현 4 (구현)',2969),(86,45,0,'섹션 3. - 검색결과','검색결과 구현 1',2970),(86,45,0,'섹션 3. - 검색결과','검색결과 구현 2',2971),(86,45,0,'섹션 3. - 검색결과','검색결과 구현 3 (실습)',2972),(86,45,0,'섹션 3. - 검색결과','검색결과 구현 3 (구현)',2973),(86,45,0,'섹션 4. - 탭','탭 구현 1',2974),(86,45,0,'섹션 4. - 탭','탭 구현 2',2975),(86,45,0,'섹션 4. - 탭','탭 구현 3 (실습)',2976),(86,45,0,'섹션 4. - 탭','탭 구현 3 (구현)',2977),(86,45,0,'섹션 5. - 추천 검색어','추천 검색어 구현 1',2978),(86,45,0,'섹션 5. - 추천 검색어','추천 검색어 구현 2',2979),(86,45,0,'섹션 5. - 추천 검색어','추천 검색어 구현 3 (실습)',2980),(86,45,0,'섹션 5. - 추천 검색어','추천 검색어 구현 3 (구현)',2981),(86,45,0,'섹션 6. - 최근 검색어','최근 검색어 구현 1, 2',2982),(86,45,0,'섹션 6. - 최근 검색어','최근 검색어 구현 3',2983),(86,45,0,'섹션 6. - 최근 검색어','최근 검색어 구현 4 (실습)',2984),(86,45,0,'섹션 6. - 최근 검색어','최근 검색어 구현 4 (구현)',2985),(86,45,0,'섹션 6. - 최근 검색어','최근 검색어 구현 checkout',2986),(86,45,0,'섹션 6. - 최근 검색어','최근 검색어 구현 5 (실습)',2987),(86,45,0,'섹션 6. - 최근 검색어','최근 검생어 구현 5 (구현)',2988),(86,45,0,'섹션 7. Vue.js (MVVM)','MVVM 구조설명',2989),(86,45,0,'섹션 7. Vue.js (MVVM)','vue.js 설치',2990),(86,45,0,'섹션 8. - 검색폼','검색폼',2991),(86,45,0,'섹션 8. - 검색폼','검색폼 (실습)',2992),(86,45,0,'섹션 8. - 검색폼','검색폼 (구현)',2993),(86,45,0,'섹션 9. - 검색결과','검색결과',2994),(86,45,0,'섹션 9. - 검색결과','검색결과 (실습)',2995),(86,45,0,'섹션 9. - 검색결과','검색결과 (구현)',2996),(86,45,0,'섹션 10. - 탭','탭',2997),(86,45,0,'섹션 10. - 탭','탭 (실습)',2998),(86,45,0,'섹션 10. - 탭','탭 (구현)',2999),(86,45,0,'섹션 11. - 추천 검색어','추천 검색어 구현',3000),(86,45,0,'섹션 12. - 최근 검색어','최근 검색어',3001),(86,45,0,'섹션 12. - 최근 검색어','최근 검색어 (실습)',3002),(86,45,0,'섹션 12. - 최근 검색어','최근 검색어 (구현)',3003),(86,45,0,'섹션 13. - 개선된 점','개선된 점',3004),(86,45,0,'섹션 14. 컴포넌트','Vue Component 소개',3005),(86,45,0,'섹션 14. 컴포넌트','FormComponent 구현 1',3006),(86,45,0,'섹션 14. 컴포넌트','FormComponent 구현 2',3007),(86,45,0,'섹션 14. 컴포넌트','ResultComponent 구현',3008),(86,45,0,'섹션 14. 컴포넌트','List Component 구현 1',3009),(86,45,0,'섹션 14. 컴포넌트','List Component 구현 2',3010),(86,45,0,'섹션 14. 컴포넌트','Tab Component 1',3011),(86,45,0,'섹션 14. 컴포넌트','Tab Component 2',3012),(86,45,0,'섹션 15. 단일 파일 컴포넌트 구현','단일 파일 컴포넌트 1',3013),(86,45,0,'섹션 15. 단일 파일 컴포넌트 구현','단일 파일 컴포넌트 2',3014),(86,45,0,'섹션 15. 단일 파일 컴포넌트 구현','단일 파일 컴포넌트 3',3015),(86,45,0,'섹션 15. 단일 파일 컴포넌트 구현','단일 파일 컴포넌트 (실습)',3016),(86,45,0,'섹션 15. 단일 파일 컴포넌트 구현','단일 파일 컴포넌트 (구현)',3017),(86,45,0,'섹션 16. 정리','정리',3018),(86,46,255,'섹션 0. 제코베 포트폴리오 템플릿','제코베 포트폴리오 템플릿',3019),(86,46,0,'섹션 1. Intro','얕은물 강의자료(인쇄용 PDF파일)',3020),(86,46,0,'섹션 1. Intro','깊은물 강의노트(Jupyter notebook)',3021),(86,46,0,'섹션 1. Intro','HTML, CSS, JS와 Front-end! 무엇을 할 수 있나요!?',3022),(86,46,0,'섹션 1. Intro','Python과 Back-end! 무엇을 할 수 있나요!?',3023),(86,46,0,'섹션 2. 얕은 물 환경 설정','Google Colab 사용법',3024),(86,46,0,'섹션 3. 얕은 물','라이캣의 탄생 - 변수와 type',3025),(86,46,0,'섹션 3. 얕은 물','라이캣의 탄생 - int, float, str, bool',3026),(86,46,0,'섹션 3. 얕은 물','라이캣의 탄생 - list, tuple, dict, set',3027),(86,46,0,'섹션 3. 얕은 물','라이캣의 탄생 - 형변환과 input, print',3028),(86,46,0,'섹션 3. 얕은 물','생선을 잡아라 - 산술연산과 할당연산',3029),(86,46,0,'섹션 3. 얕은 물','생선을 잡아라 - 비교 연산',3030),(86,46,0,'섹션 3. 얕은 물','생선을 잡아라 - 논리 연산',3031),(86,46,0,'섹션 3. 얕은 물','생선을 잡아라 - 비트 연산',3032),(86,46,0,'섹션 3. 얕은 물','생선을 잡아라 - 멤버 연산과 식별 연산, 연산자 우선순위',3033),(86,46,0,'섹션 3. 얕은 물','[연습문제] 캣의 해골섬 출항',3034),(86,46,0,'섹션 3. 얕은 물','효율적으로 생선 잡기 - 함수',3035),(86,46,0,'섹션 3. 얕은 물','효율적으로 생선 잡기 - global',3036),(86,46,0,'섹션 3. 얕은 물','효율적으로 생선 잡기 - 함수 안에 함수',3037),(86,46,0,'섹션 3. 얕은 물','생선 회사를 운영하라 - if, elif, else',3038),(86,46,0,'섹션 3. 얕은 물','[연습문제] 캣의 고객 관리',3039),(86,46,0,'섹션 3. 얕은 물','라이캣의 EXIT - for',3040),(86,46,0,'섹션 3. 얕은 물','라이캣의 EXIT - while',3041),(86,46,0,'섹션 3. 얕은 물','[연습문제] 사자탈을 쓴 캣',3042),(86,46,0,'섹션 3. 얕은 물','[연습문제] 쏘아진 화살',3043),(86,46,0,'섹션 3. 얕은 물','파이와 썬의 알고리즘 7원석을 찾아서 - 클래스',3044),(86,46,0,'섹션 3. 얕은 물','[연습문제] 캣의 모험 자금을 모아라',3045),(86,46,0,'섹션 3. 얕은 물','[연습문제] 파이와 썬이 남긴 단 하나의 단서',3046),(86,46,0,'섹션 4. 깊은 물 환경설정','Python Editor 설치',3047),(86,46,0,'섹션 4. 깊은 물 환경설정','Jupyter notebook 사용법',3048),(86,46,0,'섹션 5. 깊은 물','주석과 변수',3049),(86,46,0,'섹션 5. 깊은 물','입력과 출력',3050),(86,46,0,'섹션 5. 깊은 물','숫자 자료형',3051),(86,46,0,'섹션 5. 깊은 물','문자 자료형',3052),(86,46,0,'섹션 5. 깊은 물','문자 자료형 - 연산과 format',3053),(86,46,0,'섹션 5. 깊은 물','형변환',3054),(86,46,0,'섹션 5. 깊은 물','연산 - 산술연산과 비교연산',3055),(86,46,0,'섹션 5. 깊은 물','연산 - 논리연산',3056),(86,46,0,'섹션 5. 깊은 물','연산 - 비트연산, 할당연산, 식별연산, in 구문',3057),(86,46,0,'섹션 5. 깊은 물','함수 - 기본 개념',3058),(86,46,0,'섹션 5. 깊은 물','함수 - 지역변수와 전역변수',3059),(86,46,0,'섹션 5. 깊은 물','함수 - 재귀함수',3060),(86,46,0,'섹션 5. 깊은 물','리스트',3061),(86,46,0,'섹션 5. 깊은 물','리스트 - 다차원 리스트와 built-in functions , range, list comprehension',3062),(86,46,0,'섹션 5. 깊은 물','튜플',3063),(86,46,0,'섹션 5. 깊은 물','딕셔너리',3064),(86,46,0,'섹션 5. 깊은 물','셋',3065),(86,46,0,'섹션 5. 깊은 물','조건문 - if, elif, else',3066),(86,46,0,'섹션 5. 깊은 물','반복문 - for, while, continue, pass, break, else',3067),(86,46,0,'섹션 5. 깊은 물','클래스 - 클래스 변수와 인스턴스 변수',3068),(86,46,0,'섹션 5. 깊은 물','클래스 - 상속',3069),(86,46,0,'섹션 5. 깊은 물','모듈과 패키지 - import',3070),(86,46,0,'섹션 5. 깊은 물','built-in functions',3071),(86,46,0,'섹션 5. 깊은 물','args, kwargs',3072),(86,46,0,'섹션 5. 깊은 물','lambda와 응용식',3073),(86,46,0,'섹션 5. 깊은 물','파일 입출력',3074),(86,46,0,'섹션 5. 깊은 물','이터레이터 순회 가능한 객체 - iter, __next__, slice',3075),(86,46,0,'섹션 5. 깊은 물','제너레이터',3076),(86,46,0,'섹션 5. 깊은 물','factory 함수, 클로저',3077),(86,46,0,'섹션 5. 깊은 물','decorator',3078),(86,46,0,'섹션 5. 깊은 물','예외처리',3079),(86,46,0,'섹션 6. Python 재귀함수 자세히 알아보기!','반복문을 이용한 1부터 100까지의 합과 곱',3080),(86,46,0,'섹션 6. Python 재귀함수 자세히 알아보기!','재귀함수를 이용한 1부터 100까지의 합과 곱',3081),(86,46,0,'섹션 6. Python 재귀함수 자세히 알아보기!','재귀함수 사례',3082),(86,46,0,'섹션 6. Python 재귀함수 자세히 알아보기!','재귀함수 보강예제',3083),(86,46,0,'섹션 7. Python 30분 요약 강좌','Python 30분 요약 강좌 - 1부',3084),(86,46,0,'섹션 7. Python 30분 요약 강좌','Python 30분 요약 강좌 - 2부',3085),(86,46,0,'섹션 8. Python 100제(PDF 파일)','Python 100제 - 노션링크, PDF 파일',3086),(86,46,0,'섹션 9. 보너스 영상!(Python 최신 경향, 추가 보충설명)','Python 3.8 무엇이 달라졌나요?',3087),(86,46,0,'섹션 9. 보너스 영상!(Python 최신 경향, 추가 보충설명)','Python 3.9 무엇이 달라졌나요?',3088),(86,46,0,'섹션 9. 보너스 영상!(Python 최신 경향, 추가 보충설명)','보강 - in 구문',3089),(86,46,0,'섹션 9. 보너스 영상!(Python 최신 경향, 추가 보충설명)','보강 - 2의 보수',3090),(84,47,0,'섹션 0. ----- 오리엔테이션 -----','강의 소개',3091),(84,47,0,'섹션 1. 제작할 앱 & API 소개 & Vue.js 스타일 가이드 소개','개발 환경 설정 및 비공개 리포지토리 주소 안내',3092),(84,47,0,'섹션 1. 제작할 앱 & API 소개 & Vue.js 스타일 가이드 소개','VSCode 플러그인 목록',3093),(84,47,0,'섹션 1. 제작할 앱 & API 소개 & Vue.js 스타일 가이드 소개','Vue.js 스타일 가이드 및 코딩 컨벤션 소개',3094),(84,47,300,'섹션 3. 소개 및 설계','제작할 사이트 및 API 소개',3095),(84,47,0,'섹션 3. 소개 및 설계','애플리케이션 라우터 설계',3096),(84,47,0,'섹션 3. 소개 및 설계','비공개 리포지토리 소개 및 뷰 CLI 설명',3097),(84,47,0,'섹션 3. 소개 및 설계','Vue CLI 2.x vs Vue CLI 3.x',3098),(84,47,299,'섹션 4. 프로젝트 셋업','Vue CLI로 프로젝트 생성 및 ESLint 로그 확인',3099),(84,47,301,'섹션 4. 프로젝트 셋업','ESLint 도구 소개와 사용해야 하는 이유?',3100),(84,47,0,'섹션 4. 프로젝트 셋업','Vue CLI 3.x에서 ESLint 설정 끄는 방법',3101),(84,47,263,'섹션 5. 라우터 기본','라우터 설치 및 라우터 구현',3102),(84,47,0,'섹션 5. 라우터 기본','router-view를 이용한 라우팅 컴포넌트 표시',3103),(84,47,0,'섹션 5. 라우터 기본','redirect 속성과 router-link',3104),(84,47,0,'섹션 5. 라우터 기본','ToolBar의 라우터 링크 스타일링',3105),(84,47,0,'섹션 5. 라우터 기본','[실습 안내] ItemView와 UserView 라우터 구현',3106),(84,47,0,'섹션 5. 라우터 기본','라우터 폴더 작명 팁과 라우터 mode 안내',3107),(84,47,0,'섹션 6. API 구현','axios를 이용한 api 호출',3108),(84,47,0,'섹션 6. API 구현','[실습 안내] axios의 api 함수 구조화 방법 및 실습 안내',3109),(84,47,0,'섹션 6. API 구현','[실습] JobsView와 AskView 구현',3110),(84,47,0,'섹션 6. API 구현','자바스크립트 this 4가지와 화살표 함수의 this',3111),(84,47,0,'섹션 6. API 구현','자바스크립트 비동기 처리(1) - Callback',3112),(84,47,0,'섹션 6. API 구현','자바스크립트 비동기 처리(2) - Promise',3113),(84,47,0,'섹션 7. 스토어 구현','Vuex 설치 및 Vuex가 적용된 앱 구조 소개',3114),(84,47,0,'섹션 7. 스토어 구현','Vuex 모듈화 및 state 적용',3115),(84,47,0,'섹션 7. 스토어 구현','NewsView에 actions와 mutations 적용',3116),(84,47,0,'섹션 7. 스토어 구현','[실습 안내] JobsView와 AskView 실습 안내',3117),(84,47,0,'섹션 7. 스토어 구현','[실습] JobsView에 스토어 적용',3118),(84,47,0,'섹션 7. 스토어 구현','[실습] map 헬퍼 함수를 이용한 AskView 풀이',3119),(84,47,0,'섹션 7. 스토어 구현','스토어 속성 모듈화',3120),(84,47,0,'섹션 8. ----- 중간 정리 -----','중간 정리 및 스타일링',3121),(84,47,0,'섹션 9. 라우터 실전','동적 라우트 매칭 원리 및 적용',3122),(84,47,0,'섹션 9. 라우터 실전','라우터 params을 이용한 User 상세 페이지 구현',3123),(84,47,0,'섹션 9. 라우터 실전','[실습] 질문 상세 페이지 구현 실습 안내',3124),(84,47,0,'섹션 9. 라우터 실전','[실습] 질문 상세 페이지 실습 풀이 및 오류 디버깅',3125),(84,47,0,'섹션 9. 라우터 실전','질문 상세 페이지 스타일링 및 v-html 디렉티브 사용법 소개',3126),(84,47,0,'섹션 9. 라우터 실전','라우터 트랜지션',3127),(84,47,0,'섹션 10. 리팩토링 1 - 리스트 아이템 컴포넌트 공통화','컴포넌트 공통화 리팩토링 소개',3128),(84,47,0,'섹션 10. 리팩토링 1 - 리스트 아이템 컴포넌트 공통화','[실습 안내] 뉴스 리스트 스타일링',3129),(84,47,0,'섹션 10. 리팩토링 1 - 리스트 아이템 컴포넌트 공통화','[실습] 질문, 구직 리스트 스타일링',3130),(84,47,0,'섹션 10. 리팩토링 1 - 리스트 아이템 컴포넌트 공통화','[실습 안내] 공통 컴포넌트 ListItem 제작 및 실습 안내',3131),(84,47,0,'섹션 10. 리팩토링 1 - 리스트 아이템 컴포넌트 공통화','[실습] 공통 컴포넌트 구현(1) - 페이지별 데이터 분기',3132),(84,47,0,'섹션 10. 리팩토링 1 - 리스트 아이템 컴포넌트 공통화','공통 컴포넌트 구현(2) - computed 속성',3133),(84,47,0,'섹션 10. 리팩토링 1 - 리스트 아이템 컴포넌트 공통화','공통 컴포넌트 구현(3) - template 속성과 v-if 디렉티브 활용 1',3134),(84,47,0,'섹션 10. 리팩토링 1 - 리스트 아이템 컴포넌트 공통화','공통 컴포넌트 구현(4) - template 속성과 v-if 디렉티브 활용 2',3135),(84,47,0,'섹션 11. 리팩토링 2 - 사용자 프로필 컴포넌트 공통화','사용자 프로필 컴포넌트 소개 및 등록',3136),(84,47,0,'섹션 11. 리팩토링 2 - 사용자 프로필 컴포넌트 공통화','사용자 컴포넌트 데이터 흐름 처리 1',3137),(84,47,0,'섹션 11. 리팩토링 2 - 사용자 프로필 컴포넌트 공통화','사용자 컴포넌트 데이터 흐름 처리 2',3138),(84,47,0,'섹션 11. 리팩토링 2 - 사용자 프로필 컴포넌트 공통화','2가지 데이터 처리 흐름 비교',3139),(84,47,0,'섹션 11. 리팩토링 2 - 사용자 프로필 컴포넌트 공통화','slot을 이용한 사용자 프로필 컴포넌트 구현',3140),(84,47,0,'섹션 11. 리팩토링 2 - 사용자 프로필 컴포넌트 공통화','사용자 프로필 컴포넌트 스타일링 및 코드 정리',3141),(84,47,0,'섹션 12. 리팩토링 3 - Mixin과 하이 오더 컴포넌트','컴포넌트 재활용 방법 및 재활용할 포인트 소개',3142),(84,47,0,'섹션 12. 리팩토링 3 - Mixin과 하이 오더 컴포넌트','이벤트 버스를 이용한 스피너 컴포넌트 구현',3143),(84,47,0,'섹션 12. 리팩토링 3 - Mixin과 하이 오더 컴포넌트','스피너 실행 및 종료 시점 알아보기',3144),(84,47,0,'섹션 12. 리팩토링 3 - Mixin과 하이 오더 컴포넌트','하이 오더 컴포넌트(HOC) 소개 및 구현',3145),(84,47,0,'섹션 12. 리팩토링 3 - Mixin과 하이 오더 컴포넌트','하이 오더 컴포넌트에서 사용할 ListView 컴포넌트 구현',3146),(84,47,0,'섹션 12. 리팩토링 3 - Mixin과 하이 오더 컴포넌트','하이 오더 컴포넌트가 적용된 앱 구조 설명 및 흐름 정리',3147),(84,47,0,'섹션 12. 리팩토링 3 - Mixin과 하이 오더 컴포넌트','Mixin의 개요와 활용처 그리고 HOC와의 차이점',3148),(84,47,0,'섹션 12. 리팩토링 3 - Mixin과 하이 오더 컴포넌트','[실습 안내] Mixin 적용 후 HOC 구조와 비교',3149),(84,47,0,'섹션 12. 리팩토링 3 - Mixin과 하이 오더 컴포넌트','[실습] Mixin 실습 및 컴포넌트 재활용 방법에 대한 리뷰',3150),(84,47,0,'섹션 13. 리팩토링 4 - 데이터 호출과 UX','UX를 고려한 데이터 호출 시점',3151),(84,47,0,'섹션 13. 리팩토링 4 - 데이터 호출과 UX','라이프 사이클 훅을 이용한 데이터 호출 방법의 문제와 비동기 처리 코드 수정',3152),(84,47,0,'섹션 13. 리팩토링 4 - 데이터 호출과 UX','라우터 네비게이션을 이용한 데이터 호출 방법',3153),(84,47,0,'섹션 13. 리팩토링 4 - 데이터 호출과 UX','[실습] 라우터 네비게이션 가드 실습 안내',3154),(84,47,0,'섹션 13. 리팩토링 4 - 데이터 호출과 UX','[실습] 라우터 네비게이션 가드 실습 및 스피너 종료 시점 변경',3155),(84,47,0,'섹션 13. 리팩토링 4 - 데이터 호출과 UX','UX를 고려한 데이터 호출 시점 요약 정리 및 추가 고려 사항 안내',3156),(84,47,0,'섹션 14. 리팩토링 5 - async & await를 이용한 비동기 처리','자바스크립트 비동기 처리 패턴의 발전 과정',3157),(84,47,0,'섹션 14. 리팩토링 5 - async & await를 이용한 비동기 처리','async & await 문법 소개',3158),(84,47,0,'섹션 14. 리팩토링 5 - async & await를 이용한 비동기 처리','async & await 예제 소개',3159),(84,47,0,'섹션 14. 리팩토링 5 - async & await를 이용한 비동기 처리','async await 예제 실습',3160),(84,47,0,'섹션 14. 리팩토링 5 - async & await를 이용한 비동기 처리','async await 에러 처리 방법과 공통화 함수 작성 방법',3161),(84,47,0,'섹션 14. 리팩토링 5 - async & await를 이용한 비동기 처리','async 함수를 이용한 코드 리팩토링',3162),(84,47,0,'섹션 14. 리팩토링 5 - async & await를 이용한 비동기 처리','[실습 안내] async await 실습 안내',3163),(84,47,0,'섹션 14. 리팩토링 5 - async & await를 이용한 비동기 처리','[실습] async await 실습 풀이',3164),(84,47,0,'섹션 16. 외부 라이브러리 모듈화 방법(차트)','라이브러리 모듈화의 이유와 배경',3165),(84,47,0,'섹션 16. 외부 라이브러리 모듈화 방법(차트)','차트 라이브러리 설치 및 차트 그리기',3166),(84,47,0,'섹션 16. 외부 라이브러리 모듈화 방법(차트)','BarChart 컴포넌트화 작업',3167),(84,47,0,'섹션 16. 외부 라이브러리 모듈화 방법(차트)','[실습] LineChart 실습 안내',3168),(84,47,0,'섹션 16. 외부 라이브러리 모듈화 방법(차트)','[실습] LineChart 제작 및 차트 충돌 문제 해결',3169),(84,47,0,'섹션 16. 외부 라이브러리 모듈화 방법(차트)','Vue에서 DOM을 접근하는 방법인 ref 속성 소개',3170),(84,47,0,'섹션 16. 외부 라이브러리 모듈화 방법(차트)','Vue.js 플러그인 소개 및 차트 플러그인 제작',3171),(84,47,0,'섹션 16. 외부 라이브러리 모듈화 방법(차트)','결합력 높은 차트 컴포넌트 모듈 제작 방법',3172),(84,47,0,'섹션 17. 컴포넌트 디자인 패턴','Component Design Patterns 소개',3173),(84,47,0,'섹션 17. 컴포넌트 디자인 패턴','Common Approach',3174),(84,47,0,'섹션 17. 컴포넌트 디자인 패턴','Component with Slots - Slot vs Props',3175),(84,47,0,'섹션 17. 컴포넌트 디자인 패턴','Component with Slots 구현 방법과 활용처',3176),(84,47,0,'섹션 17. 컴포넌트 디자인 패턴','Controlled Component - Input 박스를 다룰 때 생기는 문제점',3177),(84,47,0,'섹션 17. 컴포넌트 디자인 패턴','Controlled Component - 구현 방법과 활용처',3178),(84,47,0,'섹션 17. 컴포넌트 디자인 패턴','Renderless Component - 소개',3179),(84,47,0,'섹션 17. 컴포넌트 디자인 패턴','Renderless Component - Render Function',3180),(84,47,0,'섹션 17. 컴포넌트 디자인 패턴','Renderless Component - 구현 방법과 활용처',3181),(84,47,0,'섹션 18. 서비스 배포 환경 구성','서비스 배포를 위한 명령어 소개 및 실습',3182),(84,47,0,'섹션 18. 서비스 배포 환경 구성','Netlify를 이용한 배포 실습',3183),(84,47,0,'섹션 18. 서비스 배포 환경 구성','base 디렉토리 설정 및 배포 완료',3184),(84,47,0,'섹션 18. 서비스 배포 환경 구성','SPA 호스팅시에 서버에 추가해줘야 하는 설정 안내',3185),(84,47,0,'섹션 18. 서비스 배포 환경 구성','env 환경 변수 파일을 이용한 옵션 변경 방법',3186),(87,47,0,'섹션 0. ----- 오리엔테이션 -----','강의 소개',3187),(87,47,0,'섹션 1. 제작할 앱 & API 소개 & Vue.js 스타일 가이드 소개','개발 환경 설정 및 비공개 리포지토리 주소 안내',3188),(87,47,0,'섹션 1. 제작할 앱 & API 소개 & Vue.js 스타일 가이드 소개','VSCode 플러그인 목록',3189),(87,47,0,'섹션 1. 제작할 앱 & API 소개 & Vue.js 스타일 가이드 소개','Vue.js 스타일 가이드 및 코딩 컨벤션 소개',3190),(87,47,0,'섹션 3. 소개 및 설계','제작할 사이트 및 API 소개',3191),(87,47,0,'섹션 3. 소개 및 설계','애플리케이션 라우터 설계',3192),(87,47,0,'섹션 3. 소개 및 설계','비공개 리포지토리 소개 및 뷰 CLI 설명',3193),(87,47,0,'섹션 3. 소개 및 설계','Vue CLI 2.x vs Vue CLI 3.x',3194),(87,47,295,'섹션 4. 프로젝트 셋업','Vue CLI로 프로젝트 생성 및 ESLint 로그 확인',3195),(87,47,0,'섹션 4. 프로젝트 셋업','ESLint 도구 소개와 사용해야 하는 이유?',3196),(87,47,0,'섹션 4. 프로젝트 셋업','Vue CLI 3.x에서 ESLint 설정 끄는 방법',3197),(87,47,264,'섹션 5. 라우터 기본','라우터 설치 및 라우터 구현',3198),(87,47,0,'섹션 5. 라우터 기본','router-view를 이용한 라우팅 컴포넌트 표시',3199),(87,47,0,'섹션 5. 라우터 기본','redirect 속성과 router-link',3200),(87,47,0,'섹션 5. 라우터 기본','ToolBar의 라우터 링크 스타일링',3201),(87,47,0,'섹션 5. 라우터 기본','[실습 안내] ItemView와 UserView 라우터 구현',3202),(87,47,0,'섹션 5. 라우터 기본','라우터 폴더 작명 팁과 라우터 mode 안내',3203),(87,47,296,'섹션 6. API 구현','axios를 이용한 api 호출',3204),(87,47,0,'섹션 6. API 구현','[실습 안내] axios의 api 함수 구조화 방법 및 실습 안내',3205),(87,47,0,'섹션 6. API 구현','[실습] JobsView와 AskView 구현',3206),(87,47,0,'섹션 6. API 구현','자바스크립트 this 4가지와 화살표 함수의 this',3207),(87,47,0,'섹션 6. API 구현','자바스크립트 비동기 처리(1) - Callback',3208),(87,47,0,'섹션 6. API 구현','자바스크립트 비동기 처리(2) - Promise',3209),(87,47,0,'섹션 7. 스토어 구현','Vuex 설치 및 Vuex가 적용된 앱 구조 소개',3210),(87,47,0,'섹션 7. 스토어 구현','Vuex 모듈화 및 state 적용',3211),(87,47,0,'섹션 7. 스토어 구현','NewsView에 actions와 mutations 적용',3212),(87,47,0,'섹션 7. 스토어 구현','[실습 안내] JobsView와 AskView 실습 안내',3213),(87,47,0,'섹션 7. 스토어 구현','[실습] JobsView에 스토어 적용',3214),(87,47,0,'섹션 7. 스토어 구현','[실습] map 헬퍼 함수를 이용한 AskView 풀이',3215),(87,47,0,'섹션 7. 스토어 구현','스토어 속성 모듈화',3216),(87,47,0,'섹션 8. ----- 중간 정리 -----','중간 정리 및 스타일링',3217),(87,47,0,'섹션 9. 라우터 실전','동적 라우트 매칭 원리 및 적용',3218),(87,47,0,'섹션 9. 라우터 실전','라우터 params을 이용한 User 상세 페이지 구현',3219),(87,47,0,'섹션 9. 라우터 실전','[실습] 질문 상세 페이지 구현 실습 안내',3220),(87,47,0,'섹션 9. 라우터 실전','[실습] 질문 상세 페이지 실습 풀이 및 오류 디버깅',3221),(87,47,0,'섹션 9. 라우터 실전','질문 상세 페이지 스타일링 및 v-html 디렉티브 사용법 소개',3222),(87,47,0,'섹션 9. 라우터 실전','라우터 트랜지션',3223),(87,47,0,'섹션 10. 리팩토링 1 - 리스트 아이템 컴포넌트 공통화','컴포넌트 공통화 리팩토링 소개',3224),(87,47,0,'섹션 10. 리팩토링 1 - 리스트 아이템 컴포넌트 공통화','[실습 안내] 뉴스 리스트 스타일링',3225),(87,47,0,'섹션 10. 리팩토링 1 - 리스트 아이템 컴포넌트 공통화','[실습] 질문, 구직 리스트 스타일링',3226),(87,47,0,'섹션 10. 리팩토링 1 - 리스트 아이템 컴포넌트 공통화','[실습 안내] 공통 컴포넌트 ListItem 제작 및 실습 안내',3227),(87,47,0,'섹션 10. 리팩토링 1 - 리스트 아이템 컴포넌트 공통화','[실습] 공통 컴포넌트 구현(1) - 페이지별 데이터 분기',3228),(87,47,0,'섹션 10. 리팩토링 1 - 리스트 아이템 컴포넌트 공통화','공통 컴포넌트 구현(2) - computed 속성',3229),(87,47,0,'섹션 10. 리팩토링 1 - 리스트 아이템 컴포넌트 공통화','공통 컴포넌트 구현(3) - template 속성과 v-if 디렉티브 활용 1',3230),(87,47,0,'섹션 10. 리팩토링 1 - 리스트 아이템 컴포넌트 공통화','공통 컴포넌트 구현(4) - template 속성과 v-if 디렉티브 활용 2',3231),(87,47,0,'섹션 11. 리팩토링 2 - 사용자 프로필 컴포넌트 공통화','사용자 프로필 컴포넌트 소개 및 등록',3232),(87,47,0,'섹션 11. 리팩토링 2 - 사용자 프로필 컴포넌트 공통화','사용자 컴포넌트 데이터 흐름 처리 1',3233),(87,47,0,'섹션 11. 리팩토링 2 - 사용자 프로필 컴포넌트 공통화','사용자 컴포넌트 데이터 흐름 처리 2',3234),(87,47,0,'섹션 11. 리팩토링 2 - 사용자 프로필 컴포넌트 공통화','2가지 데이터 처리 흐름 비교',3235),(87,47,0,'섹션 11. 리팩토링 2 - 사용자 프로필 컴포넌트 공통화','slot을 이용한 사용자 프로필 컴포넌트 구현',3236),(87,47,0,'섹션 11. 리팩토링 2 - 사용자 프로필 컴포넌트 공통화','사용자 프로필 컴포넌트 스타일링 및 코드 정리',3237),(87,47,0,'섹션 12. 리팩토링 3 - Mixin과 하이 오더 컴포넌트','컴포넌트 재활용 방법 및 재활용할 포인트 소개',3238),(87,47,0,'섹션 12. 리팩토링 3 - Mixin과 하이 오더 컴포넌트','이벤트 버스를 이용한 스피너 컴포넌트 구현',3239),(87,47,0,'섹션 12. 리팩토링 3 - Mixin과 하이 오더 컴포넌트','스피너 실행 및 종료 시점 알아보기',3240),(87,47,0,'섹션 12. 리팩토링 3 - Mixin과 하이 오더 컴포넌트','하이 오더 컴포넌트(HOC) 소개 및 구현',3241),(87,47,0,'섹션 12. 리팩토링 3 - Mixin과 하이 오더 컴포넌트','하이 오더 컴포넌트에서 사용할 ListView 컴포넌트 구현',3242),(87,47,0,'섹션 12. 리팩토링 3 - Mixin과 하이 오더 컴포넌트','하이 오더 컴포넌트가 적용된 앱 구조 설명 및 흐름 정리',3243),(87,47,0,'섹션 12. 리팩토링 3 - Mixin과 하이 오더 컴포넌트','Mixin의 개요와 활용처 그리고 HOC와의 차이점',3244),(87,47,0,'섹션 12. 리팩토링 3 - Mixin과 하이 오더 컴포넌트','[실습 안내] Mixin 적용 후 HOC 구조와 비교',3245),(87,47,0,'섹션 12. 리팩토링 3 - Mixin과 하이 오더 컴포넌트','[실습] Mixin 실습 및 컴포넌트 재활용 방법에 대한 리뷰',3246),(87,47,0,'섹션 13. 리팩토링 4 - 데이터 호출과 UX','UX를 고려한 데이터 호출 시점',3247),(87,47,0,'섹션 13. 리팩토링 4 - 데이터 호출과 UX','라이프 사이클 훅을 이용한 데이터 호출 방법의 문제와 비동기 처리 코드 수정',3248),(87,47,0,'섹션 13. 리팩토링 4 - 데이터 호출과 UX','라우터 네비게이션을 이용한 데이터 호출 방법',3249),(87,47,0,'섹션 13. 리팩토링 4 - 데이터 호출과 UX','[실습] 라우터 네비게이션 가드 실습 안내',3250),(87,47,0,'섹션 13. 리팩토링 4 - 데이터 호출과 UX','[실습] 라우터 네비게이션 가드 실습 및 스피너 종료 시점 변경',3251),(87,47,0,'섹션 13. 리팩토링 4 - 데이터 호출과 UX','UX를 고려한 데이터 호출 시점 요약 정리 및 추가 고려 사항 안내',3252),(87,47,0,'섹션 14. 리팩토링 5 - async & await를 이용한 비동기 처리','자바스크립트 비동기 처리 패턴의 발전 과정',3253),(87,47,0,'섹션 14. 리팩토링 5 - async & await를 이용한 비동기 처리','async & await 문법 소개',3254),(87,47,0,'섹션 14. 리팩토링 5 - async & await를 이용한 비동기 처리','async & await 예제 소개',3255),(87,47,0,'섹션 14. 리팩토링 5 - async & await를 이용한 비동기 처리','async await 예제 실습',3256),(87,47,0,'섹션 14. 리팩토링 5 - async & await를 이용한 비동기 처리','async await 에러 처리 방법과 공통화 함수 작성 방법',3257),(87,47,0,'섹션 14. 리팩토링 5 - async & await를 이용한 비동기 처리','async 함수를 이용한 코드 리팩토링',3258),(87,47,0,'섹션 14. 리팩토링 5 - async & await를 이용한 비동기 처리','[실습 안내] async await 실습 안내',3259),(87,47,0,'섹션 14. 리팩토링 5 - async & await를 이용한 비동기 처리','[실습] async await 실습 풀이',3260),(87,47,0,'섹션 16. 외부 라이브러리 모듈화 방법(차트)','라이브러리 모듈화의 이유와 배경',3261),(87,47,0,'섹션 16. 외부 라이브러리 모듈화 방법(차트)','차트 라이브러리 설치 및 차트 그리기',3262),(87,47,0,'섹션 16. 외부 라이브러리 모듈화 방법(차트)','BarChart 컴포넌트화 작업',3263),(87,47,0,'섹션 16. 외부 라이브러리 모듈화 방법(차트)','[실습] LineChart 실습 안내',3264),(87,47,0,'섹션 16. 외부 라이브러리 모듈화 방법(차트)','[실습] LineChart 제작 및 차트 충돌 문제 해결',3265),(87,47,0,'섹션 16. 외부 라이브러리 모듈화 방법(차트)','Vue에서 DOM을 접근하는 방법인 ref 속성 소개',3266),(87,47,0,'섹션 16. 외부 라이브러리 모듈화 방법(차트)','Vue.js 플러그인 소개 및 차트 플러그인 제작',3267),(87,47,0,'섹션 16. 외부 라이브러리 모듈화 방법(차트)','결합력 높은 차트 컴포넌트 모듈 제작 방법',3268),(87,47,0,'섹션 17. 컴포넌트 디자인 패턴','Component Design Patterns 소개',3269),(87,47,0,'섹션 17. 컴포넌트 디자인 패턴','Common Approach',3270),(87,47,0,'섹션 17. 컴포넌트 디자인 패턴','Component with Slots - Slot vs Props',3271),(87,47,0,'섹션 17. 컴포넌트 디자인 패턴','Component with Slots 구현 방법과 활용처',3272),(87,47,0,'섹션 17. 컴포넌트 디자인 패턴','Controlled Component - Input 박스를 다룰 때 생기는 문제점',3273),(87,47,0,'섹션 17. 컴포넌트 디자인 패턴','Controlled Component - 구현 방법과 활용처',3274),(87,47,0,'섹션 17. 컴포넌트 디자인 패턴','Renderless Component - 소개',3275),(87,47,0,'섹션 17. 컴포넌트 디자인 패턴','Renderless Component - Render Function',3276),(87,47,0,'섹션 17. 컴포넌트 디자인 패턴','Renderless Component - 구현 방법과 활용처',3277),(87,47,0,'섹션 18. 서비스 배포 환경 구성','서비스 배포를 위한 명령어 소개 및 실습',3278),(87,47,0,'섹션 18. 서비스 배포 환경 구성','Netlify를 이용한 배포 실습',3279),(87,47,0,'섹션 18. 서비스 배포 환경 구성','base 디렉토리 설정 및 배포 완료',3280),(87,47,0,'섹션 18. 서비스 배포 환경 구성','SPA 호스팅시에 서버에 추가해줘야 하는 설정 안내',3281),(87,47,0,'섹션 18. 서비스 배포 환경 구성','env 환경 변수 파일을 이용한 옵션 변경 방법',3282),(84,49,0,'섹션 0. 제코베 포트폴리오 템플릿','제코베 포트폴리오 템플릿',3378),(84,49,0,'섹션 1. 강의 안내 영상','강의 안내',3379),(84,49,0,'섹션 2. HTML, CSS, JS, Python은 무엇이고 무엇을 할 수 있나요?','HTML, CSS, JS와 Front-end 개발자에 대하여',3380),(84,49,0,'섹션 2. HTML, CSS, JS, Python은 무엇이고 무엇을 할 수 있나요?','Python과 Back-end 개발자에 대하여',3381),(84,49,0,'섹션 3. front-end','완성본 예제 소스',3382),(84,49,0,'섹션 3. front-end','인트로',3383),(84,49,0,'섹션 3. front-end','settings',3384),(84,49,0,'섹션 3. front-end','웹스톰 100% 활용하기',3385),(84,49,0,'섹션 3. front-end','수업방향',3386),(84,49,0,'섹션 3. front-end','basic html part1',3387),(84,49,0,'섹션 3. front-end','basic html part2',3388),(84,49,0,'섹션 3. front-end','basic css part1',3389),(84,49,0,'섹션 3. front-end','basic css part2',3390),(84,49,0,'섹션 3. front-end','basic css part3',3391),(84,49,0,'섹션 3. front-end','reset',3392),(84,49,0,'섹션 3. front-end','header part1',3393),(84,49,0,'섹션 3. front-end','header part2',3394),(84,49,0,'섹션 3. front-end','header part3',3395),(84,49,0,'섹션 3. front-end','left box',3396),(84,49,0,'섹션 3. front-end','create_box part01',3397),(84,49,0,'섹션 3. front-end','create_box part02',3398),(84,49,0,'섹션 3. front-end','contents part01',3399),(84,49,0,'섹션 3. front-end','contents part02',3400),(84,49,0,'섹션 3. front-end','right_box',3401),(84,49,0,'섹션 3. front-end','side_box',3402),(84,49,0,'섹션 3. front-end','반응형',3403),(84,49,0,'섹션 3. front-end','javascript란?',3404),(84,49,0,'섹션 3. front-end','변수와 상수',3405),(84,49,0,'섹션 3. front-end','데이터타입',3406),(84,49,0,'섹션 3. front-end','연산자',3407),(84,49,0,'섹션 3. front-end','조건문',3408),(84,49,0,'섹션 3. front-end','반복문',3409),(84,49,0,'섹션 3. front-end','선택자',3410),(84,49,0,'섹션 3. front-end','click_event',3411),(84,49,0,'섹션 3. front-end','add, remove, toggle',3412),(84,49,0,'섹션 3. front-end','scroll_event',3413),(84,49,0,'섹션 3. front-end','resize_event',3414),(84,49,0,'섹션 3. front-end','event delegation',3415),(84,49,0,'섹션 3. front-end','ajax란?',3416),(84,49,0,'섹션 3. front-end','ajax - 댓글달기',3417),(84,49,0,'섹션 3. front-end','ajax - 댓글삭제',3418),(84,49,0,'섹션 3. front-end','ajax - 무한스크롤링',3419),(84,49,0,'섹션 3. front-end','file-reader',3420),(84,49,0,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','소스코드 다운로드',3421),(84,49,0,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Flex 시작하기',3422),(84,49,0,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Flex 핵심정리 #1 - 배치의 흐름',3423),(84,49,0,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Flex 핵심정리 #2 - 간단한 예제',3424),(84,49,0,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Flex 핵심정리 #3 - 전체 아이템 정렬',3425),(84,49,0,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Flex 핵심정리 #4 - 유연한 박스',3426),(84,49,0,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Flex 핵심정리 #5 - Flex 속성 활용',3427),(84,49,0,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Flex 핵심정리 #6 - 반응형 컬럼',3428),(84,49,0,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Flex 핵심정리 #7 - 유용한 기법들',3429),(84,49,0,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Flex 핵심정리 #8 - 개별 아이템 속성',3430),(84,49,0,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Grid 시작하기',3431),(84,49,0,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Grid 핵심정리 #1 - 용어 정리',3432),(84,49,0,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Grid 핵심정리 #2 - 그리드의 기본 형태',3433),(84,49,0,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Grid 핵심정리 #3 - 자동으로 채우기',3434),(84,49,0,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Grid 핵심정리 #4 - 셀 간격 만들기',3435),(84,49,0,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Grid 핵심정리 #5 - 그리드 자동 정의',3436),(84,49,0,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Grid 핵심정리 #6 - 각 셀의 영역 지정',3437),(84,49,0,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Grid 핵심정리 #7 - 영역 이름 사용하기',3438),(84,49,0,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Grid 핵심정리 #8 - 자동 배치 알고리즘',3439),(84,49,0,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Grid 핵심정리 #9 - 정렬하기',3440),(84,49,0,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Grid 핵심정리 #10 - 순서 정하기',3441),(84,49,0,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Facebook 레이아웃 Grid로 만들기 #1',3442),(84,49,0,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Facebook 레이아웃 Grid로 만들기 #2',3443),(84,49,0,'섹션 4. front-end 보너스 강의 - CSS Flex & Grid','Facebook 레이아웃 Grid로 만들기 #3',3444),(84,49,0,'섹션 5. back-end','settings',3445),(84,49,0,'섹션 5. back-end','accounts - base',3446),(84,49,0,'섹션 5. back-end','accounts-model',3447),(84,49,0,'섹션 5. back-end','accounts-admin',3448),(84,49,0,'섹션 5. back-end','static',3449),(84,49,0,'섹션 5. back-end','accounts',3450),(84,49,0,'섹션 5. back-end','accounts-view',3451),(84,49,0,'섹션 5. back-end','accounts-form',3452),(84,49,0,'섹션 5. back-end','accounts-templates',3453),(84,49,0,'섹션 5. back-end','오류해결방법과 도움요청하기 -:)',3454),(84,49,0,'섹션 5. back-end','post',3455),(84,49,0,'섹션 5. back-end','post header',3456),(84,49,0,'섹션 5. back-end','post header 2',3457),(84,49,0,'섹션 5. back-end','post models',3458),(84,49,0,'섹션 5. back-end','post admin',3459),(84,49,0,'섹션 5. back-end','post views',3460),(84,49,0,'섹션 5. back-end','post templates',3461),(84,49,0,'섹션 5. back-end','like bookmark models',3462),(84,49,0,'섹션 5. back-end','like bookmark admin',3463),(84,49,0,'섹션 5. back-end','like bookmark models',3464),(84,49,0,'섹션 5. back-end','like bookmark urls views',3465),(84,49,0,'섹션 5. back-end','like ajax',3466),(84,49,0,'섹션 5. back-end','like 버튼 로그인 여부 확인해서 active 상태로 변경하기',3467),(84,49,0,'섹션 5. back-end','bookmark ajax',3468),(84,49,0,'섹션 5. back-end','bookmark list',3469),(84,49,0,'섹션 5. back-end','친구기능동작설명',3470),(84,49,0,'섹션 5. back-end','friends models',3471),(84,49,0,'섹션 5. back-end','friends admin',3472),(84,49,0,'섹션 5. back-end','friends url view',3473),(84,49,0,'섹션 5. back-end','친구상태표시',3474),(84,49,0,'섹션 5. back-end','friends ajax 친구요청 보내기',3475),(84,49,0,'섹션 5. back-end','friends 친구수락 친구리스트 출력',3476),(84,49,0,'섹션 5. back-end','comment models',3477),(84,49,0,'섹션 5. back-end','comment admin',3478),(84,49,0,'섹션 5. back-end','comment url view',3479),(84,49,0,'섹션 5. back-end','comment form',3480),(84,49,0,'섹션 5. back-end','comment list',3481),(84,49,0,'섹션 5. back-end','comment ajax new',3482),(84,49,0,'섹션 5. back-end','comment delete',3483),(84,49,0,'섹션 5. back-end','newpost models',3484),(84,49,0,'섹션 5. back-end','newpost admin',3485),(84,49,0,'섹션 5. back-end','newpost url views',3486),(84,49,0,'섹션 5. back-end','newpost forms',3487),(84,49,0,'섹션 5. back-end','newpost ajax',3488),(84,49,0,'섹션 5. back-end','newpost tag',3489),(84,49,0,'섹션 5. back-end','newpost 사용자정의필터',3490),(84,49,0,'섹션 5. back-end','edit delete post views',3491),(84,49,0,'섹션 5. back-end','edit delete post template',3492),(84,49,0,'섹션 5. back-end','무한스크롤',3493),(84,49,0,'섹션 5. back-end','무한스크롤 ajax',3494),(84,49,0,'섹션 5. back-end','chat 세팅',3495),(84,49,0,'섹션 5. back-end','chat models views admin',3496),(84,49,0,'섹션 5. back-end','chat urls views',3497),(84,49,0,'섹션 5. back-end','chat chat_list',3498),(84,49,0,'섹션 5. back-end','chat room',3499),(84,49,0,'섹션 5. back-end','chat routing',3500),(84,49,0,'섹션 5. back-end','chat messenger',3501),(84,49,0,'섹션 5. back-end','chat consumer',3502),(84,49,0,'섹션 6. 페이스북 User 데이터 분석','Django에서 Jupyter Notebook 사용해보기',3503),(84,49,0,'섹션 6. 페이스북 User 데이터 분석','ChartJS 살펴보기',3504),(84,49,0,'섹션 6. 페이스북 User 데이터 분석','데이터분석 App page 만들기',3505),(84,49,0,'섹션 6. 페이스북 User 데이터 분석','데이터 DataFrame으로 만들고 확인하기',3506),(84,49,0,'섹션 6. 페이스북 User 데이터 분석','데이터 분석 및 시각화',3507),(84,49,0,'섹션 6. 페이스북 User 데이터 분석','데이터 분석 결과 페이지 만들기',3508),(84,49,0,'섹션 6. 페이스북 User 데이터 분석','최종소스코드',3509),(84,49,0,'섹션 7. 기초 :: 데이터 분석','실습환경구축',3510),(84,49,0,'섹션 7. 기초 :: 데이터 분석','강의자료 다운로드',3511),(84,49,0,'섹션 7. 기초 :: 데이터 분석','1회차 - numpy 소개',3512),(84,49,0,'섹션 7. 기초 :: 데이터 분석','1회차 - numpy를 사용하는 이유와 간단한 행렬 연산',3513),(84,49,0,'섹션 7. 기초 :: 데이터 분석','1회차 - numpy의 자료형과 형변환',3514),(84,49,0,'섹션 7. 기초 :: 데이터 분석','1회차 - numpy의 차원',3515),(84,49,0,'섹션 7. 기초 :: 데이터 분석','1회차 - numpy에 arange와 reshape 값의 호출',3516),(84,49,0,'섹션 7. 기초 :: 데이터 분석','1회차 - slicing',3517),(84,49,0,'섹션 7. 기초 :: 데이터 분석','1회차 - 배열의 연결과 분할',3518),(84,49,0,'섹션 7. 기초 :: 데이터 분석','1회차 - 다양한 matrix 만들기',3519),(84,49,0,'섹션 7. 기초 :: 데이터 분석','1회차 - 최대값과 최소값',3520),(84,49,0,'섹션 7. 기초 :: 데이터 분석','1회차 - 다양한 집계함수',3521),(84,49,0,'섹션 7. 기초 :: 데이터 분석','1회차 - Boolean Indexing',3522),(84,49,0,'섹션 7. 기초 :: 데이터 분석','1회차 - Broadcasting',3523),(84,49,0,'섹션 7. 기초 :: 데이터 분석','1회차 - random',3524),(84,49,0,'섹션 7. 기초 :: 데이터 분석','2회차 - Series',3525),(84,49,0,'섹션 7. 기초 :: 데이터 분석','2회차 - Series의 key, value, index',3526),(84,49,0,'섹션 7. 기초 :: 데이터 분석','2회차 - 결측값 처리하기',3527),(84,49,0,'섹션 7. 기초 :: 데이터 분석','2회차 - Series의 MultiIndex',3528),(84,49,0,'섹션 7. 기초 :: 데이터 분석','2회차 - 연산과 집계함수',3529),(84,49,0,'섹션 7. 기초 :: 데이터 분석','2회차 - Series의 연결',3530),(84,49,0,'섹션 7. 기초 :: 데이터 분석','2회차 - DataFrame',3531),(84,49,0,'섹션 7. 기초 :: 데이터 분석','2회차 - DataFrame의 데이터조작',3532),(84,49,0,'섹션 7. 기초 :: 데이터 분석','2회차 - DataFrame의 MultiIndex',3533),(84,49,0,'섹션 7. 기초 :: 데이터 분석','3회차 - pandas로 데이터 다루기',3534),(84,49,0,'섹션 7. 기초 :: 데이터 분석','4회차 - EDA 그래프 분석과 이미지 분석의 개요',3535),(84,49,0,'섹션 7. 기초 :: 데이터 분석','4회차 - matplotlib 기본 사용법(line 종류, 색)',3536),(84,49,0,'섹션 7. 기초 :: 데이터 분석','4회차 - matplotlib 경계표현',3537),(84,49,0,'섹션 7. 기초 :: 데이터 분석','4회차 - matplotlib legend',3538),(84,49,0,'섹션 7. 기초 :: 데이터 분석','4회차 - scatter와 hist',3539),(84,49,0,'섹션 7. 기초 :: 데이터 분석','4회차 - basic attribute와 maker',3540),(84,49,0,'섹션 7. 기초 :: 데이터 분석','4회차 - Bar Chart와 Pie Chart',3541),(84,49,0,'섹션 7. 기초 :: 데이터 분석','4회차 - plot의 분할과 텍스트 삽입',3542),(84,49,0,'섹션 7. 기초 :: 데이터 분석','4회차 - matplotlib의 기타 그래프 소개',3543),(84,49,0,'섹션 7. 기초 :: 데이터 분석','5회차 - seaborn',3544),(84,49,0,'섹션 7. 기초 :: 데이터 분석','5회차 - plotly',3545),(84,49,0,'섹션 7. 기초 :: 데이터 분석','보너스챕터 :: 크롤링(request, beautifulsoup4) - 1',3546),(84,49,0,'섹션 7. 기초 :: 데이터 분석','보너스챕터 :: 크롤링(request, beautifulsoup4) - 2',3547),(84,49,0,'섹션 7. 기초 :: 데이터 분석','6회차 - 코로나 Data 분석(성별, 나이)',3548),(84,49,0,'섹션 7. 기초 :: 데이터 분석','6회차 - 코로나 Data 분석(지역)',3549),(84,49,0,'섹션 7. 기초 :: 데이터 분석','6회차 - 코로나 Data 분석(한국 확진자와 사망자 분석)',3550),(84,49,0,'섹션 7. 기초 :: 데이터 분석','6회차 - 코로나 Data 분석(세계 데이터 분석)',3551),(84,49,0,'섹션 7. 기초 :: 데이터 분석','7회차 - 통계이론',3552),(84,49,0,'섹션 7. 기초 :: 데이터 분석','7회차 - 확률이론',3553),(84,49,0,'섹션 7. 기초 :: 데이터 분석','7회차 - 미분개념',3554),(84,49,0,'섹션 7. 기초 :: 데이터 분석','7회차 - 선형회귀',3555),(84,49,0,'섹션 7. 기초 :: 데이터 분석','7회차 - 행렬',3556),(84,49,0,'섹션 7. 기초 :: 데이터 분석','제주 여행, 언제 가야 하나요?',3557),(84,49,0,'섹션 7. 기초 :: 데이터 분석','제주에서 가장 핫한 여행지는 어디인가요',3558),(84,49,0,'섹션 7. 기초 :: 데이터 분석','제주도 인구구조를 그래프로 만들어보기',3559),(84,49,0,'섹션 7. 기초 :: 데이터 분석','3다 제주도, 진짜 여자가 많나요',3560),(84,49,0,'섹션 7. 기초 :: 데이터 분석','제주에 나만에 가게를 차리고 싶어요 1',3561),(84,49,0,'섹션 7. 기초 :: 데이터 분석','제주에 나만에 가게를 차리고 싶어요 2',3562),(84,49,0,'섹션 7. 기초 :: 데이터 분석','제주에 나만에 가게를 차리고 싶어요 3',3563),(84,49,0,'섹션 8. 기초 :: 우분투','리눅스(우분투)1_리눅스에 대하여',3564),(84,49,0,'섹션 8. 기초 :: 우분투','리눅스(우분트)2_기본명령어 폴더 및 이동파일 생성과 삭제',3565),(84,49,0,'섹션 8. 기초 :: 우분투','리눅스(우분투)3_기본명령어 파일 읽기, 복사, 이동',3566),(84,49,0,'섹션 9. 기초 :: 기본 에디터 사용법','jupyter notebook',3567),(84,49,0,'섹션 9. 기초 :: 기본 에디터 사용법','atom (영상 강의가 아닙니다)',3568),(84,49,0,'섹션 9. 기초 :: 기본 에디터 사용법','emmet',3569),(84,49,0,'섹션 9. 기초 :: 기본 에디터 사용법','Visual Studio Code_1_VSCode와 Extension설치하기',3570),(84,49,0,'섹션 9. 기초 :: 기본 에디터 사용법','Visual Studio Code_2_VSCode와 Window Ubuntu 연결하기',3571),(84,49,0,'섹션 9. 기초 :: 기본 에디터 사용법','Visual Studio Code_3_github 연동하기',3572),(84,49,0,'섹션 9. 기초 :: 기본 에디터 사용법','Visual Studio Online Code',3573),(84,49,0,'섹션 10. 기초 :: Python','세팅, 변수와 상수',3574),(84,49,0,'섹션 10. 기초 :: Python','format',3575),(84,49,0,'섹션 10. 기초 :: Python','변수의 타입',3576),(84,49,0,'섹션 10. 기초 :: Python','연산',3577),(84,49,0,'섹션 10. 기초 :: Python','조건문',3578),(84,49,0,'섹션 10. 기초 :: Python','반복문',3579),(84,49,0,'섹션 10. 기초 :: Python','함수',3580),(84,49,0,'섹션 10. 기초 :: Python','자료구조_리스트',3581),(84,49,0,'섹션 10. 기초 :: Python','자료구조_튜플',3582),(84,49,0,'섹션 10. 기초 :: Python','자료구조_셋',3583),(84,49,0,'섹션 10. 기초 :: Python','자료구조_딕셔너리',3584),(84,49,0,'섹션 10. 기초 :: Python','형변환',3585),(84,49,0,'섹션 10. 기초 :: Python','class_1 클래스 기본 기념',3586),(84,49,0,'섹션 10. 기초 :: Python','class_2 클래스 변수와 인스턴스 변수',3587),(84,49,0,'섹션 10. 기초 :: Python','class_3 매직 메서드(Magic Method)와 연산자 오버로딩',3588),(84,49,0,'섹션 10. 기초 :: Python','class_4 클래스 상속과 상속 우선순위',3589),(84,49,0,'섹션 10. 기초 :: Python','내장함수(Built-in Functions)_1_형변환',3590),(84,49,0,'섹션 10. 기초 :: Python','내장함수(Built-in Functions)_2_진법과 정렬',3591),(84,49,0,'섹션 10. 기초 :: Python','내장함수(Built-in Functions)_3',3592),(84,49,0,'섹션 10. 기초 :: Python','내장함수(Built-in Functions)_4_enumerate',3593),(84,49,0,'섹션 10. 기초 :: Python','파일 입출력',3594),(84,49,0,'섹션 10. 기초 :: Python','모듈',3595),(84,49,0,'섹션 11. 기초 :: Django','Django 소개',3596),(84,49,0,'섹션 11. 기초 :: Django','Django 세팅',3597),(84,49,0,'섹션 11. 기초 :: Django','url',3598),(84,49,0,'섹션 11. 기초 :: Django','이미지 넣기',3599),(84,49,0,'섹션 11. 기초 :: Django','모델',3600),(84,49,0,'섹션 11. 기초 :: Django','카페 리스트 띄우기 1',3601),(84,49,0,'섹션 11. 기초 :: Django','카페 리스트 띄우기 2',3602),(84,49,0,'섹션 11. 기초 :: Django','이미지 업로드 구현',3603),(84,49,0,'섹션 11. 기초 :: Django','댓글 및 태그 기능 구현',3604),(84,49,0,'섹션 11. 기초 :: Django','템플릿 태그',3605),(84,49,0,'섹션 11. 기초 :: Django','템플릿 변수',3606),(84,49,0,'섹션 11. 기초 :: Django','템플릿 필터',3607),(84,49,0,'섹션 11. 기초 :: Django','템플릿 상속과 템플릿 입히기',3608),(84,49,0,'섹션 11. 기초 :: Django','메인 페이지 작성',3609),(84,49,0,'섹션 11. 기초 :: Django','배포',3610),(84,49,0,'섹션 12. 30분 요약 시리즈(HTML, CSS, JS, Python)','30분 요약시리즈 - Python 1부',3611),(84,49,0,'섹션 12. 30분 요약 시리즈(HTML, CSS, JS, Python)','30분 요약시리즈 - Python 2부',3612),(84,49,0,'섹션 12. 30분 요약 시리즈(HTML, CSS, JS, Python)','30분 요약시리즈 - HTML',3613),(84,49,0,'섹션 12. 30분 요약 시리즈(HTML, CSS, JS, Python)','30분 요약시리즈 - CSS',3614),(84,49,0,'섹션 12. 30분 요약 시리즈(HTML, CSS, JS, Python)','30분 요약시리즈 - JS 1부',3615),(84,49,0,'섹션 12. 30분 요약 시리즈(HTML, CSS, JS, Python)','30분 요약시리즈 - JS 2부',3616),(84,49,0,'섹션 13. 배포','NCP 서버에 Django 배포, URL 연결',3617),(84,50,0,'섹션 0. 강좌 소개','소개하기',3618),(84,50,0,'섹션 1. 뷰 십계명','시작하기',3619),(84,50,0,'섹션 1. 뷰 십계명','아키텍쳐',3620),(84,50,0,'섹션 1. 뷰 십계명','라우팅',3621),(84,50,0,'섹션 1. 뷰 십계명','라우팅 파라미터',3622),(84,50,0,'섹션 1. 뷰 십계명','클래스',3623),(84,50,0,'섹션 1. 뷰 십계명','메쏘드',3624),(84,50,0,'섹션 1. 뷰 십계명','서비스',3625),(84,50,0,'섹션 1. 뷰 십계명','데이터 바인딩',3626),(84,50,0,'섹션 1. 뷰 십계명','필터',3627),(84,50,0,'섹션 1. 뷰 십계명','스타일',3628),(84,50,0,'섹션 2. 다음 단계','강좌정리',3629),(87,51,0,'섹션 0. Web Service & Web Application','Web Service와 Web APplication의 개요',3630),(87,51,0,'섹션 0. Web Service & Web Application','Web Service 개발 방법 SOAP과 REST의 이해',3631),(87,51,297,'섹션 1. Spring Boot로 개발하는 RESTful Service','Spring Boot 개요',3632),(87,51,298,'섹션 1. Spring Boot로 개발하는 RESTful Service','REST API 설계',3633),(87,51,0,'섹션 1. Spring Boot로 개발하는 RESTful Service','Spring Boot Project 생성',3634),(87,51,0,'섹션 1. Spring Boot로 개발하는 RESTful Service','Spring Boot Project 구조 확인과 실행 방법',3635),(87,51,0,'섹션 1. Spring Boot로 개발하는 RESTful Service','HelloWorld Controller 추가',3636),(87,51,0,'섹션 1. Spring Boot로 개발하는 RESTful Service','HelloWorld Bean 추가',3637),(87,51,0,'섹션 1. Spring Boot로 개발하는 RESTful Service','DispatcherServlet과 프로젝트 동작의 이해',3638),(87,51,0,'섹션 1. Spring Boot로 개발하는 RESTful Service','Path Variable 사용',3639),(87,51,0,'섹션 2. User Service API 구현','User 도메인 클래스 생성',3640),(87,51,0,'섹션 2. User Service API 구현','사용자 목록 조회를 위한 API 구현 - GET HTTP Method',3641),(87,51,0,'섹션 2. User Service API 구현','사용자 등록을 위한 API 구현 - POST HTTP Method',3642),(87,51,0,'섹션 2. User Service API 구현','HTTP Status Code 제어',3643),(87,51,0,'섹션 2. User Service API 구현','HTTP Status Code 제어를 위한 Exception Handling',3644),(87,51,0,'섹션 2. User Service API 구현','Spring의 AOP를 이용한 Exception Handling',3645),(87,51,0,'섹션 2. User Service API 구현','사용자 삭제를 위한 API 구현 - DELETE HTTP Method',3646),(87,51,0,'섹션 3. RESTful Service 기능 확장','Section 3 수업 소개',3647),(87,51,0,'섹션 3. RESTful Service 기능 확장','유효성 체크를 위한 Validation API 사용',3648),(87,51,0,'섹션 3. RESTful Service 기능 확장','다국어 처리를 위한 Internationalization 구현 방법',3649),(87,51,0,'섹션 3. RESTful Service 기능 확장','Response 데이터 형식 변환 - XML format',3650),(87,51,0,'섹션 3. RESTful Service 기능 확장','Response 데이터 제어를 위한 Filtering',3651),(87,51,0,'섹션 3. RESTful Service 기능 확장','프로그래밍으로 제어하는 Filtering 방법 - 개별 사용자 조회',3652),(87,51,0,'섹션 3. RESTful Service 기능 확장','프로그래밍으로 제어하는 Filtering 방법 - 전체 사용자 조회',3653),(87,51,0,'섹션 3. RESTful Service 기능 확장','URI를 이용한 REST API Version 관리',3654),(87,51,0,'섹션 3. RESTful Service 기능 확장','Request Parameter와 Header를 이용한 API Version 관리',3655),(87,51,0,'섹션 4. Spring Boot API 사용','Section 4 수업 소개',3656),(87,51,0,'섹션 4. Spring Boot API 사용','Level3 단계의 REST API 구현을 위한 HATEOAS 적용',3657),(87,51,0,'섹션 4. Spring Boot API 사용','REST API Documentation을 위한 Swagger 사용',3658),(87,51,0,'섹션 4. Spring Boot API 사용','Swagger Documentation 구현 방법',3659),(87,51,0,'섹션 4. Spring Boot API 사용','REST API Monitoring을 위한 Actuator 설정',3660),(87,51,0,'섹션 4. Spring Boot API 사용','HAL Browser를 이용한 HATEOAS 기능 구현',3661),(87,51,0,'섹션 4. Spring Boot API 사용','Spring Security를 이용한 인증 처리',3662),(87,51,0,'섹션 4. Spring Boot API 사용','Configuration 클래스를 이용한 사용자 인증 처리',3663),(87,51,0,'섹션 5. Java Persistence API 사용','Section 5 수업 소개',3664),(87,51,0,'섹션 5. Java Persistence API 사용','Java Persistence API의 개요',3665),(87,51,0,'섹션 5. Java Persistence API 사용','JPA를 사용을 위한 Dependency 추가와 설정',3666),(87,51,0,'섹션 5. Java Persistence API 사용','Spring Data JPA를 이용한 Entity 설정과 초기 데이터 생성',3667),(87,51,0,'섹션 5. Java Persistence API 사용','JPA Service 구현을 위한 Controller, Repository 생성',3668),(87,51,0,'섹션 5. Java Persistence API 사용','JPA를 이용한 사용자 목록 조회 - GET HTTP Method',3669),(87,51,0,'섹션 5. Java Persistence API 사용','JPA를 이용한 사용자 추가와 삭제 - POST/DELETE HTTP Method',3670),(87,51,0,'섹션 5. Java Persistence API 사용','게시물 관리를 위한 Post Entity 추가와 초기 데이터 생성',3671),(87,51,0,'섹션 5. Java Persistence API 사용','게시물 조회를 위한 Post Entity와 User Entity와의 관계 설정',3672),(87,51,0,'섹션 5. Java Persistence API 사용','JPA를 이용한 새 게시물 추가 - POST HTTP Method',3673),(87,51,0,'섹션 6. RESTful API 설계 가이드','Section 6 수업 소개',3674),(87,51,0,'섹션 6. RESTful API 설계 가이드','Richardson Maturity Model 소개',3675),(87,51,0,'섹션 6. RESTful API 설계 가이드','REST API 설계 시 고려해야 할 사항',3676),(87,51,0,'섹션 6. RESTful API 설계 가이드','마치며',3677),(95,53,0,'섹션 0. 웹 개발 시작해봐요','웹 맛보기',3713),(95,53,0,'섹션 0. 웹 개발 시작해봐요','강의 자료 내려받기 (PPT)',3714),(95,53,0,'섹션 1. 기초 HTML','HTML 개념 알기 (1-1)',3715),(95,53,0,'섹션 1. 기초 HTML','서식 관련 태그 알아보기 (1-2)',3716),(95,53,0,'섹션 1. 기초 HTML','리스트 태그 알아보기 (1-3)',3717),(95,53,0,'섹션 1. 기초 HTML','실습: 자기소개 페이지 만들기 (1-4)',3718),(95,53,0,'섹션 1. 기초 HTML','블록/인라인 요소 알아보기 (1-5)',3719),(95,53,0,'섹션 1. 기초 HTML','하이퍼미디어 태그 알아보기 (1-6)',3720),(95,53,0,'섹션 1. 기초 HTML','표 관련 태그 알아보기 (1-7)',3721),(95,53,0,'섹션 1. 기초 HTML','실습: 여행 계획 페이지 만들기 (1-8)',3722),(95,53,0,'섹션 1. 기초 HTML','폼 태그 알아보기 (1-9)',3723),(95,53,0,'섹션 1. 기초 HTML','폼 관련 기본 태그 알아보기 (1-10)',3724),(95,53,0,'섹션 1. 기초 HTML','폼 관련 응용 태그 알아보기 (1-11)',3725),(95,53,0,'섹션 1. 기초 HTML','메타 태그 알아보기 (1-12)',3726),(95,53,0,'섹션 1. 기초 HTML','iframe 태그 알아보기 (1-13)',3727),(95,53,0,'섹션 1. 기초 HTML','실습: 회원가입 폼 만들기 (1-14)',3728),(95,53,0,'섹션 2. 멋진 CSS','CSS 개념 알기 (2-1)',3729),(95,53,0,'섹션 2. 멋진 CSS','CSS 선언하기 (2-2)',3730),(95,53,0,'섹션 2. 멋진 CSS','폰트 스타일 속성과 색상 알아보기 (2-3)',3731),(95,53,0,'섹션 2. 멋진 CSS','폰트와 크기의 단위 알아보기 (2-4)',3732),(95,53,0,'섹션 2. 멋진 CSS','텍스트 스타일 알아보기 (2-5)',3733),(95,53,0,'섹션 2. 멋진 CSS','크기를 적용하기 (2-6)',3734),(95,53,0,'섹션 2. 멋진 CSS','실습: 여행 계획 페이지에 스타일 적용해보기 (2-7)',3735),(95,53,0,'섹션 2. 멋진 CSS','CSS 선택자 알아보기 (2-8)',3736),(95,53,0,'섹션 2. 멋진 CSS','조금 복잡한 셀렉터 알아보기 (2-9)',3737),(95,53,0,'섹션 2. 멋진 CSS','블록 태그 요소와 여백 적용하기 (2-10)',3738),(95,53,0,'섹션 2. 멋진 CSS','위치를 적용하기 (2-11)',3739),(95,53,0,'섹션 2. 멋진 CSS','테두리 적용하기 (2-12)',3740),(95,53,0,'섹션 2. 멋진 CSS','테두리 둥글게 하기 (2-13)',3741),(95,53,0,'섹션 2. 멋진 CSS','실습: 갤러리 페이지 만들기 (2-14)',3742),(95,53,0,'섹션 2. 멋진 CSS','실습: 뉴스 기사 페이지 만들기 (2-15)',3743),(95,53,0,'섹션 3. 진짜배기 JAVASCRIPT','Javascript 개념 알기 (3-1)',3744),(95,53,0,'섹션 3. 진짜배기 JAVASCRIPT','Type 이해하기 (3-2)',3745),(95,53,0,'섹션 3. 진짜배기 JAVASCRIPT','변수, 산술연산 이해하기 (3-3)',3746),(95,53,0,'섹션 3. 진짜배기 JAVASCRIPT','실습: 사칙연산과 변수 다루기 (3-4)',3747),(95,53,0,'섹션 3. 진짜배기 JAVASCRIPT','값을 비교하기 (3-5)',3748),(95,53,0,'섹션 3. 진짜배기 JAVASCRIPT','조건문 사용하기 (3-6)',3749),(95,53,0,'섹션 3. 진짜배기 JAVASCRIPT','실습: 퀴즈게임 만들기 (3-7)',3750),(95,53,0,'섹션 3. 진짜배기 JAVASCRIPT','반복문 사용하기 (3-8)',3751),(95,53,0,'섹션 3. 진짜배기 JAVASCRIPT','실습: 피보나치 수열 출력하기 (3-9)',3752),(95,53,0,'섹션 3. 진짜배기 JAVASCRIPT','배열 사용하기 (3-10)',3753),(95,53,0,'섹션 3. 진짜배기 JAVASCRIPT','객체 사용하기 (3-11)',3754),(95,53,0,'섹션 3. 진짜배기 JAVASCRIPT','실습: 설문조사 만들기 (3-12)',3755),(95,53,0,'섹션 3. 진짜배기 JAVASCRIPT','함수 선언하기 (3-13)',3756),(95,53,0,'섹션 3. 진짜배기 JAVASCRIPT','스코프 이해하기 (3-14)',3757),(95,53,0,'섹션 3. 진짜배기 JAVASCRIPT','HTML 코드에 Javascript 가져오기 (3-15)',3758),(95,53,0,'섹션 3. 진짜배기 JAVASCRIPT','선택자로 DOM 가져오기 (3-16)',3759),(95,53,0,'섹션 3. 진짜배기 JAVASCRIPT','DOM을 동적으로 생성하기 (3-17)',3760),(95,53,0,'섹션 3. 진짜배기 JAVASCRIPT','DOM의 내용을 바꾸기 (3-18)',3761),(95,53,0,'섹션 3. 진짜배기 JAVASCRIPT','이벤트 처리하기 (3-19)',3762),(95,53,0,'섹션 3. 진짜배기 JAVASCRIPT','실습: 회원가입 폼 검증하기 - 1 (3-20)',3763),(95,53,0,'섹션 3. 진짜배기 JAVASCRIPT','실습: 회원가입 폼 검증하기 - 2 (3-21)',3764),(95,53,0,'섹션 3. 진짜배기 JAVASCRIPT','심화 개념: 클로져 이해하기 (3-22)',3765),(95,53,0,'섹션 3. 진짜배기 JAVASCRIPT','심화 개념: Ajax 개념 알기 (3-23)',3766),(95,53,0,'섹션 4. 실습으로 검증하기','인스타그램 포스팅 카드 만들기 - UI (4-1)',3767),(95,53,0,'섹션 4. 실습으로 검증하기','인스타그램 포스팅 카드 만들기 - 자바스크립트, 캐러셀 (4-2)',3768),(95,55,0,'섹션 0. 강의 소개 및 초기 설정','강의 소개',3919),(95,55,0,'섹션 0. 강의 소개 및 초기 설정','Boiler Plate을 가져오고 Mongo DB 연결하기',3920),(95,55,0,'섹션 1. 업로드 페이지 만들기','업로드 페이지 만들기 시작',3921),(95,55,0,'섹션 1. 업로드 페이지 만들기','onChange Event 처리하기',3922),(95,55,0,'섹션 1. 업로드 페이지 만들기','Select Option 처리하기',3923),(95,55,0,'섹션 1. 업로드 페이지 만들기','Drop-Zone 적용하기',3924),(95,55,0,'섹션 1. 업로드 페이지 만들기','이미지 파일을 서버로 보내기',3925),(95,55,0,'섹션 1. 업로드 페이지 만들기','multer를 이용하여 이미지 저장',3926),(95,55,0,'섹션 1. 업로드 페이지 만들기','이미지 지우기',3927),(95,55,0,'섹션 1. 업로드 페이지 만들기','이미지 State을 부모 컴포넌트로 업데이트하기',3928),(95,55,0,'섹션 1. 업로드 페이지 만들기','모든 상품 정보를 데이터베이스에 저장하기',3929),(95,55,0,'섹션 2. 랜딩 페이지 만들기','데이터베이스에 들어 있는 모든 상품을 가져오기',3930),(95,55,0,'섹션 2. 랜딩 페이지 만들기','카드 만들기',3931),(95,55,0,'섹션 2. 랜딩 페이지 만들기','이미지 슬라이더 만들기',3932),(95,55,0,'섹션 2. 랜딩 페이지 만들기','더보기 버튼 만들기 #1',3933),(95,55,0,'섹션 2. 랜딩 페이지 만들기','더보기 버튼 만들기 #2',3934),(95,55,0,'섹션 2. 랜딩 페이지 만들기','체크 박스 필터 만들기 #1',3935),(95,55,0,'섹션 2. 랜딩 페이지 만들기','체크 박스 필터 만들기 #2',3936),(95,55,0,'섹션 2. 랜딩 페이지 만들기','체크 박스 필터 만들기 #3',3937),(95,55,0,'섹션 2. 랜딩 페이지 만들기','라디오 박스 필터 만들기 #1',3938),(95,55,0,'섹션 2. 랜딩 페이지 만들기','라디오 박스 필터 만들기 #2',3939),(95,55,0,'섹션 2. 랜딩 페이지 만들기','검색 기능 만들기 #1',3940),(95,55,0,'섹션 2. 랜딩 페이지 만들기','검색 기능 만들기 #2',3941),(95,55,0,'섹션 3. 상세 보기 페이지 만들기','상품의 상세정보를 데이터베이스에서 가져오기',3942),(95,55,0,'섹션 3. 상세 보기 페이지 만들기','Product Image 컴포넌트 만들기',3943),(95,55,0,'섹션 3. 상세 보기 페이지 만들기','Product Info 컴포넌트 만들기',3944),(95,55,0,'섹션 3. 상세 보기 페이지 만들기','Add to Cart 버튼 만들기 #1',3945),(95,55,0,'섹션 3. 상세 보기 페이지 만들기','Add to Cart 버튼 만들기 #2',3946),(95,55,0,'섹션 4. 카트 페이지 만들기','Add to Cart 기능 개선 및 카트 Tab 만들기',3947),(95,55,0,'섹션 4. 카트 페이지 만들기','카트에 담긴 상품 정보들을 데이터베이스에서 가져오기 #1',3948),(95,55,0,'섹션 4. 카트 페이지 만들기','카트에 담긴 상품 정보들을 데이터베이스에서 가져오기 #2',3949),(95,55,0,'섹션 4. 카트 페이지 만들기','데이터베이스에서 가져온 상품 정보들을 화면에서 보여주기',3950),(95,55,0,'섹션 4. 카트 페이지 만들기','카트에 담긴 상품 정보 가져오는 부분 코드 수정',3951),(95,55,0,'섹션 4. 카트 페이지 만들기','카트에 들어있는 상품들 가격 계산',3952),(95,55,0,'섹션 4. 카트 페이지 만들기','카트에 들어 있는 상품 지우기',3953),(95,55,0,'섹션 4. 카트 페이지 만들기','카트에 있는 모든 상품 지운 다음 처리할 것들',3954),(95,55,0,'섹션 4. 카트 페이지 만들기','Paypal 버튼 만들기',3955),(95,55,0,'섹션 4. 카트 페이지 만들기','Paypal로 결제하기',3956),(95,55,0,'섹션 4. 카트 페이지 만들기','Paypal로 결제 성공 후 할 일들 #1',3957),(95,55,0,'섹션 4. 카트 페이지 만들기','Paypal로 결제 성공 후 할 일들 #2',3958),(95,55,0,'섹션 4. 카트 페이지 만들기','Paypal로 결제 성공 후 할 일들 #3',3959),(95,55,0,'섹션 5. 결제 내역 페이지 만들기','결제 내역 페이지 만들기',3960),(95,55,0,'섹션 6. 강의 자료들','전체 소스 코드 주소',3961),(95,55,0,'섹션 6. 강의 자료들','Diagram HTML 파일',3962),(95,55,0,'섹션 6. 강의 자료들','Diagram XML 파일',3963);
/*!40000 ALTER TABLE `course_list` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `inflearn_total_list`
--

DROP TABLE IF EXISTS `inflearn_total_list`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `inflearn_total_list` (
  `itlid` bigint(20) NOT NULL AUTO_INCREMENT,
  `coursetype` int(11) DEFAULT NULL,
  `course` varchar(200) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `courseurl` varchar(200) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `imageurl` varchar(500) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `instructor` varchar(200) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`itlid`)
) ENGINE=InnoDB AUTO_INCREMENT=1472 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `inflearn_total_list`
--

LOCK TABLES `inflearn_total_list` WRITE;
/*!40000 ALTER TABLE `inflearn_total_list` DISABLE KEYS */;
INSERT INTO `inflearn_total_list` VALUES (282,1,'스프링 핵심 원리 - 기본편','https://www.inflearn.com/course/스프링-핵심-원리-기본편','https://cdn.inflearn.com/public/course-325969-cover/87c7e5e9-759d-451c-b6df-f5700b25a044','김영한'),(283,1,'프로그래밍 시작하기: 웹 입문 (Inflearn Original)','https://www.inflearn.com/course/웹개발-입문-인프런-오리지널','https://cdn.inflearn.com/public/courses/325307/course_cover/587aaeec-bee9-4c1e-9c90-9ae48b20f109/inflearn-original-web-ef.png','인프런'),(284,1,'딥러닝 컴퓨터 비전 완벽 가이드','https://www.inflearn.com/course/딥러닝-컴퓨터비전-완벽가이드','https://cdn.inflearn.com/public/courses/325035/course_cover/ffdb4dd4-6c86-4821-83c6-04051c5e0574/kcm-computervision-eng.png','권 철민'),(285,1,'공공데이터로 파이썬 데이터 분석 시작하기','https://www.inflearn.com/course/공공데이터로-파이썬-데이터-분석-시작하기','https://cdn.inflearn.com/public/courses/286688/course_cover/b08e32cb-597e-4af8-9f13-fd4b0562e4fb/pje-public-data-analysis-eng-2.png','박조은'),(286,1,'모두를 위한 파이썬 : 필수 문법 배우기 Feat. 오픈소스 패키지 배포 (Inflearn Original)','https://www.inflearn.com/course/프로그래밍-파이썬-중고급','https://cdn.inflearn.com/public/courses/325780/cover/ef1bae96-88f1-4c3c-9c1a-a61d75cba809','인프런'),(287,1,'[리뉴얼] React로 NodeBird SNS 만들기','https://www.inflearn.com/course/노드버드-리액트-리뉴얼','https://cdn.inflearn.com/public/course-325637-cover/d5fd6216-71d1-490e-8759-594cbbdc1973','조현영'),(288,1,'Svelte.js [Core API] 완벽 가이드','https://www.inflearn.com/course/스벨트-완벽-가이드','https://cdn.inflearn.com/public/course-325523-cover/f70444f1-ed0a-4b46-b5ec-39c250885e9a','HEROPY'),(289,1,'애플 웹사이트 인터랙션 클론!','https://www.inflearn.com/course/애플-웹사이트-인터랙션-클론','https://cdn.inflearn.com/public/course-325248-cover/9cb6375d-6ca4-4e2f-9212-6675f45d7396','1분코딩'),(290,1,'스프링과 JPA 기반 웹 애플리케이션 개발','https://www.inflearn.com/course/스프링-JPA-웹앱','https://cdn.inflearn.com/public/courses/324844/course_cover/db70e7cf-b214-4985-830f-5fd824ae7e74/bgs-spring-jpa.jpg','백기선'),(291,1,'웹 게임을 만들며 배우는 React에 TypeScript 적용하기','https://www.inflearn.com/course/react-typescript-webgame','https://cdn.inflearn.com/public/course-324834-cover/e95bdef8-7fef-4e72-9f6c-b6d44698140d','조현영'),(292,1,'[C#과 유니티로 만드는 MMORPG 게임 개발 시리즈] Part1: C# 기초 프로그래밍 입문','https://www.inflearn.com/course/유니티-MMORPG-개발-part1','https://cdn.inflearn.com/public/courses/324718/course_cover/9fa72fd8-ce56-4091-aa73-a31145acf37e/rookiss-rpg-1.png','Rookiss'),(293,1,'프론트엔드 개발환경의 이해와 실습 (webpack, babel, eslint..)','https://www.inflearn.com/course/프론트엔드-개발환경','https://cdn.inflearn.com/public/courses/324671/course_cover/638eee1a-6381-402d-a17b-3724751414f1/frontend-env-eng.png','김정환'),(294,1,'비전공자를 위한 개발자 취업 올인원 가이드 [통합편]','https://www.inflearn.com/course/개발자-취업-통합편','https://cdn.inflearn.com/public/courses/326354/cover/1d6f78c0-86a5-4585-b7f5-49d57582e964','한정수'),(295,1,'초보를 위한 쿠버네티스 안내서','https://www.inflearn.com/course/쿠버네티스-입문','https://cdn.inflearn.com/public/course-326288-cover/9bd53e0c-48e2-449d-969a-277335c0df77','subicura'),(296,1,'모든 개발자를 위한 HTTP 웹 기본 지식','https://www.inflearn.com/course/http-웹-네트워크','https://cdn.inflearn.com/public/course-326277-cover/7cd7c9ec-706d-4d72-a52b-134853963d61','김영한'),(297,1,'실전 프로젝트로 배우는 타입스크립트','https://www.inflearn.com/course/타입스크립트-실전','https://cdn.inflearn.com/public/course-326260-cover/3d0feaee-493f-4295-9635-117d24a6f41f','장기효(캡틴판교)'),(298,1,'아메리카노 한 잔으로 듣는 구글시트 기초','https://www.inflearn.com/course/구글시트-기초','https://cdn.inflearn.com/public/course-326223-cover/536c70c7-be58-4bea-b7f7-f7ab1b28d344','박범진'),(299,1,'SwiftUI - iOS14 퍼펙트 가이드','https://www.inflearn.com/course/swift-ui-ios14','https://cdn.inflearn.com/public/course-326064-cover/9b29a803-cd2b-419b-bdda-d5d9cc1209dd','iOS Developer'),(300,1,'IT 회사에서 살아남기 위한 모든 개발 지식 A to Z','https://www.inflearn.com/course/it-개발지식','https://cdn.inflearn.com/public/course-325903-cover/335d6f7d-bb22-4ea8-b1dc-131d79b721cd','그랩'),(301,1,'플렉스(Flex) 반응형 웹사이트 포트폴리오(The World\'s Best Cities)','https://www.inflearn.com/course/플렉스-반응형웹-포트폴리오','https://cdn.inflearn.com/public/course-325884-cover/52b98ccd-7b1d-4d96-a9ec-40d5b4007a74','코딩웍스(Coding Works)'),(302,1,'iOS/Android 앱 개발을 위한 실전 React Native - Basic','https://www.inflearn.com/course/리액트-네이티브-기초','https://cdn.inflearn.com/public/course-325874-cover/f38ca683-df16-488c-8114-9259c7919265','Wintho'),(303,1,'따라하며 배우는 도커와 CI환경','https://www.inflearn.com/course/따라하며-배우는-도커-ci','https://cdn.inflearn.com/public/course-325821-cover/e5a56b04-463b-410c-9b3a-d769cd192add','John Ahn'),(304,1,'리눅스 커맨드라인 툴 (Full ver.)','https://www.inflearn.com/course/리눅스-커맨드라인-툴','https://cdn.inflearn.com/public/course-325734-cover/baaf411a-a55a-4475-a4ce-1067733b5dcd','ProgCoach4U'),(305,1,'반응형 웹사이트 포트폴리오(Architecture Agency)','https://www.inflearn.com/course/반응형-웹사이트-포트폴리오-웹퍼블리싱','https://cdn.inflearn.com/public/course-325684-cover/beb08379-7695-4cec-946c-c4f291d56b69','코딩웍스(Coding Works)'),(306,1,'[C#과 유니티로 만드는 MMORPG 게임 개발 시리즈] Part7: MMO 컨텐츠 구현 (Unity + C# 서버 연동 기초)','https://www.inflearn.com/course/유니티-MMORPG-개발-part7','https://cdn.inflearn.com/public/course-325662-cover/c606d007-0cfc-4981-9287-eda5a389495c','Rookiss'),(307,1,'모던 안드로이드 - 코틀린과 Jetpack 활용','https://www.inflearn.com/course/모던-안드로이드-코틀린-제트팩','https://cdn.inflearn.com/public/course-325652-cover/ac6b554c-bd7c-4b20-94fb-6e0e82b482ee','오준석'),(308,1,'코로나맵 개발자와 함께하는 지도서비스 만들기 1','https://www.inflearn.com/course/코로나맵-지도서비스','https://cdn.inflearn.com/public/courses/325634/cover/ac3a9b93-1df2-4db9-845d-6fc3023f70d1','이동훈'),(309,1,'더 자바, Java 8','https://www.inflearn.com/course/the-java-java8','https://cdn.inflearn.com/public/course-325598-cover/493b8680-7652-4ea8-8e57-a53e58b1622f','백기선'),(310,1,'퍼블리싱 핵심이론 PDF 교재 및 예제파일(HTML+CSS+FLEX+JQUERY)','https://www.inflearn.com/course/코딩웍스-퍼블리싱-교재','https://cdn.inflearn.com/public/courses/324995/course_cover/efab1490-0082-446a-b173-52108106bfc1/%EC%9D%B8%ED%94%84%EB%9F%B0-%EA%B5%90%EC%9E%AC%ED%8C%90%EB%A7%A4-%EB%8C%80%EB%AC%B8.jpg','코딩웍스(Coding Works)'),(311,1,'[C#과 유니티로 만드는 MMORPG 게임 개발 시리즈] Part4: 게임 서버','https://www.inflearn.com/course/유니티-MMORPG-개발-Part4','https://cdn.inflearn.com/public/courses/324941/course_cover/a8153884-2434-4e0d-a6af-edeb9f2d267d/rookiss-rpg-4-1.jpg','Rookiss'),(312,1,'최반장의 엑셀 피벗테이블 마스터 클래스','https://www.inflearn.com/course/최반장-엑셀-피벗테이블-데이터분석','https://cdn.inflearn.com/public/course-324917-cover/02d13630-d5d3-42b8-a852-b1afee09d48b','최반장'),(313,1,'비전공자를 위한 개발자 취업 개론','https://www.inflearn.com/course/개발자-취업-입문-개론','https://cdn.inflearn.com/public/courses/324828/course_cover/3cfe8a76-00c9-4046-95a7-0a1629922314/howto-dev-eng.png','김병욱'),(314,1,'Django, 데이터 분석, 프론트엔드까지 내 손으로 만드는 페이스북 클론 강의','https://www.inflearn.com/course/페이스북-풀스택-클론-웹개발','https://cdn.inflearn.com/public/course-324818-cover/bb4320c6-c054-4396-b6c8-38f6ee1e4144','제주코딩베이스캠프'),(315,1,'[C#과 유니티로 만드는 MMORPG 게임 개발 시리즈] Part3: 유니티 엔진','https://www.inflearn.com/course/MMORPG-유니티','https://cdn.inflearn.com/public/courses/324817/course_cover/b4a8c062-588e-4cd8-b662-f544dfb76882/rookiss-rpg-3.jpg','Rookiss'),(316,1,'iOS Concurrency(동시성) 프로그래밍, 동기 비동기 처리 그리고 GCD/Operation - 디스패치큐와 오퍼레이션큐의 이해','https://www.inflearn.com/course/iOS-Concurrency-GCD-Operation','https://cdn.inflearn.com/public/courses/324711/course_cover/92e05087-bd8f-46aa-8bbe-37c4bfe35cf9/con.png','앨런(Allen)'),(317,1,'그로스해킹 - 데이터와 실험을 통해 성장하는 서비스를 만드는 방법','https://www.inflearn.com/course/그로스해킹-데이터-실험-성장-서비스','https://cdn.inflearn.com/public/courses/324487/course_cover/b2ceb587-47e0-4708-ae2a-35d4f6c271e9/ysh_growthhacking2.png','양승화'),(318,1,'제주 하간디 이신 데이터들 Python으로 몬딱 분석해불게','https://www.inflearn.com/course/제주코딩베이스캠프-파이썬-데이터분석','https://cdn.inflearn.com/public/course-324437-cover/de15fa3a-9089-47f0-bb5c-19ce062afd97','제주코딩베이스캠프'),(319,1,'프로그래밍 시작하기 : 파이썬 입문 (Inflearn Original)','https://www.inflearn.com/course/프로그래밍-파이썬-입문-인프런-오리지널','https://cdn.inflearn.com/public/courses/324145/course_cover/f4b28e4f-6635-4e57-95be-5f4ac7b1ea49/I_O_python_1.png','인프런'),(320,1,'실전! 스프링 부트와 JPA 활용1 - 웹 애플리케이션 개발','https://www.inflearn.com/course/스프링부트-JPA-활용-1','https://cdn.inflearn.com/public/courses/324119/course_cover/07c45106-3cfa-4dd6-93ed-a6449591831c/%E1%84%80%E1%85%B3%E1%84%85%E1%85%AE%E1%86%B8%205%20%E1%84%87%E1%85%A9%E1%86%A8%E1%84%89%E1%85%A1%204.png','김영한'),(321,1,'자바 ORM 표준 JPA 프로그래밍 - 기본편','https://www.inflearn.com/course/ORM-JPA-Basic','https://cdn.inflearn.com/public/courses/324109/course_cover/161476f8-f0b7-4b04-b293-ce648c2ea445/kyh_jsp.png','김영한'),(322,1,'남박사의 파이썬 실전 100% 활용','https://www.inflearn.com/course/파이썬-활용','https://cdn.inflearn.com/public/courses/324037/course_cover/626bed53-f79c-4fbf-b513-b18772f0ef6c/%E1%84%82%E1%85%A1%E1%86%B7%E1%84%87%E1%85%A1%E1%86%A8%E1%84%89%E1%85%A1_100.png','남박사'),(323,1,'단 두 장의 문서로 데이터 분석과 시각화 뽀개기','https://www.inflearn.com/course/판다스-pandas','https://cdn.inflearn.com/public/courses/324030/course_cover/159651c0-3994-463b-8ece-be3b4c52709c/pandas_bje.png','박조은'),(324,1,'it 취업을 위한 알고리즘 문제풀이 (with C/C++) : 코딩테스트 대비','https://www.inflearn.com/course/알고리즘','https://cdn.inflearn.com/wp-content/uploads/ktw_algorithm3.jpg','김태원'),(325,1,'함수형 프로그래밍과 JavaScript ES6+','https://www.inflearn.com/course/functional-es6','https://cdn.inflearn.com/wp-content/uploads/es6_8.jpg','유인동'),(326,1,'스프링 기반 REST API 개발','https://www.inflearn.com/course/spring_rest-api','https://cdn.inflearn.com/wp-content/uploads/API-1.jpg','백기선'),(327,1,'트렐로 개발로 배우는 Vuejs, Vuex, Vue-Router 프론트엔드 실전 기술','https://www.inflearn.com/course/vuejs','https://cdn.inflearn.com/wp-content/uploads/kjh_Vuejs-3.jpg','김정환'),(328,1,'스프링 데이터 JPA','https://www.inflearn.com/course/스프링-데이터-jpa','https://cdn.inflearn.com/wp-content/uploads/springdatajpa-1-1.jpg','백기선'),(329,1,'Vue.js 중급 강좌 - 웹앱 제작으로 배워보는 Vue.js, ES6, Vuex','https://www.inflearn.com/course/vue-pwa-vue-js-중급','https://cdn.inflearn.com/public/courses/136498/course_cover/33a35374-af5f-4085-a650-4909c03e8d5d/lv2.png','장기효(캡틴판교)'),(330,1,'3dsmax 초급부터 전문가까지 - 한방에 끝내는 3dsmax 강좌','https://www.inflearn.com/course/3dsmax-강좌-맥스','https://cdn.inflearn.com/public/courses/31327/course_cover/eeba9d77-ba03-4c5f-8d4a-a7a4a56a68d5/Thumb-Metal-slug2.jpg','목마하임(MokmaHeim)'),(331,1,'반응형 웹사이트 포트폴리오(App Official Landing Website)','https://www.inflearn.com/course/반응형웹-포트폴리오-퍼블리싱','https://cdn.inflearn.com/public/courses/326429/cover/5eaaba86-fd92-4d26-a3cc-776c614910d6','코딩웍스(Coding Works)'),(332,1,'자바스크립트 알고리즘 문제풀이(코딩테스트 대비)','https://www.inflearn.com/course/자바스크립트-알고리즘-문제풀이','https://cdn.inflearn.com/public/courses/326377/cover/06b7fdbf-e58c-4289-b17d-bffddb67e999','김태원'),(333,1,'mongoDB 기초부터 실무까지(feat. Node.js)','https://www.inflearn.com/course/몽고디비-기초-실무','https://cdn.inflearn.com/public/courses/326368/cover/03c66e23-4e7e-480a-8d01-691fa57d7e45','김시훈'),(334,1,'초보자를 위한 HTML 기초','https://www.inflearn.com/course/html-표준-기초','https://cdn.inflearn.com/public/course-326319-cover/915739f4-86b8-4161-b3ad-e570430a991b','조은'),(335,1,'더 개발자, 인터뷰 가이드','https://www.inflearn.com/course/개발자-인터뷰','https://cdn.inflearn.com/public/courses/326298/cover/b5b96d65-dc2f-4275-9397-8235685a7ed9','백기선'),(336,1,'취미로 해킹#6(SquareCTF_RR)','https://www.inflearn.com/course/취미로-해킹6','https://cdn.inflearn.com/public/course-326284-cover/7abd6487-bd5f-4511-96d2-af984e083fc2','장용하'),(337,1,'비전공자를 위한 진짜 올인원 개발 클래스','https://www.inflearn.com/course/올인원-개발클래스','https://cdn.inflearn.com/public/courses/326174/cover/b0536120-7de3-4aa8-8266-97cf3881e87d','그랩'),(338,1,'[C++과 언리얼로 만드는 MMORPG 게임 개발 시리즈] Part1: C++ 프로그래밍 입문','https://www.inflearn.com/course/언리얼-3d-mmorpg-1','https://cdn.inflearn.com/public/courses/326162/cover/fe5368b1-e25b-4f7c-a670-b775f9e429c6','Rookiss'),(339,1,'리눅스 커널 해킹. A부터 Z까지','https://www.inflearn.com/course/리눅스-커널-해킹','https://cdn.inflearn.com/public/course-326148-cover/d7fc414d-fad5-413c-8652-3ce28a747240','김현우'),(340,1,'타입스크립트 입문 - 기초부터 실전까지','https://www.inflearn.com/course/타입스크립트-입문','https://cdn.inflearn.com/public/courses/326082/cover/c6519e92-f334-46ac-8a31-6290db19b32a','장기효(캡틴판교)'),(341,1,'스프링 부트 업데이트','https://www.inflearn.com/course/스프링부트-업데이트','https://cdn.inflearn.com/public/course-326039-cover/ecb85367-3f9d-4ae8-b523-eea21aef4e58','백기선'),(342,1,'[리뉴얼] Node.js 교과서 - 기본부터 프로젝트 실습까지','https://www.inflearn.com/course/노드-교과서','https://cdn.inflearn.com/public/course-326036-cover/da9faa4e-6cf0-46d8-a3be-37305495ec62','조현영'),(343,1,'[C#과 유니티로 만드는 MMORPG 게임 개발 시리즈] Part9: MMO 컨텐츠 구현 (DB연동 + 대형 구조 + 라이브 준비)','https://www.inflearn.com/course/유니티-MMORPG-개발-part9','https://cdn.inflearn.com/public/course-325882-cover/95490bba-d48f-41ed-bbf7-6767384750c8','Rookiss'),(344,1,'초보자도 만들 수 있는 애플 스크롤 인터렉션. 1편 자바스크립트','https://www.inflearn.com/course/애플-스크롤-인터렉션-자바스크립트','https://cdn.inflearn.com/public/course-325738-cover/d1d6d080-34a2-4cab-b827-f325c998606b','깡코딩'),(345,1,'DevOps : Infrastructure as Code with 테라폼(Terraform) and AWS 초급, 입문편','https://www.inflearn.com/course/데브옵스-테라폼-aws','https://cdn.inflearn.com/public/course-325710-cover/06d1bf82-8bf9-41dd-b41c-7a9cce5e1624','송주영'),(346,1,'실전 리액트 프로그래밍','https://www.inflearn.com/course/실전-리액트-프로그래밍','https://cdn.inflearn.com/public/course-325676-cover/5d8d0b4f-c65e-449c-8948-8577dcd30514','이재승'),(347,1,'유니티(Unity)로 시작하는 게임개발: Part 3. 슈팅게임 개발','https://www.inflearn.com/course/유니티-게임개발-파트3','https://cdn.inflearn.com/public/course-325658-cover/26e4f45c-1af5-4129-9402-4c24c3e42389','UDevApp'),(348,1,'C#과 유니티, 실전 게임으로 제대로 시작하기 (저자 직강)','https://www.inflearn.com/course/c-sharp-기초-문법-유니티','https://cdn.inflearn.com/public/course-325648-cover/4adc303a-c305-4074-be0a-f8f0cac93e09','백현우'),(349,1,'몇 줄로 끝내는 인터랙티브 웹 개발 노하우 [초급편]','https://www.inflearn.com/course/자바스크립트-인터랙티브-웹','https://cdn.inflearn.com/public/courses/325641/cover/3cc2eeea-c3fa-4c94-a816-0aeabb4ea08c','코딩일레븐'),(350,1,'뉴욕 프로덕트 디자이너가 알려주는, 입문자를 위한 UX디자인 개론','https://www.inflearn.com/course/ux디자인-입문','https://cdn.inflearn.com/public/course-325638-cover/5bf811f2-72e6-46b1-980e-4ddcd73d3459','에릭'),(351,1,'JIRA를 활용해 더 효과적으로 프로젝트 협업하기','https://www.inflearn.com/course/지라-프로젝트협업','https://cdn.inflearn.com/public/course-325614-cover/093efe70-b963-4a57-8f52-966e217d55e2','lesstif'),(352,1,'유니티(Unity)로 시작하는 게임개발: Part 1. 컴퓨터 구조 입문','https://www.inflearn.com/course/유니티-게임개발-파트1','https://cdn.inflearn.com/public/course-325594-cover/e3f498e6-b4aa-433a-a831-6685329bc1f0','UDevApp'),(353,1,'외국계 기업으로 이직하기','https://www.inflearn.com/course/외국계-기업-이직-이력서-면접','https://cdn.inflearn.com/public/course-325553-cover/115b1272-f9f9-4a07-b4b9-1ed5ce678d3a','난나연구소'),(354,1,'Svelte 입문 강의 - A부터 Z까지','https://www.inflearn.com/course/스벨트-입문','https://cdn.inflearn.com/public/course-325531-cover/ffcf09d8-0f0c-459a-8f34-769a5178d840','이효범(Beomy)'),(355,1,'[C#과 유니티로 만드는 MMORPG 게임 개발 시리즈] Part6: 웹 서버','https://www.inflearn.com/course/유니티-MMORPG-개발-part6','https://cdn.inflearn.com/public/course-325464-cover/1fa9d02e-de61-46aa-80db-a46a4a573ce9','Rookiss'),(356,1,'HTML+CSS+JQUERY 포트폴리오 실전 퍼블리싱','https://www.inflearn.com/course/웹-퍼블리싱-이론-실전','https://cdn.inflearn.com/public/courses/325450/course_cover/a15141ac-4d33-4f6d-a38b-3a0b5773031c/webdesign-cover-03.png','코딩웍스(Coding Works)'),(357,1,'3시간에 끝내는 디지털 마케팅의 모든 것','https://www.inflearn.com/course/3시간에-끝내는-디지털마케팅-모든것','https://cdn.inflearn.com/public/courses/325403/course_cover/1434b9e6-a7d7-4126-a185-e0874d839428/ysm-marketing.jpg','Seongmin Yoo'),(358,1,'내러티브 있는 문서와 프레젠테이션','https://www.inflearn.com/course/프레젠테이션-내러티브','https://cdn.inflearn.com/public/course-325394-cover/d12719ad-a597-4a0b-a2bf-2e7ed7154829','김용석'),(359,1,'그리네모의 애니메이션과 이모티콘 만드는 진짜 애니메이트 클래스','https://www.inflearn.com/course/애니메이트-애니메이션-이모티콘','https://cdn.inflearn.com/public/course-325346-cover/b433bf9a-bffa-41cb-b325-e38aaffd228d','그리네모'),(360,1,'Python 부트캠프','https://www.inflearn.com/course/파이썬-부트캠프','https://cdn.inflearn.com/public/course-325339-cover/9f2bb0a8-26c3-4520-aaf6-5a3ff4466b7d','제주코딩베이스캠프'),(361,1,'Python 엑셀 프로그래밍 - with xlsxwriter','https://www.inflearn.com/course/파이썬-엑셀-프로그래밍','https://cdn.inflearn.com/public/courses/325336/course_cover/9f6ba927-e251-432e-98cb-c9e0b05c78bf/%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%97%91%EC%85%80.png','제주코딩베이스캠프'),(362,1,'눈떠보니 코딩 테스트 전날','https://www.inflearn.com/course/코딩-테스트-전날','https://cdn.inflearn.com/public/courses/325291/course_cover/514cf585-ad48-44ed-986c-4b1f5a385afa/%EB%88%88%EB%96%A0%EB%B3%B4%EB%8B%88-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%28%28%EC%88%98%EC%A0%95%29.jpg','제주코딩베이스캠프'),(363,1,'모의해킹 실무자가 알려주는, 파일 업로드 취약점 공격 기법과 실무 사례 분석 : PART 1','https://www.inflearn.com/course/파일-업로드-취약점-공격-1','https://cdn.inflearn.com/public/courses/325249/course_cover/474bdf32-a3a1-4a11-a7f7-d1dbdf60dbe0/upload-inforsec-1-eng.png','크리핵티브'),(364,1,'진짜 현업에서 쓰이는 직장인의 실무 엑셀 - 데이터 가공부터 분석까지','https://www.inflearn.com/course/현업-직장인-실무-엑셀-데이터가공분석','https://cdn.inflearn.com/public/courses/325241/course_cover/b706da64-1414-407f-9466-7da4b875e49d/byj-excel-data.jpg','배영자'),(365,1,'따라하며 배우는 노드, 리액트 시리즈 - 쇼핑몰 사이트 만들기','https://www.inflearn.com/course/따라하며-배우는-노드-리액트-쇼핑몰','https://cdn.inflearn.com/public/courses/325240/course_cover/d5d7e9a9-2d6f-4a81-84da-5e9cde3f39a4/nodereactecommerce-eng.png','John Ahn'),(366,1,'[스피치] 11년차 아나운서에게 배우는 말 잘하는 방법!','https://www.inflearn.com/course/쉽게-배우는-기초스피치','https://cdn.inflearn.com/public/course-325171-cover/aba3e219-8982-4410-935c-b930bbe0f6fe','흥버튼'),(367,1,'Flutter 응용 - 공공 API를 활용한 앱 만들기 (공적 마스크 재고 확인 앱)','https://www.inflearn.com/course/flutter-공공-api-앱-응용','https://cdn.inflearn.com/public/courses/325125/course_cover/1e63d453-b09a-474d-85f7-e8e4db0aae8c/ojs-mvvm-flutter-eng.png','오준석'),(368,1,'비전공자를 위한 개발자 취업 실전 가이드','https://www.inflearn.com/course/비전공자를-위한-개발자-취업','https://cdn.inflearn.com/public/courses/325112/course_cover/8ab0f695-cc01-42a9-977d-2e6689f23c48/dev-career-practice-eng.png','한정수'),(369,1,'온라인 개학, 스마트 도구에 대한 모든 것','https://www.inflearn.com/course/온라인개학-동영상강의-제작','https://cdn.inflearn.com/public/courses/325087/course_cover/07b4d9cc-5f87-4f05-a7b3-7bac667f8bfb/%EC%98%A8%EB%9D%BC%EC%9D%B8-%EA%B0%95%EC%9D%98-%EB%AA%A8%EB%93%A0%EA%B2%83-%28%EC%88%98%EC%A0%95%29.png','제주코딩베이스캠프'),(370,1,'Spring Boot를 이용한 RESTful Web Services 개발','https://www.inflearn.com/course/spring-boot-restful-web-services','https://cdn.inflearn.com/public/courses/325065/course_cover/66cd1514-8296-4ec6-9e72-e1305c4d80a0/springboot-restful-web-dev-eng.png','Dowon Lee'),(371,1,'공연사진을 보정하며 배우는 Lightroom 기초부터 마스터까지! - 라이트룸','https://www.inflearn.com/course/공연사진-보정-라이트룸-기초-마스터','https://cdn.inflearn.com/public/course-325039-cover/35ea3c4a-19c8-48f2-b2e9-e375c15c177d','진달래'),(372,1,'태블로 대시보드 기초','https://www.inflearn.com/course/tableau-dashboard-basic','https://cdn.inflearn.com/public/courses/324960/course_cover/ce03e04b-3353-407f-afa3-239af06b0492/tableau-dashboard-eng.png','VizLab'),(373,1,'프론트엔드 개발자를 위한 웹팩','https://www.inflearn.com/course/프런트엔드-웹팩','https://cdn.inflearn.com/public/courses/324959/course_cover/10b37838-44cc-4833-ac1c-18c22bad5a25/1.png','장기효(캡틴판교)'),(374,1,'따라하며 배우는 노드, 리액트 시리즈 - 기본 강의','https://www.inflearn.com/course/따라하며-배우는-노드-리액트-기본','https://cdn.inflearn.com/public/courses/324951/course_cover/510c265a-6de2-456d-8e6a-351b9ce29608/nodeReactbasic.png','John Ahn'),(375,1,'실전! 웹사이트제작! Step by Step! (대방산업_InteractiveWeb)','https://www.inflearn.com/course/실전-웹사이트제작-대방산업-interativeweb','https://cdn.inflearn.com/public/course-324928-cover/1f2efec6-5f92-4556-93d3-19eefb87b156','J.영'),(376,1,'CSS Flex와 Grid 제대로 익히기','https://www.inflearn.com/course/css-flex-grid-제대로-익히기','https://cdn.inflearn.com/public/courses/324748/course_cover/bb3c6bb1-5d92-48bd-926f-00cfa0d5522d/thumbnail.JPG','1분코딩'),(377,1,'빠르게 git - 핵심만 골라 배우는 Git/Github','https://www.inflearn.com/course/빠르게-git','https://cdn.inflearn.com/public/courses/324744/course_cover/6a3f40f4-c739-4872-bd81-ef9b6ddcafa1/git-github-keypoint.png','강태공'),(378,1,'프론트엔드 개발자를 위한, 웹 성능 최적화 꿀팁키트(feat. React) - Part. 1','https://www.inflearn.com/course/웹-성능-최적화-리액트-1','https://cdn.inflearn.com/public/course-324686-cover/ca057d36-86cf-47c1-a006-e42de7e397f8','유동균'),(379,1,'Vue.js 끝장내기 - 실무에 필요한 모든 것','https://www.inflearn.com/course/vue-js-끝내기-캡틴판교','https://cdn.inflearn.com/public/courses/324683/course_cover/d744a88a-ad26-4d8b-9653-24920714b24b/lv4.png','장기효(캡틴판교)'),(380,1,'일주일 완성! 3dsmax 입문 (자동차 및 캐릭터 만들기)','https://www.inflearn.com/course/일주일완성-3dsmax-입문','https://cdn.inflearn.com/public/courses/324504/course_cover/1ba6aa0e-a276-4d62-9979-c5a29e690c51/m_3ds_basic.png','목마하임(MokmaHeim)'),(381,1,'홍정모의 따라하며 배우는 C언어','https://www.inflearn.com/course/following-c','https://cdn.inflearn.com/public/courses/324482/course_cover/aa45c1df-eb0f-4268-b141-3f9f7a45a5dd/hjm_following-c.png','PP TREE'),(382,1,'제주코딩베이스캠프 Code Festival: JavaScript 100제','https://www.inflearn.com/course/제주코딩-자바스크립트-100제','https://cdn.inflearn.com/public/courses/324470/course_cover/93df16b3-38c5-4265-b00a-208075d2f135/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-100%EC%A0%9C%28%EC%88%98%EC%A0%95%29.png','제주코딩베이스캠프'),(383,1,'인터랙티브 웹 개발 제대로 시작하기','https://www.inflearn.com/course/interactive_web','https://cdn.inflearn.com/public/courses/324033/course_cover/231c55c4-5e77-427d-8344-25e2222cd96f/yjm_web.png','1분코딩'),(384,1,'함수형 프로그래밍과 JavaScript ES6+ 응용편','https://www.inflearn.com/course/함수형_ES6_응용편','https://cdn.inflearn.com/public/courses/324019/course_cover/9bdc6818-f3d4-49f4-a0bf-1165e3f726b5/es6_2.png','유인동'),(385,1,'벡터 미적분학 시리즈1 - 미분 기초','https://www.inflearn.com/course/벡터미적분학기초1','https://cdn.inflearn.com/public/courses/324011/course_cover/62b52ddf-5941-4b9d-b9fc-6036e96ad6e6/jbh_vector.png','조범희 (타블렛깎는노인)'),(386,1,'선형대수학개론','https://www.inflearn.com/course/선형대수학개론','https://cdn.inflearn.com/wp-content/uploads/linear_.jpg','조범희 (타블렛깎는노인)'),(387,1,'Vue.js 완벽 가이드 - 실습과 리팩토링으로 배우는 실전 개념','https://www.inflearn.com/course/vue-js','https://cdn.inflearn.com/public/courses/262728/course_cover/e4e95dfd-4e83-4ded-b6be-aa9f2078982e/lv3.png','장기효(캡틴판교)'),(388,1,'쉽고 빠르게 끝내는 GO언어 프로그래밍 핵심 기초 입문 과정','https://www.inflearn.com/course/go언어','https://cdn.inflearn.com/wp-content/uploads/golang.jpg','좋은사람'),(389,1,'C# OpenCV 컴퓨터비전 입문 강좌','https://www.inflearn.com/course/c-opencv','https://cdn.inflearn.com/wp-content/uploads/C_OpenCV-1.jpg','윤대희'),(390,1,'Javascript ES6+ 제대로 알아보기 - 초급','https://www.inflearn.com/course/ecmascript-6-flow','https://cdn.inflearn.com/wp-content/uploads/es6-1.jpg','정재남'),(391,1,'실습 UI 개발로 배워보는 순수 javascript 와 VueJS 개발','https://www.inflearn.com/course/순수js-vuejs-개발-강좌','https://cdn.inflearn.com/wp-content/uploads/vuejsandpure.png','김정환'),(392,1,'크롤링으로 웹, 텔레그램봇, REST API, 모바일 앱 만들기','https://www.inflearn.com/course/크롤링-모바일앱','https://cdn.inflearn.com/public/courses/326447/cover/a12a52b1-63e4-4f00-a9c1-7dd7cc42c740','진슈'),(393,1,'실전 데이터 사이언스 Part 3. 머신러닝의 이해','https://www.inflearn.com/course/핵심-머신러닝','https://cdn.inflearn.com/public/courses/326424/cover/4d0cdd56-14ae-4e7f-85ae-83cfe1a8b0b9','김화종'),(394,1,'Zapier로 노코드 업무자동화, 게으르지만 일 잘하고픈 분들을 위한 최고의 방법','https://www.inflearn.com/course/재피어-업무자동화','https://cdn.inflearn.com/public/courses/326400/cover/14e14a5e-fd28-437d-bd46-52911f12623e','픗픗 아카데미'),(395,1,'하루만에 만드는 깃허브 블로그','https://www.inflearn.com/course/깃허브-블로그-포트폴리오','https://cdn.inflearn.com/public/courses/326349/cover/14a4fdbb-1c77-49e1-b5de-7854492aaa64','따라쟁이'),(396,1,'도커 쓸 땐 필수! 도커 컴포즈','https://www.inflearn.com/course/도커-컴포즈','https://cdn.inflearn.com/public/courses/326328/cover/ea7ed8c8-4e2c-4637-9ade-6247ce11d2f0','너굴'),(397,1,'오라클 성능 분석과 튜닝 핵심 가이드','https://www.inflearn.com/course/오라클-성능-분석','https://cdn.inflearn.com/public/course-326299-cover/e57b2820-2497-40b1-8bbc-73a8b0393aa6','권 철민'),(398,1,'Svelte.js SPA 영화 검색 프로젝트','https://www.inflearn.com/course/스벨트-실습-프로젝트','https://cdn.inflearn.com/public/course-326278-cover/e6243ef9-cc62-4a94-a359-7317e235dfab','HEROPY'),(399,1,'실전 데이터 사이언스 Part1. 파이썬 입문','https://www.inflearn.com/course/핵심-파이썬','https://cdn.inflearn.com/public/courses/326272/cover/e014e3f2-bbd0-4eec-b07f-eca65061caf3','김화종'),(400,1,'PyGame 어드벤쳐 : 위니브 월드를 수복하라!','https://www.inflearn.com/course/파이게임-어드벤쳐','https://cdn.inflearn.com/public/course-326242-cover/fd3e8c92-3d0e-4cf2-953f-d269dee24d1d','제주코딩베이스캠프'),(401,1,'실전 자바스크립트','https://www.inflearn.com/course/실전-자바스크립트','https://cdn.inflearn.com/public/course-326083-cover/c9e79ef3-3591-4e7e-a501-0c0fc315c105','이재승'),(402,1,'피그마(Figma)를 활용한 UI디자인 입문부터 실전까지 A to Z','https://www.inflearn.com/course/피그마-ui디자인','https://cdn.inflearn.com/public/course-326063-cover/4aff7ad8-ebd6-49ea-8d19-64d7e746c4fe','에릭'),(403,1,'Data, Ready? Action!: 태블로 데스크탑 + 서버/온라인 연계 활용 Use Case','https://www.inflearn.com/course/태블로-자동화-프로세스','https://cdn.inflearn.com/public/course-326058-cover/f5a5f9ec-218d-4391-9d15-b85162dcd0d0','VizLab'),(404,1,'[Django] 장고로 인프런 따라만들기','https://www.inflearn.com/course/장고-인프런','https://cdn.inflearn.com/public/course-326045-cover/101c0b65-770a-454e-a959-14a7fdd99f8f','개복치개발'),(405,1,'모의해킹 실무자가 알려주는, SQL Injection 고급 공격 기법 : PART 2','https://www.inflearn.com/course/sql-injection-secure-coding-2','https://cdn.inflearn.com/public/course-326041-cover/a20d39f8-54f7-4b35-976e-86b9e272819c','크리핵티브'),(406,1,'[C#과 유니티로 만드는 MMORPG 게임 개발 시리즈] 번외편: AWS로 시작하는 서버 운영','https://www.inflearn.com/course/유니티-MMORPG-개발-aws','https://cdn.inflearn.com/public/course-326030-cover/f779bd47-8449-4d23-a4b6-36d477a21b72','Rookiss'),(407,1,'따라하며 배우는 TDD 개발','https://www.inflearn.com/course/따라하며-배우는-tdd','https://cdn.inflearn.com/public/course-326029-cover/7f87dfc8-b7a2-4ab7-9c44-b3e6dfdcd702','John Ahn'),(408,1,'[All in One] 정보보안 직업 체험(보안 취업 패키지)','https://www.inflearn.com/course/정보보안-직업-취업','https://cdn.inflearn.com/public/course-325994-cover/ab4454cb-9563-4063-9537-3070ed21d60d','Security Reader'),(409,1,'따라하면 취업되는 게임기획 강의!','https://www.inflearn.com/course/게임기획-취업','https://cdn.inflearn.com/public/course-325974-cover/7e46e5bc-ce66-4f3e-9463-c8ef3ee5be85','JamesKim'),(410,1,'캐글 Advanced 머신러닝 실전 박치기','https://www.inflearn.com/course/캐글-머신러닝-실전','https://cdn.inflearn.com/public/course-325953-cover/730016a7-80dd-48c3-a49d-c2d193d9dc9c','권 철민'),(411,1,'만들면서 배우는 Svelte','https://www.inflearn.com/course/만들면서-배우는-스벨트','https://cdn.inflearn.com/public/course-325931-cover/fa4e4140-cd14-4792-9015-d3f40424f7c7','Hollo Coding(홀로코딩)'),(412,1,'타입스크립트 시작하기','https://www.inflearn.com/course/타입스크립트-시작하기','https://cdn.inflearn.com/public/course-325872-cover/dddce7f3-4a45-4c25-8d7f-7736874ea88c','이재승'),(413,1,'초보를 위한 도커 안내서','https://www.inflearn.com/course/도커-입문','https://cdn.inflearn.com/public/course-325850-cover/7c824ded-b644-4421-8ddd-2197367ab0ea','subicura'),(414,1,'자바스크립트 ES6+ 심화','https://www.inflearn.com/course/자바스크립트-es6-심화','https://cdn.inflearn.com/public/course-325633-cover/ececd36d-e3c5-49de-ac84-6bd44b8bb706','김영보'),(415,1,'스프링 입문 - 코드로 배우는 스프링 부트, 웹 MVC, DB 접근 기술','https://www.inflearn.com/course/스프링-입문-스프링부트','https://cdn.inflearn.com/public/course-325630-cover/ef4463c2-a613-4602-b08d-d46f2c01e526','김영한'),(416,1,'웹 개발자와 정보보안 입문자들이 반드시 알아야 될, 웹 해킹과 보안 그리고 시큐어 코딩','https://www.inflearn.com/course/웹해킹-보안-시큐어코딩','https://cdn.inflearn.com/public/course-325579-cover/15d11b1a-5632-4fe8-8a85-4a0b434ba7bb','크리핵티브'),(417,1,'따라하며 배우는 데노(DENO) - 기본 강의','https://www.inflearn.com/course/따라하며-배우는-디노-기본','https://cdn.inflearn.com/public/course-325475-cover/3a4a2e20-bfd0-46e9-9250-63fbd5bf395f','John Ahn'),(418,1,'당신을 함께 일하고 싶은 개발자로 만들어 줄 클린 코드 작성법','https://www.inflearn.com/course/클린코드-작성법','https://cdn.inflearn.com/public/courses/325361/course_cover/a766df98-6e0b-45c4-9375-265de971dde4/cleancode_thumbnail.png','클린 코더'),(419,1,'그림으로 배우는 자바, 파트2: 객체지향!','https://www.inflearn.com/course/그림으로-배우는-자바-객체지향','https://cdn.inflearn.com/public/course-325321-cover/50b4d560-b323-44e3-bff7-171f549a4db6','홍팍'),(420,1,'태블로를 활용한 시간 데이터 시각화','https://www.inflearn.com/course/태블로-시간데이터-시각화','https://cdn.inflearn.com/public/courses/325311/course_cover/6354585c-b0de-4978-85ec-86864b38e192/tableau-timedata-eng.png','VizLab'),(421,1,'Kevin의 알기 쉬운 RxJava 1부','https://www.inflearn.com/course/자바-리액티브프로그래밍-1','https://cdn.inflearn.com/public/course-325253-cover/5a043084-7a84-489e-b2a5-aa65967f0ac0','Kevin'),(422,1,'처음하는 코딩 - 플레이봇 (중등교육 -Javascript)','https://www.inflearn.com/course/플레이봇-중등교육-자바스크립트','https://cdn.inflearn.com/public/courses/325242/course_cover/f27a5b26-fb41-49aa-8c1c-5969de689b29/%ED%94%8C%EB%A0%88%EC%9D%B4%EB%B4%87-%EC%8D%B8%EB%84%A4%EC%9D%BC.jpg','제주코딩베이스캠프'),(423,1,'의미전달에 효과적인 하이브리드 파워포인트 작성법(초급)','https://www.inflearn.com/course/하이브리드-파워포인트-작성법','https://cdn.inflearn.com/public/courses/325186/course_cover/22908d64-212d-4261-a442-943c2726fc99/swing-ppt.jpg','성수쌤'),(424,1,'글쓰기 입문부터 출간까지 - 하루만에 끝내는 글쓰기 강좌','https://www.inflearn.com/course/하루만에-끝내는-글쓰기-입문-출간-강좌','https://cdn.inflearn.com/public/course-325130-cover/d19f761e-bcb0-4e42-a3ad-040ef49d7fda','도란'),(425,1,'스피킹 강자로 만들어주는 만능 영어회화패턴 12가지','https://www.inflearn.com/course/만능영어회화패턴','https://cdn.inflearn.com/public/courses/325127/course_cover/a7c7d7a1-d142-43e6-8200-af2869ad1ee2/karen-english.jpg','Karen T'),(426,1,'엑셀 매크로와 VBA 기초부터 실무활용까지 완전 정복','https://www.inflearn.com/course/엑셀-매크로-VBA-기초-실무활용','https://cdn.inflearn.com/public/courses/325082/course_cover/2664b3cc-3f1e-4b3b-9ef5-dc4ea7967d47/kkj-macro.jpg','김경자'),(427,1,'모의해킹 실무자가 알려주는, 파일 다운로드 취약점 공격 기법과 실무 사례 분석','https://www.inflearn.com/course/파일-다운로드-취약점-공격','https://cdn.inflearn.com/public/courses/325018/course_cover/71d73a81-e5df-48d5-ba73-499f191f34dc/download-inforsec-eng.png','크리핵티브'),(428,1,'데브옵스(DevOps)를 위한 쿠버네티스 마스터','https://www.inflearn.com/course/데브옵스-쿠버네티스-마스터','https://cdn.inflearn.com/public/courses/324992/course_cover/33c90a88-2c66-48d3-a533-c0421a30604b/devops.png','보안프로젝트'),(429,1,'개발자는 왜 간단한 것도 안 된다고 하나요? (개발자와 커뮤니케이션하기)','https://www.inflearn.com/course/개발-용어-이해하기','https://cdn.inflearn.com/public/courses/324969/course_cover/ac310bff-3566-4d3d-8531-8742141075fe/dev-communication-eng.png','개복치개발'),(430,1,'모의해킹 실무자가 알려주는, SQL Injection 공격 기법과 시큐어 코딩 : PART 1','https://www.inflearn.com/course/sql-injection-secure-coding-1','https://cdn.inflearn.com/public/courses/324949/course_cover/dc53436d-1025-46e0-bd9d-ffbcc9221ff7/sql-injection-secure-coding-pt1-eng.png','크리핵티브'),(431,1,'따라하며 배우는 노드, 리액트 시리즈 - 영화 사이트 만들기','https://www.inflearn.com/course/따라하며-배우는-노드-리액트-영화사이트-만들기','https://cdn.inflearn.com/public/courses/324906/course_cover/63e47a67-f188-41a1-94a0-1ffecc7734c0/nodeReact-film.png','John Ahn'),(432,1,'[2021년 출제기준] 웹디자인기능사 실기시험 완벽 가이드(HTML+CSS+JQUERY)','https://www.inflearn.com/course/웹디자인-기능사-2020','https://cdn.inflearn.com/public/courses/324878/course_cover/12211037-e74b-46b3-8942-46d465b81bba/webdesign-cover-02.png','코딩웍스(Coding Works)'),(433,1,'파이썬 무료 강의 (기본편) - 6시간 뒤면 나도 개발자','https://www.inflearn.com/course/나도코딩-파이썬-기본','https://cdn.inflearn.com/public/courses/324835/course_cover/637a88e8-7f98-4441-ab19-e7a9e6a391ab/nadocoding-python-new.png','나도코딩'),(434,1,'마케팅 에이전시 대표에게 배우는 페이스북/인스타그램 광고 마스터하기','https://www.inflearn.com/course/페이스북-인스타그램-광고','https://cdn.inflearn.com/public/courses/324738/course_cover/7de33108-3679-4eb5-ba0d-c07e9eda4fbe/%EC%9D%B8%ED%94%84%EB%9F%B0%20%ED%94%84%EB%A1%9C%ED%95%84%20%EC%82%AC%EC%A7%84.jpg','구양일'),(435,1,'[개념부터 실습까지] 추천 시스템 입문편','https://www.inflearn.com/course/추천-시스템-입문편','https://cdn.inflearn.com/public/courses/324713/course_cover/56449480-d53c-4c8b-a2b2-13f91a35738e/recommendation-system-basic-eng.png','데이터리안'),(436,1,'[백문이불여일타] 데이터 분석을 위한 기초 SQL','https://www.inflearn.com/course/백문이불여일타-데이터-분석-기초-sql','https://cdn.inflearn.com/public/courses/324566/course_cover/64f71f86-bb24-43ed-8c76-c97a03a26330/lian-sql1.png','데이터리안'),(437,1,'R로 하는 웹 크롤링 - 실전편','https://www.inflearn.com/course/R-crawling-2','https://cdn.inflearn.com/public/courses/324534/course_cover/f24fb2ea-6e03-4ee8-83e8-053653370589/R_practical_exercise.png','코코'),(438,1,'우리를 위한 프로그래밍 : 파이썬 중급 (Inflearn Original)','https://www.inflearn.com/course/프로그래밍-파이썬-중급-인프런-오리지널','https://cdn.inflearn.com/public/courses/324510/course_cover/91bed9c2-6ea2-48c8-8f2e-fa50cfd7284a/I_O_python_2.png','인프런'),(439,1,'더 자바, 애플리케이션을 테스트하는 다양한 방법','https://www.inflearn.com/course/the-java-application-test','https://cdn.inflearn.com/public/courses/324509/course_cover/85a80c0a-b297-458a-a4f2-0666e4de13a5/thejava2.png','백기선'),(440,1,'[OpenCV] 파이썬 딥러닝 영상처리 프로젝트 - 손흥민을 찾아라!','https://www.inflearn.com/course/딥러닝-파이썬-영상처리-손흥민','https://cdn.inflearn.com/public/courses/324508/course_cover/067408c8-819a-4a84-bd51-0ffb20a4ec3d/sjh_opencv.png','노마드크리에이터'),(441,1,'실전! 웹사이트제작! Step by Step! (와이스튜디오_반응형웹)','https://www.inflearn.com/course/실전-웹사이트-제작-실습','https://cdn.inflearn.com/public/course-324479-cover/820965e3-a096-4794-ba4e-965a1d94773d','J.영'),(442,1,'실전! Querydsl','https://www.inflearn.com/course/Querydsl-실전','https://cdn.inflearn.com/public/courses/324476/course_cover/c712dd1a-80e3-413f-93af-ca89bddd6fe9/kyh_DSL2.png','김영한'),(443,1,'실전! 스프링 데이터 JPA','https://www.inflearn.com/course/스프링-데이터-JPA-실전','https://cdn.inflearn.com/public/courses/324474/course_cover/58c8632c-7a6e-4c76-9893-d7fffa32faf2/kyh_JPA_Spring2%20%E1%84%87%E1%85%A9%E1%86%A8%E1%84%89%E1%85%A1%206.png','김영한'),(444,1,'취미로 해킹#5(DIMICTF)','https://www.inflearn.com/course/취미로해킹-dimictf','https://cdn.inflearn.com/public/courses/324458/course_cover/acd7d926-b0af-4449-baf1-69b91bc82d2c/%E1%84%8E%E1%85%B1%E1%84%86%E1%85%B5%E1%84%85%E1%85%A9%E1%84%92%E1%85%A2%E1%84%8F%E1%85%B5%E1%86%BC5.png','장용하'),(445,1,'남박사의 파이썬으로 실전 웹사이트 만들기','https://www.inflearn.com/course/파이썬-웹사이트만들기-실전','https://cdn.inflearn.com/public/courses/324416/course_cover/eb9ead17-3a5a-4b29-8c57-50377210876e/%E1%84%82%E1%85%A1%E1%86%B7%E1%84%87%E1%85%A1%E1%86%A8%E1%84%89%E1%85%A1_%E1%84%8B%E1%85%B0%E1%86%B8%E1%84%89%E1%85%A1%E1%84%8B%E1%85%B5%E1%84%90%E1%85%B3.png','남박사'),(446,1,'3D리플릿 만들기 - 인터랙티브 웹 프로젝트','https://www.inflearn.com/course/인터랙티브웹-리플릿만들기','https://cdn.inflearn.com/public/courses/324414/course_cover/cdf784ec-0639-4df7-9507-370e197c2a7f/%E1%84%8B%E1%85%B5%E1%86%AB%E1%84%91%E1%85%B3%E1%84%85%E1%85%A5%E1%86%AB%E1%84%8A%E1%85%A5%E1%86%B7%E1%84%82%E1%85%A6%E1%84%8B%E1%85%B5%E1%86%AF.jpg','1분코딩'),(447,1,'파이썬 알고리즘 문제풀이 (코딩테스트 대비)','https://www.inflearn.com/course/파이썬-알고리즘-문제풀이-코딩테스트','https://cdn.inflearn.com/public/courses/324412/course_cover/e856a66a-5166-477f-b485-9026fbaf09fc/ktw_algorithm.png','김태원'),(448,1,'3dsmax 모델링 고수의 비밀! (Modeling Expert Technique)','https://www.inflearn.com/course/3dsmax-모델링-고수의-비밀','https://cdn.inflearn.com/public/courses/324318/course_cover/6a24a579-eec1-4e54-ab8b-33e5fdf570db/m_3ds_Advanced.png','목마하임(MokmaHeim)'),(449,1,'파이썬 머신러닝 완벽 가이드','https://www.inflearn.com/course/파이썬-머신러닝-완벽가이드','https://cdn.inflearn.com/public/courses/324238/course_cover/01193765-1b5d-4964-b8b5-dc9444ecc23e/%E1%84%91%E1%85%A1%E1%84%8B%E1%85%B5%E1%84%8A%E1%85%A5%E1%86%AB%E1%84%86%E1%85%A5%E1%84%89%E1%85%B5%E1%86%AB%E1%84%85%E1%85%A5%E1%84%82%E1%85%B5%E1%86%BC.png','권 철민'),(450,1,'실전! 스프링 부트와 JPA 활용2 - API 개발과 성능 최적화','https://www.inflearn.com/course/스프링부트-JPA-API개발-성능최적화','https://cdn.inflearn.com/public/courses/324214/course_cover/8ce5e6b5-6b31-4659-a0cd-eec20efc13f4/kyh_JPA_Spring2.png','김영한'),(451,1,'더 자바, 코드를 조작하는 다양한 방법','https://www.inflearn.com/course/the-java-code-manipulation','https://cdn.inflearn.com/public/courses/324184/course_cover/cd411e13-4f2c-4254-b569-76ff8f663a2d/thejava.png','백기선'),(452,1,'프리다(Frida)를 이용한 안드로이드 앱 모의해킹','https://www.inflearn.com/course/프리다-frida-안드로이드-모의해킹','https://cdn.inflearn.com/public/courses/324180/course_cover/9217ce88-afd4-4936-a363-a1fe376d4cea/boan_frida.png','보안프로젝트'),(453,1,'Vue.js 시작하기 - Age of Vue.js','https://www.inflearn.com/course/Age-of-Vuejs','https://cdn.inflearn.com/public/courses/324088/course_cover/ac203578-d458-44f4-b273-81cb719a89b0/lv1.png','장기효(캡틴판교)'),(454,1,'파이썬입문과 크롤링기초 부트캠프 (2020 업데이트) [쉽게! 견고한 자료까지!]','https://www.inflearn.com/course/python-crawling-basic','https://cdn.inflearn.com/public/courses/324082/course_cover/91ab047b-c7f9-4e81-956d-da1bcc3c2c68/ljh_python.png','잔재미코딩'),(455,1,'STM32CubeIDE를 이용한 STM32F4 자작드론 개발하기','https://www.inflearn.com/course/STM32CubelDE-STM32F4드론-개발','https://cdn.inflearn.com/public/courses/324059/cover/7ac25dbb-9193-4c7d-98fb-22b8bb4eba54','ChrisP'),(456,1,'지금 당장 성과내기, 페이스북 퍼포먼스 마케팅 실습','https://www.inflearn.com/course/페이스북','https://cdn.inflearn.com/public/course-315347-cover/5b83f82b-b08e-490f-9ebb-687c3eaaf33d','Seongmin Yoo'),(457,1,'홍정모의 게임 만들기 연습 문제 패키지','https://www.inflearn.com/course/c-2','https://cdn.inflearn.com/wp-content/uploads/Cgame2-1.jpg','PP TREE'),(458,1,'PWA 시작하기 - 웹 기술로 앱을 만들자','https://www.inflearn.com/course/pwa','https://cdn.inflearn.com/wp-content/uploads/end.jpg','장기효(캡틴판교)'),(459,1,'홍정모의 따라하며 배우는 C++','https://www.inflearn.com/course/following-c-plus','https://cdn.inflearn.com/wp-content/uploads/C_hjm2-1.jpg','PP TREE'),(460,1,'객체 지향 프로그래밍 입문','https://www.inflearn.com/course/객체-지향-프로그래밍-입문','https://cdn.inflearn.com/wp-content/uploads/OOP2.jpg','최범균'),(461,1,'파이썬 입문 및 웹 크롤링을 활용한 다양한 자동화 어플리케이션 제작하기','https://www.inflearn.com/course/python-파이썬-웹-데이터-크롤링','https://cdn.inflearn.com/public/courses/121703/course_cover/5ca91afb-8aaf-4ec3-9d79-8f2873791f63/jesr_python_0.png','좋은사람'),(462,1,'[데브원영]아파치 카프카 for beginners','https://www.inflearn.com/course/아파치-카프카-입문','https://cdn.inflearn.com/public/courses/326507/cover/aa474be0-c000-4b61-afbb-cb78ed0fb843','데브원영 DVWY'),(463,1,'코로나맵 개발자와 함께하는 지도서비스 만들기 2','https://www.inflearn.com/course/코로나맵-지도서비스-응용','https://cdn.inflearn.com/public/courses/326487/cover/40f8cec7-b12d-4a50-8f1a-376430d3845c','이동훈'),(464,1,'Watch Me Code: 주린이를 위한 파이썬 데이터 분석','https://www.inflearn.com/course/와치미코드-파이썬-데이터분석','https://cdn.inflearn.com/public/courses/326474/cover/cc6448fa-9c11-448f-80da-5c67882ec6e5','멀티캠퍼스'),(465,1,'New Work : 회사 다니며 평생 커리어 찾기','https://www.inflearn.com/course/평생-커리어찾기','https://cdn.inflearn.com/public/courses/326464/cover/c1662fb9-1534-47a0-aab6-de6e9a29cc28','tiger'),(466,1,'시스템엔지니어가 알려주는 리눅스 실전편 Bash Shell Script','https://www.inflearn.com/course/리눅스-bash-실전편','https://cdn.inflearn.com/public/courses/326460/cover/87997944-d08e-42a9-abaf-6e8aa25bf81b','픗픗 아카데미'),(467,1,'작정하고 장고! Django로 Pinterest 따라만들기 : 바닥부터 배포까지','https://www.inflearn.com/course/장고-핀터레스트','https://cdn.inflearn.com/public/courses/326338/cover/922430b2-e5a9-4c3e-b7bd-6f983c0a71b4','Hyong Sok Park'),(468,1,'구글애즈로 배우는 퍼포먼스마케팅 필수지식','https://www.inflearn.com/course/구글애즈-퍼포먼스마케팅','https://cdn.inflearn.com/public/courses/326334/cover/b2c876b8-36b7-4da4-88f6-35c554fc18e3','Grace Shin'),(469,1,'구글 애널리틱스4 (GA4) 미니 코스','https://www.inflearn.com/course/구글-애널리틱스4','https://cdn.inflearn.com/public/course-326326-cover/18b11a0f-2aa6-4fc4-b90a-0dd6e1d73010','Grace Shin'),(470,1,'스타트업 A to Z','https://www.inflearn.com/course/스타트업','https://cdn.inflearn.com/public/course-326293-cover/20f64046-c49d-4c85-8e92-0892aaf79e96','제주코딩베이스캠프'),(471,1,'파이썬 무료 강의 (활용편3) - 웹 스크래핑 (5시간)','https://www.inflearn.com/course/파이썬-웹-스크래핑','https://cdn.inflearn.com/public/course-326271-cover/80dda0ba-4cd2-42da-846b-e4b6f511864e','나도코딩'),(472,1,'[Pytorch] 실전 인공지능으로 이어지는 파이토치 딥러닝','https://www.inflearn.com/course/파이토치-딥러닝','https://cdn.inflearn.com/public/courses/326248/cover/945f4b20-e4e1-4d10-8e64-f2757c01736b','딥러닝호형'),(473,1,'비전공자, 취준생을 위한 디지털마케팅 마케터 기초 코스','https://www.inflearn.com/course/디지털마케팅-기초','https://cdn.inflearn.com/public/course-326245-cover/d5831810-94fa-4c60-8bfa-d673e30d53d8','Grace Shin'),(474,1,'따라하며 배우는 리액트, 파이어베이스 - 채팅 어플리케이션 만들기','https://www.inflearn.com/course/리액트-파이어베이스-채팅-앱','https://cdn.inflearn.com/public/course-326181-cover/d012cab3-58e1-45cd-899e-03f86c7b1df1','John Ahn'),(475,1,'태블로 집합의 모든 것','https://www.inflearn.com/course/태블로-집합','https://cdn.inflearn.com/public/course-326133-cover/4c050d53-28eb-4301-bcba-40e44cdc5896','VizLab'),(476,1,'쉽고! 짧고! 강하게! 준비하는 웹디자인기능사 실기','https://www.inflearn.com/course/웹디자인기능사-실기','https://cdn.inflearn.com/public/course-326107-cover/382b6606-fd73-495d-a678-1a364cdb9bb5','LIZ.B'),(477,1,'실전 인공지능으로 이어지는 딥러닝 개념 잡기','https://www.inflearn.com/course/딥러닝-개념','https://cdn.inflearn.com/public/course-326101-cover/2e05ecb7-4f05-4194-a1f5-036c1f9a2445','딥러닝호형'),(478,1,'[C#과 유니티로 만드는 MMORPG 게임 개발 시리즈] 번외편: ASP.NET Core 심화편','https://www.inflearn.com/course/유니티-MMORPG-개발-aspnet','https://cdn.inflearn.com/public/course-326079-cover/71b7528d-889f-4a9f-acf2-a69972398a6b','Rookiss'),(479,1,'그리드(Grid) 핵심이론 및 실전 활용','https://www.inflearn.com/course/css-그리드-반응형웹','https://cdn.inflearn.com/public/course-326071-cover/4cbca96e-d2b4-4ee0-850b-6c2485f10e8a','코딩웍스(Coding Works)'),(480,1,'Axure RP 9 - 제품 관리자(PO, PM, 기획자)를 위한 최적의 프로토타이핑 툴','https://www.inflearn.com/course/axure-프로토타이핑','https://cdn.inflearn.com/public/courses/326055/cover/f364be4a-3853-4e15-b489-674810209003','기획자 데이먼'),(481,1,'비전공자를 위한 데이터 분석가 취업 가이드','https://www.inflearn.com/course/비전공자-빅데이터-취업','https://cdn.inflearn.com/public/course-326043-cover/c185e6d4-7693-4943-80db-67fd0cf4f42c','제니문'),(482,1,'파이썬 플라스크(Flask)로 웹 서비스 만들기','https://www.inflearn.com/course/파이썬-플라스크-웹서비스','https://cdn.inflearn.com/public/course-326014-cover/0c4219dd-4a84-4ceb-9169-6912c706a278','보안프로젝트'),(483,1,'8명의 비전공자는 어떻게 개발자로 취업했을까','https://www.inflearn.com/course/비전공자-개발자-취업','https://cdn.inflearn.com/public/courses/326004/cover/54347b92-0d8c-4d53-81d4-736097149f97','앨런(Allen)'),(484,1,'퍼블리셔 취업 진짜 실전 가이드','https://www.inflearn.com/course/퍼블리셔-취업-가이드','https://cdn.inflearn.com/public/course-325982-cover/8b120ba4-43ce-4e16-b26e-53d3231867d2','코딩웍스(Coding Works)'),(485,1,'[취업연계 100% 환급] 인프런 오리지널 프로그래밍 3종 패키지','https://www.inflearn.com/course/인프런-오리지널-프로그래밍-3종-원티드','https://cdn.inflearn.com/public/course-325977-cover/023c601c-5fab-4d6d-a428-3ca1aceb1d2e','인프런'),(486,1,'스타트업 창업 실전가이드','https://www.inflearn.com/course/스타트업-창업','https://cdn.inflearn.com/public/course-325948-cover/5ec24869-ffbe-4df5-88aa-56f572212548','임성준'),(487,1,'[어피니티 디자이너] 나만의 굿즈 만들기','https://www.inflearn.com/course/어피니티디자이너-굿즈-디자인','https://cdn.inflearn.com/public/course-325928-cover/4d2f8a59-264c-44c8-a426-4c656c47b7ee','정진호'),(488,1,'스스로 구축하는 AWS 클라우드 인프라 - 기본편','https://www.inflearn.com/course/aws-클라우드-인프라-기본','https://cdn.inflearn.com/public/course-325915-cover/c5c876a5-048f-49ce-b459-f1339432a43e','노마드 콘텐츠 랩'),(489,1,'[C#과 유니티로 만드는 MMORPG 게임 개발 시리즈] Part8: Entity Framework Core','https://www.inflearn.com/course/유니티-MMORPG-개발-part8','https://cdn.inflearn.com/public/course-325822-cover/6dc2e340-cba4-4d88-b313-3233d3e5c3a0','Rookiss'),(490,1,'가장 빠른 풀스택: 파이썬 백엔드와 웹기술 기본 [풀스택 Part1]','https://www.inflearn.com/course/파이썬-풀스택-1','https://cdn.inflearn.com/public/course-325804-cover/6afae82f-e06b-4a0b-914d-2bdf7b1f5b60','잔재미코딩'),(491,1,'무작정 따라하며 원리를 깨우치는 웹 해킹 : WebGoat 편','https://www.inflearn.com/course/웹-해킹-보안-webgoat','https://cdn.inflearn.com/public/course-325745-cover/84c61307-a374-4bc2-9515-382053b84b7d','크리핵티브'),(492,1,'쉽고 빠르게 익히는 Excel 파워 쿼리','https://www.inflearn.com/course/엑셀-파워쿼리-오피스튜터','https://cdn.inflearn.com/public/course-325728-cover/47e2bc3e-be8c-45a5-b5b4-31d954ac7610','오피스튜터'),(493,1,'유니티(Unity)로 시작하는 게임개발: Part 2. C# 프로그래밍 입문','https://www.inflearn.com/course/유니티-게임개발-파트2','https://cdn.inflearn.com/public/course-325580-cover/d3e5fc68-5e14-42f8-b6fd-db99b8b94772','UDevApp'),(494,1,'[평생소장] 퍼펙트 슬라이드 클리닉 with 파워포인트 특강','https://www.inflearn.com/course/퍼펙트-슬라이드-클리닉-파워포인트-평생','https://cdn.inflearn.com/public/course-325538-cover/4fea6e40-8d53-40c2-ab34-f80807e1b3fd','김재성'),(495,1,'퍼펙트 슬라이드 클리닉 with 파워포인트 특강','https://www.inflearn.com/course/퍼펙트-슬라이드-클리닉-파워포인트','https://cdn.inflearn.com/public/course-325537-cover/0ee9344e-e000-419a-b6cd-48b04a83db72','김재성'),(496,1,'[김왼손의 왼손코딩] Vim 에디터는 처음입니다만: 개발자를 위한 Vim 에디터 기초','https://www.inflearn.com/course/왼손코딩-vim-에디터','https://cdn.inflearn.com/public/courses/325348/course_cover/1749f984-c510-4940-a86a-0fdecc5decfe/vim-editor-eng.png','김왼손의 왼손코딩'),(497,1,'[C#과 유니티로 만드는 MMORPG 게임 개발 시리즈] Part5: 데이터베이스','https://www.inflearn.com/course/유니티-MMORPG-개발-part5','https://cdn.inflearn.com/public/courses/325283/course_cover/afb413e6-681e-47cd-808a-099c79fed112/rookiss-rpg-5.jpg','Rookiss'),(498,1,'Skill-Up! 웹쉘 탐지 솔루션 우회를 위한, 웹쉘 난독화 기법','https://www.inflearn.com/course/파일-업로드-취약점-공격-웹쉘','https://cdn.inflearn.com/public/courses/325271/course_cover/4a911597-7dc6-4e05-891e-70fe2cf340cf/webshell-inforsec-eng-2.png','크리핵티브'),(499,1,'파이썬 판다스(pandas)로 데이터 분석 및 가공하기','https://www.inflearn.com/course/파이썬-판다스-데이터분석-가공','https://cdn.inflearn.com/public/courses/325251/course_cover/eaab1372-d0fa-4391-9b0b-f364fb2b4dd9/pandas-data-analysis-eng.png','Kyeongrok Kim'),(500,1,'Node.js에 TypeScript 적용하기(feat. NodeBird)','https://www.inflearn.com/course/nodejs-typescript-적용','https://cdn.inflearn.com/public/course-325201-cover/98435f55-996d-4fc0-9337-a7d07edacd03','조현영'),(501,1,'요즘 필요한 요즘 지식','https://www.inflearn.com/course/요즘-필요한-요즘지식','https://cdn.inflearn.com/public/courses/325140/course_cover/8e60eab1-ccae-4861-a05c-c482a59a7f57/knowledge_E.png','밀린신문'),(502,1,'Microcosm SW Fair - 경쟁없는, 나만의 시빅해킹','https://www.inflearn.com/course/ict-시빅해킹-프로젝트','https://cdn.inflearn.com/public/courses/325123/course_cover/7867a30d-49f9-4312-89f5-b0e883db8a4e/시빅해킹-썸넬.png','제주코딩베이스캠프'),(503,1,'플러터와 장고로 1시간만에 퀴즈 앱/서버 만들기 [무작정 풀스택]','https://www.inflearn.com/course/플러터-장고-퀴즈앱-서버-풀스택','https://cdn.inflearn.com/public/courses/325095/course_cover/75f893a3-d50a-4f83-824e-5e18be7d364b/ktp-flutter-django-quiz.png','권태뽕'),(504,1,'김영삼 작가의 XD를 이용한 모바일 UI UX 실무 디자인','https://www.inflearn.com/course/xd-모바일-ux-디자인-실무','https://cdn.inflearn.com/public/courses/325069/course_cover/f4ce4773-1f2d-438d-be9f-650cd7ada2d3/sc-mobile-ux1.png','소프트캠퍼스'),(505,1,'[PyTorch] 쉽고 빠르게 배우는 NLP','https://www.inflearn.com/course/pytorch-쉽고-빠르게-배우는-nlp','https://cdn.inflearn.com/public/courses/325056/course_cover/b66025dd-43f5-4a96-8627-202b9ba9e038/pytorch-nlp-eng.png','코코'),(506,1,'[모바일] 딥러닝 Computer Vision 실전 프로젝트','https://www.inflearn.com/course/딥러닝-모바일-ComputerVision','https://cdn.inflearn.com/public/courses/324985/course_cover/6bedded2-1f32-4d11-be03-6e5bf5a3b488/sjh-mobile-cv.png','노마드크리에이터'),(507,1,'실전! 웹사이트제작! Step By Step! _Basic (한화캐미컬_반응형웹)','https://www.inflearn.com/course/웹사이트제작-실전-한화캐미컬','https://cdn.inflearn.com/public/course-324925-cover/b3d8a35e-9155-4a7d-bfd5-8f4d5d2fde92','J.영'),(508,1,'자바스크립트 머신러닝 TensorFlow.js','https://www.inflearn.com/course/자바스크립트-머신러닝-tensorflow','https://cdn.inflearn.com/public/courses/324920/course_cover/7e7eb0b1-f56e-422a-b423-0464f1711feb/kyb-tensorFlow.jpg','김영보'),(509,1,'[통합강의10%할인][평생소장!] 퍼펙트 프레젠테이션 특강','https://www.inflearn.com/course/프리젠테이션-통합-특강-평생소장','https://cdn.inflearn.com/public/courses/324895/course_cover/18f62961-6e2e-4242-92bd-ce0398082420/kjs-pp3.jpg','김재성'),(510,1,'[평생소장!] [퍼펙트 프리젠테이션] 발표 준비와 연습 그리고 실전발표','https://www.inflearn.com/course/퍼펙트-프리젠테이션-발표-준비-연습-실전-평생소장','https://cdn.inflearn.com/public/courses/324889/course_cover/68f8a5d3-610e-4ad5-b84e-200a87b3102b/kjs-pp2.jpg','김재성'),(511,1,'VBA 빅픽처','https://www.inflearn.com/course/VBA-빅픽처','https://cdn.inflearn.com/public/courses/324861/course_cover/92952917-ede1-4ff2-800c-d4db849c4aa4/byj-vba.png','배영자'),(512,1,'PHP 7+ 프로그래밍: 리부트','https://www.inflearn.com/course/php7-reboot','https://cdn.inflearn.com/public/course-324833-cover/5ebfab74-ebcf-4116-9b8b-908322d2f17a','정상우'),(513,1,'[C#과 유니티로 만드는 MMORPG 게임 개발 시리즈] Part2: 자료구조와 알고리즘','https://www.inflearn.com/course/유니티-mmorpg-개발-part2','https://cdn.inflearn.com/public/courses/324727/course_cover/73c17b60-66d0-4a72-9a30-ad6df94dffd4/rookiss-rpg-2.png','Rookiss'),(514,1,'실무자가 알려주는 Git - 입문편','https://www.inflearn.com/course/git-for-work-part-1','https://cdn.inflearn.com/public/courses/324723/course_cover/f98ca6f7-a851-4a3d-b0d2-761dfdab9311/%E1%84%80%E1%85%A1%E1%86%BC%E1%84%8B%E1%85%B4%E1%84%91%E1%85%AD%E1%84%8C%E1%85%B54.png','Country'),(515,1,'웹 게임을 만들며 배우는 TypeScript','https://www.inflearn.com/course/웹게임을-만들며-배우는-typescript','https://cdn.inflearn.com/public/course-324672-cover/77a2a919-eaaf-4228-9eb3-b28c5818725c','조현영'),(516,1,'자바스크립트 ES6+ 기본','https://www.inflearn.com/course/자바스크립트-es6-기본','https://cdn.inflearn.com/public/courses/324642/course_cover/3416cd43-b75d-422d-bc0f-ff6c9388f5ba/kyb_es6.png','김영보'),(517,1,'UX UI 디자이너의 연봉 올려주는 프로토타이핑 툴, 프린서플','https://www.inflearn.com/course/프린서플-UI-프로토타이핑-툴','https://cdn.inflearn.com/public/courses/324618/course_cover/86376c35-3677-4553-9020-3e2cec352371/principle_thumbnail.jpg','디자인베이스'),(518,1,'스케치앱 디자인 기초다지기[Sketch]','https://www.inflearn.com/course/스케치앱-디자인-기초','https://cdn.inflearn.com/public/courses/324583/course_cover/e7fe25ee-55e2-412e-8546-fb39959c0755/ljy_beginner.png','연남동이재용'),(519,1,'DataScience와 AI의 개념 (공부하는 방법)','https://www.inflearn.com/course/data-science-ai-공부-방법-개념','https://cdn.inflearn.com/public/courses/324573/course_cover/759f226d-dffa-44ca-86d2-c21ac2ef521f/DataScience.png','코코'),(520,1,'R로 하는 텍스트마이닝 (Top keyword부터 감성분석까지)','https://www.inflearn.com/course/r-text-mining','https://cdn.inflearn.com/public/courses/324562/course_cover/8c620665-dcdf-4cb7-ad68-350407f306ac/text_mining.png','코코'),(521,1,'홍정모의 따라하며 배우는 C언어 (부록)','https://www.inflearn.com/course/following-c-supplement','https://cdn.inflearn.com/public/courses/324553/course_cover/36f34acb-4116-42c1-97a5-7cbd8e7b587e/hjm_c_supplement.png','PP TREE'),(522,1,'프로그래머의 콘텐츠 생산 가이드 :: 성장을 위한 생산','https://www.inflearn.com/course/프로그래머의-컨텐츠-생산-가이드','https://cdn.inflearn.com/public/courses/324539/course_cover/18fce6f4-0331-4973-be3c-eb354a52d18f/%EC%BD%98%ED%85%90%EC%B8%A0-%EC%83%9D%EC%82%B0%28%EC%88%98%EC%A0%95%29.png','제주코딩베이스캠프'),(523,1,'파이썬(Python)으로 데이터 기반 주식 퀀트 투자하기 Part1','https://www.inflearn.com/course/파이썬-판다스-퀀트-투자','https://cdn.inflearn.com/public/course-324537-cover/835ace9a-e142-47ed-a8e7-fabdb873c782','DeepingSauce'),(524,1,'웰컴 투 태블로 월드','https://www.inflearn.com/course/태블로강좌-1','https://cdn.inflearn.com/public/courses/324453/course_cover/76b4c1a3-c624-4935-8ead-ac08e96fe4f9/tableau.png','VizLab'),(525,1,'Redux vs MobX (둘 다 배우자!)','https://www.inflearn.com/course/redux-mobx-상태관리-도구','https://cdn.inflearn.com/public/course-324452-cover/77a66183-dcd6-4eee-bd17-f354c398a208','조현영'),(526,1,'깔끔한 협업, 슬기로운 슬랙생활 시작하기','https://www.inflearn.com/course/협업-슬랙','https://cdn.inflearn.com/public/courses/324444/course_cover/b196ebf5-3460-4f60-affb-9beecb1f0425/%EC%8A%AC%EB%9E%99%EC%83%9D%ED%99%9C%28%EC%88%98%EC%A0%95%29.png','제주코딩베이스캠프'),(527,1,'아마존 클라우드 무료계정으로 시작하는 서버리스 애플리케이션 프로젝트','https://www.inflearn.com/course/AWS-서버리스-웹앱','https://cdn.inflearn.com/public/courses/324389/course_cover/30f8a3b0-0738-4bf5-80e9-bc7c2640cca9/Banner.jpg','HP'),(528,1,'업무가 100배 빨라지는 엑셀 데이터 활용과 분석 노하우','https://www.inflearn.com/course/엑셀-데이터-활용-분석','https://cdn.inflearn.com/public/courses/324314/course_cover/3ac91662-f368-4c3a-bb35-b69bf2500095/excel.jpg','김경자'),(529,1,'예민한 UX 디자인','https://www.inflearn.com/course/예민한-UX-디자인','https://cdn.inflearn.com/public/courses/324279/course_cover/90f1b89d-41c0-4721-a22e-4479e2d9fbb8/yemin_UX.png','전민수'),(530,1,'벡터 미적분학 시리즈4 - 적분 심화','https://www.inflearn.com/course/벡터-미적분-적분-심화','https://cdn.inflearn.com/public/courses/324268/course_cover/a1ea7a21-cb0f-498b-bc2f-9cfc201facc0/jbh4_%E1%84%8C%E1%85%A5%E1%86%A8%E1%84%87%E1%85%AE%E1%86%AB%E1%84%89%E1%85%B5%E1%86%B7%E1%84%92%E1%85%AA.png','조범희 (타블렛깎는노인)'),(531,1,'1:1채팅 만들기(Android + Kotlin + Firebase)','https://www.inflearn.com/course/kotlin-firebase-chat-app','https://cdn.inflearn.com/public/courses/324265/course_cover/1a00b132-63ee-4cc0-97e3-14b9de2f97d7/firebase-chat-eng.png','개복치개발'),(532,1,'케라스, 인공지능의 공용어 완전정복','https://www.inflearn.com/course/케라스-인공지능-공용어','https://cdn.inflearn.com/public/courses/324231/course_cover/5ce4c804-3757-46f9-8b2f-5162e656df99/%E1%84%8B%E1%85%B5%E1%86%B7%E1%84%92%E1%85%A1%E1%86%A8%E1%84%89%E1%85%AE_%E1%84%8F%E1%85%A6%E1%84%85%E1%85%A1%E1%84%89%E1%85%B3.png','노마드크리에이터'),(533,1,'대세는 쿠버네티스 [초급~중급]','https://www.inflearn.com/course/쿠버네티스-기초','https://cdn.inflearn.com/public/course-324190-cover/0201e314-ce34-4902-a816-8a4e5f20ced5','김태민'),(534,1,'웹 게임을 만들며 배우는 Vue','https://www.inflearn.com/course/web-game-vue','https://cdn.inflearn.com/public/courses/324182/course_cover/9bbd71c8-2a72-4338-b2bc-b37f60bbd4df/jhy_vue.png','조현영'),(535,1,'정말 쉽게 풀어보는 코딩 테스트 top 기본 문제 (with 자바)','https://www.inflearn.com/course/코딩테스트-자바','https://cdn.inflearn.com/public/courses/324164/course_cover/a8e899a1-ef0a-4752-94da-1f25a3a633df/coding_test.jpg','푸샵맨 코딩스터디'),(536,1,'진짜 입문자를 위한 클라우드와 AWS','https://www.inflearn.com/course/aws-starter','https://cdn.inflearn.com/public/courses/324144/course_cover/ff2eea88-045b-4c26-bff7-b0a2e38d4ff5/hns_AWS.png','호눅스'),(537,1,'윤재성의 만들면서 배우는 Spring MVC 5','https://www.inflearn.com/course/spring-mvc5-project','https://cdn.inflearn.com/public/courses/324027/course_cover/27ad0647-fd92-46c3-a64b-9a62f4afde75/sc-springmvc5-eng.png','소프트캠퍼스'),(538,1,'취미로 해킹#2(해커의 컴퓨팅)','https://www.inflearn.com/course/취미로-해킹2-해커의-컴퓨팅','https://cdn.inflearn.com/public/courses/296828/course_cover/20f57a36-74eb-450d-8b5e-27f27dbd71f9/%E1%84%8E%E1%85%B1%E1%84%86%E1%85%B5%E1%84%85%E1%85%A9%E1%84%92%E1%85%A2%E1%84%8F%E1%85%B5%E1%86%BC2.png','장용하'),(539,1,'쉽게 배워보는 파이참(PyCharm) 핵심 가이드','https://www.inflearn.com/course/pycharm-guide','https://cdn.inflearn.com/wp-content/uploads/kek_PC2-2.jpg','좋은사람'),(540,1,'스프링 웹 MVC','https://www.inflearn.com/course/웹-mvc','https://cdn.inflearn.com/wp-content/uploads/web_mvc7.jpg','백기선'),(541,1,'취미로 해킹#1(OverTheWire - Bandit)','https://www.inflearn.com/course/linux-3','https://cdn.inflearn.com/public/courses/261836/course_cover/fbfee582-16cc-4fb2-833b-c61b1583e88c/%E1%84%8E%E1%85%B1%E1%84%86%E1%85%B5%E1%84%85%E1%85%A9%E1%84%92%E1%85%A2%E1%84%8F%E1%85%B5%E1%86%BC1.png','장용하'),(542,1,'스프링 프레임워크 핵심 기술','https://www.inflearn.com/course/spring-framework_core','https://cdn.inflearn.com/wp-content/uploads/Spring_Core.jpg','백기선'),(543,1,'Javascript ES6+ 제대로 알아보기 - 중급','https://www.inflearn.com/course/es6-2','https://cdn.inflearn.com/wp-content/uploads/jjn_es62.jpg','정재남'),(544,1,'iOS AutoLayout 완벽 가이드 - 실무 프로젝트를 위한 실전강의','https://www.inflearn.com/course/autolayout','https://cdn.inflearn.com/wp-content/uploads/iOS_auto.jpg','iOS Developer'),(545,1,'파이썬을 활용한 데이터분석과 IT보안','https://www.inflearn.com/course/python-data-security','https://cdn.inflearn.com/wp-content/uploads/python-3.jpg','보안프로젝트'),(546,1,'IntelliJ를 시작하시는 분들을 위한  IntelliJ 가이드','https://www.inflearn.com/course/intellij-guide','https://cdn.inflearn.com/wp-content/uploads/IDEA2.jpg','이동욱'),(547,1,'견고한 JS 소프트웨어 만들기','https://www.inflearn.com/course/tdd-견고한-소프트웨어-만들기','https://cdn.inflearn.com/wp-content/uploads/software-1.jpg','김정환'),(548,1,'레트로의 유니티 C# 게임 프로그래밍 에센스','https://www.inflearn.com/course/유니티-게임-프로그래밍-에센스','https://cdn.inflearn.com/public/courses/140728/course_cover/bc808fb5-2854-4f23-aafa-168ef8ac5817/Artboard%20Copy%208.jpg','이제민'),(549,1,'프로들만의 차별화된 엑셀 데이터 분석과 차트 시각화','https://www.inflearn.com/course/excel-엑셀-데이터-분석','https://cdn.inflearn.com/wp-content/uploads/excel-1.jpg','김경자'),(550,1,'[NLP] IMDB 영화리뷰 감정 분석을 통한 파이썬 텍스트 분석과 자연어 처리','https://www.inflearn.com/course/nlp-imdb-파이썬-자연어-처리','https://cdn.inflearn.com/wp-content/uploads/review_analysis.jpg','박조은'),(551,1,'컴퓨터, 웹, 코딩, 프로그래밍의 시작 - Web1','https://www.inflearn.com/course/컴퓨터-웹-코딩-프로그래밍-시작-web-1','https://cdn.inflearn.com/wp-content/uploads/web1-1.png','Egoing Lee'),(552,1,'2021년에는 나도 프로일잘러! To Do, 할 일 관리','https://www.inflearn.com/course/microsoft-todo','https://cdn.inflearn.com/public/courses/326533/cover/abad326c-58d0-4dc0-b7bf-95b457a2820b','오마스'),(553,1,'HTML5, CSS3, 입문자를 위한 강의','https://www.inflearn.com/course/html5-css3-입문','https://cdn.inflearn.com/public/courses/326499/cover/8d229c82-e257-470b-b9cf-bd4236c321ed','JeongTaeHyun'),(554,1,'나만의 지식 콘텐츠로 평생 수익모델 만들기','https://www.inflearn.com/course/지식콘텐츠-수익모델','https://cdn.inflearn.com/public/courses/326465/cover/427bf866-ff9c-43f4-bf65-e6093368746a','tiger'),(555,1,'보통 직장인의 위대한 글쓰기','https://www.inflearn.com/course/직장인-글쓰기','https://cdn.inflearn.com/public/courses/326463/cover/10331f2c-6a9c-43d8-8f72-63c8917dfd30','tiger'),(556,1,'우리 회사의 온라인 예약 시스템 만들기 - MS Bookings','https://www.inflearn.com/course/microsoft-bookings','https://cdn.inflearn.com/public/courses/326438/cover/593904ab-c28c-43a9-8a46-32a5a475ae9a','오마스'),(557,1,'실전 데이터 사이언스 Part2. 데이터 전처리','https://www.inflearn.com/course/핵심-데이터전처리','https://cdn.inflearn.com/public/courses/326423/cover/f912ef33-4f16-45af-9ddf-489f9516121c','김화종'),(558,1,'스마트요원에게 배우는 구글 스프레드시트','https://www.inflearn.com/course/스마트요원-구글시트','https://cdn.inflearn.com/public/courses/326419/cover/200cbe0d-fb24-4e3b-af09-0c842bbe39dd','스마트요원'),(559,1,'캐글 설문조사로 데이터 분석 입문하기','https://www.inflearn.com/course/캐글-설문조사','https://cdn.inflearn.com/public/courses/326366/cover/972de19c-79c3-4f2f-a4d4-472f301127f9','박조은'),(560,1,'취준생이 반드시 읽어봐야 할 중고신입 전략','https://www.inflearn.com/course/중고신입-취업-전략','https://cdn.inflearn.com/public/courses/326362/cover/24612801-a34d-4ef4-bbb0-e8de449d912c','난나연구소'),(561,1,'모바일 게임 해킹(Unity편)','https://www.inflearn.com/course/모바일-게임-해킹-유니티','https://cdn.inflearn.com/public/courses/326337/cover/551d8a2c-2f75-4ab5-8e11-42cbbcac6955','김태환'),(562,1,'꼭 필요한 엑셀 5시간으로 끝내기','https://www.inflearn.com/course/엑셀-5시간-끝내기','https://cdn.inflearn.com/public/courses/326320/cover/76c28eb9-4e58-48ad-8f76-14c7a85de2ed','박쌤컴퓨터'),(563,1,'🏆Google 공인! 텐서플로(TensorFlow) 개발자 자격증 취득🏆','https://www.inflearn.com/course/텐서플로우-자격증','https://cdn.inflearn.com/public/courses/326301/cover/b155a782-523c-4ce9-97bb-4f589ecbf0b8','런어데이'),(564,1,'Svelte.js 입문 가이드','https://www.inflearn.com/course/스벨트-입문-가이드','https://cdn.inflearn.com/public/course-326295-cover/eaba30bd-b9ec-4277-b178-a418b5daf1a3','HEROPY'),(565,1,'얄팍한 GraphQL과 Apollo','https://www.inflearn.com/course/얄팍한-graphql-apollo','https://cdn.inflearn.com/public/courses/326283/cover/5433b780-7ec2-4acf-af58-b435e754fcbd','얄팍한 코딩사전'),(566,1,'Swift 언어로 만드는 고스톱 게임','https://www.inflearn.com/course/스위프트-고스톱게임','https://cdn.inflearn.com/public/course-326237-cover/97318858-4127-4574-a363-17285b8b2954','쎄뮤'),(567,1,'XD UI 디자인 + Clone Coding 인터렉티브 반응형웹 포트폴리오!','https://www.inflearn.com/course/xd-반응형웹-포트폴리오','https://cdn.inflearn.com/public/course-326182-cover/2ce0c161-9f8f-45f7-acca-071e373091e2','LIZ.B'),(568,1,'커피 한 잔으로 정복하는 LeNet','https://www.inflearn.com/course/데이터사이언스-딥러닝-lenet','https://cdn.inflearn.com/public/course-326168-cover/a98a3a47-f3fd-4cb5-bdad-1b2ca1639158','공대형아'),(569,1,'모바비로 3일 만에 배우는 영상 편집','https://www.inflearn.com/course/모바비-영상편집-기초','https://cdn.inflearn.com/public/course-326159-cover/adc6bd13-fcb1-4f66-ac38-78a5ccb0dbbf','이사마'),(570,1,'일잘스쿨 : 일을 잘하고 생산성을 높이는 법','https://www.inflearn.com/course/일잘스쿨-생산성-업무관리','https://cdn.inflearn.com/public/course-326156-cover/7c1cd0b5-9865-456c-9150-4a3096569c01','tiger'),(571,1,'커피 한 잔으로 입문하는 Convolutional Neural Network','https://www.inflearn.com/course/데이터사이언스-딥러닝-cnn','https://cdn.inflearn.com/public/course-326152-cover/b05c9bae-8e96-4c2b-b493-3132982125f9','공대형아'),(572,1,'찐~ 보안전문가 되기(정보보안의 현재와 미래)','https://www.inflearn.com/course/정보보안-커리어-입문','https://cdn.inflearn.com/public/course-326131-cover/eaf62b36-678d-4c3e-b97f-460a1e335745','Security Reader'),(573,1,'스타트업에서 성공하기 (스타트업CFO입문과정)','https://www.inflearn.com/course/스타트업-cfo-입문과정','https://cdn.inflearn.com/public/course-326099-cover/917ce346-43dc-48f6-98d1-2651be7731c3','한국CFO스쿨'),(574,1,'파이썬 텍스트 분석 입문 - 데이터 수집부터 분석까지','https://www.inflearn.com/course/파이썬-텍스트분석-입문','https://cdn.inflearn.com/public/course-326056-cover/43a063f8-921e-4901-9785-fe8c96d4ccea','My Incizor'),(575,1,'쉽고 빠르게 만드는 다양한 이미지 이펙트!','https://www.inflearn.com/course/자바스크립트-이미지-이펙트','https://cdn.inflearn.com/public/course-326047-cover/92ce2a08-7701-42de-af10-3851ec7a8a8b','깡코딩'),(576,1,'Java 디자인 패턴','https://www.inflearn.com/course/자바-디자인패턴','https://cdn.inflearn.com/public/course-326035-cover/cdf900e1-7e7a-413e-a411-e926e88a5590','오준석'),(577,1,'따라하며 배우는 MySQL on Docker','https://www.inflearn.com/course/mysql-docker','https://cdn.inflearn.com/public/course-326026-cover/0af284a0-905e-44e5-8026-06b9e2a4ecad','김영헌'),(578,1,'공대형아의 데이터 시각화를 위한 파이썬','https://www.inflearn.com/course/데이터시각화-파이썬','https://cdn.inflearn.com/public/course-326013-cover/579c7174-1785-4893-978d-c214f22121e5','공대형아'),(579,1,'TensorFlow 2.0으로 배우는 딥러닝 입문','https://www.inflearn.com/course/텐서플로-딥러닝-입문','https://cdn.inflearn.com/public/course-325935-cover/9119309e-237c-4b72-bbb1-39704ca82fb5','AISchool'),(580,1,'BBC 인터랙티브 페이지 \"코로나19가 바꿀 사무실의 미래\" 클론','https://www.inflearn.com/course/bbc-인터랙티브웹-클론','https://cdn.inflearn.com/public/course-325919-cover/5bfc242a-b3ac-403f-860e-614097e220d3','1분코딩'),(581,1,'Kevin의 알기 쉬운 RxJava 2부','https://www.inflearn.com/course/자바-리액티브프로그래밍-2','https://cdn.inflearn.com/public/course-325883-cover/2718b21a-2adc-4084-805a-06d7fbbe330f','Kevin'),(582,1,'파이썬 웹서비스API 실전 프로젝트 - 돈 버는 디지털마케팅','https://www.inflearn.com/course/파이썬-웹서비스-디지털마케팅','https://cdn.inflearn.com/public/course-325823-cover/1695c7e7-f5c0-451b-a83a-4271fa02ebe3','노마드크리에이터'),(583,1,'RPA와 Process Mining 입문과 연계','https://www.inflearn.com/course/rpa-프로세스마이닝','https://cdn.inflearn.com/public/course-325815-cover/a97480fa-ca20-4768-80b3-40867b11e814','ProScientist'),(584,1,'하루 1시간 블로그에 투자해서 100만원 만드는 방법','https://www.inflearn.com/course/블로그-포스팅-투잡','https://cdn.inflearn.com/public/course-325753-cover/43367ace-b2a5-4bec-aab4-37f4adb49bb6','쇼콜라떼'),(585,1,'[백문이불여일타] 데이터 분석을 위한 중급 SQL 문제풀이','https://www.inflearn.com/course/sql-중급-문제풀이','https://cdn.inflearn.com/public/course-325731-cover/5f2ba7d7-7a6c-4661-8646-fb3b165ccde4','데이터리안'),(586,1,'홍정모의 실리콘밸리 도전기','https://www.inflearn.com/course/홍정모-실리콘밸리-취업','https://cdn.inflearn.com/public/course-325722-cover/6e20c9bd-70de-41cc-9eda-d48e0df7058c','PP TREE'),(587,1,'예제로 살펴보는 PyQt Tutorial','https://www.inflearn.com/course/pyqt-gui','https://cdn.inflearn.com/public/course-325707-cover/f573c5a5-6c24-470b-9b72-c5b0b7afd357','제주코딩베이스캠프'),(588,1,'RPA로 자동화 천재되기 (UiPath 응용편)','https://www.inflearn.com/course/따라하며-배우는-rpa-uipath-응용','https://cdn.inflearn.com/public/course-325674-cover/c7c66f67-f7da-4600-ba02-cbdbdba53df6','코코아소프트'),(589,1,'파이썬 무료 강의 (활용편2) - GUI 프로그래밍 (4시간)','https://www.inflearn.com/course/나도코딩-파이썬-활용편-2','https://cdn.inflearn.com/public/course-325635-cover/cc976ebc-ac53-4e5b-8b79-3dbdf6b90fb4','나도코딩'),(590,1,'따라하면서 배우는 고박사의 유니티 기초','https://www.inflearn.com/course/고박사-유니티-기초','https://cdn.inflearn.com/public/course-325624-cover/7f4fa353-beb9-48aa-b533-7deda7e7a498','고박사'),(591,1,'유니티 프로그래머 현업자의 기본 스킬들','https://www.inflearn.com/course/유니티-게임개발-현업-스킬','https://cdn.inflearn.com/public/course-325581-cover/a33912f3-f8ba-4eac-b109-19c7754306b8','ttok14'),(592,1,'파이썬 무료 강의 (활용편1) - 추억의 오락실 게임 만들기 (3시간)','https://www.inflearn.com/course/나도코딩-파이썬-활용편-1','https://cdn.inflearn.com/public/courses/325470/course_cover/4c0be9b7-79b6-4ba4-8e32-cd773577d964/nadocoding-python-game-eng.png','나도코딩'),(593,1,'플러터(flutter)로 앱만들기 고고 (입문)','https://www.inflearn.com/course/플러터-앱개발-입문','https://cdn.inflearn.com/public/courses/325467/course_cover/a8fc4616-d466-4e26-8e41-bd2966ce462f/flutter-app-beginner-eng.png','개복치개발'),(594,1,'자바 머신러닝 weka(웨카) 중급','https://www.inflearn.com/course/자바-머신러닝-weka-중급','https://cdn.inflearn.com/public/courses/325465/course_cover/a81cc9f6-0441-4cc6-bdf9-d5803b0037e8/java-machinelearning-weka-2-eng.jpg','자바라머신러닝'),(595,1,'아무것도 모르고 시작하는 C#','https://www.inflearn.com/course/아무것도-모르고-시작하는-c샵','https://cdn.inflearn.com/public/course-325404-cover/a1c5435a-0668-4bb1-bf62-f74b481bc35f','박병욱'),(596,1,'웹디자인기능사필기기출문제풀이-디자인개론','https://www.inflearn.com/course/웹디자인기능사-필기기출문제풀이-디자인개론','https://cdn.inflearn.com/public/courses/325402/course_cover/375cd5ef-a188-4513-a752-20bd3f29621e/inflearncover_768_500_1.png','엔게디캠퍼스'),(597,1,'해커를 위한 iOS 앱 모의 해킹 전문 과정','https://www.inflearn.com/course/ios-모바일앱-모의해킹-입문','https://cdn.inflearn.com/public/courses/325392/course_cover/a4af3e8d-c9ad-4ebd-9104-5f52f8758542/boanproject-ios-eng.png','보안프로젝트'),(598,1,'PHP 7+ 프로그래밍: 객체지향','https://www.inflearn.com/course/php7-oop','https://cdn.inflearn.com/public/course-325345-cover/bde89c2e-858f-4f19-8650-f773dffbf00e','정상우'),(599,1,'배워서 바로 적용하는 실무SQL','https://www.inflearn.com/course/실무-sql','https://cdn.inflearn.com/public/course-325313-cover/7796da50-a045-4fe8-8660-3c4ab929b6b6','Joe'),(600,1,'그림으로 배우는 자바, 파트1: 입문!','https://www.inflearn.com/course/그림으로-배우는-자바-입문','https://cdn.inflearn.com/public/course-325268-cover/b41a4602-f036-42fc-90ff-648a8f7893b0','홍팍'),(601,1,'윤재성의 Google 공식 언어 Kotlin 프로그래밍 시작하기','https://www.inflearn.com/course/구글-공식-코틀린-시작하기','https://cdn.inflearn.com/public/courses/325216/course_cover/06329c3b-cb83-4979-8761-2b0ddefe3acf/softcampus-kotlin-start-eng-4.png','소프트캠퍼스'),(602,1,'애프터이펙트 마스터 시즌1 패키지(에피소드1,2,3,4통합)','https://www.inflearn.com/course/애프터이펙트-마스터-시즌1-패키지-통합','https://cdn.inflearn.com/public/courses/325200/course_cover/e55a068e-d2ca-4972-8211-ccf81a58d442/after%20effects%20master%20Package_E.png','디마스터 디마영'),(603,1,'[입문편] 쓱싹 쓱싹 그림을 그려요','https://www.inflearn.com/course/데일리드로잉-쓱싹쓱싹-그림을그려요','https://cdn.inflearn.com/public/courses/325162/course_cover/7171587f-39b0-4d57-9ae0-dd33faa45229/Poster.jpg','진'),(604,1,'밀린신문 PPT Vol.02','https://www.inflearn.com/course/밀린신문-PPT-Vol-02','https://cdn.inflearn.com/public/courses/325138/course_cover/41ba4f3e-dee5-434f-b0e2-52b6651ce16e/%E1%84%86%E1%85%B5%E1%86%AF%E1%84%85%E1%85%B5%E1%86%AB%20%E1%84%89%E1%85%B5%E1%86%AB%E1%84%86%E1%85%AE%E1%86%AB_vol.02_E%20.png','밀린신문'),(605,1,'30분 요약 강좌 시즌2 : Python 활용편','https://www.inflearn.com/course/제주코딩-웹개발-30분요약-시즌2','https://cdn.inflearn.com/public/courses/325099/course_cover/91b10fe0-13d8-48fd-962a-6757bfdde73f/%EC%9D%B8%ED%94%84%EB%9F%B0_%EC%86%8C%EA%B0%9C_30%EB%B6%84%EC%9A%94%EC%95%BD_%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B6%84%EC%84%9D_%EC%BB%A4%EB%B2%84%28%EC%88%98%EC%A0%95.jpg','제주코딩베이스캠프'),(606,1,'퍼스널 브랜딩을 위한 글쓰기 비법-무자본 무스펙이면 충분한! 나만의 콘텐츠 10분 안에 만들기!','https://www.inflearn.com/course/퍼스널브랜딩-글쓰기-나만의-콘텐츠-제작','https://cdn.inflearn.com/public/courses/325071/course_cover/826a1067-fd59-433e-a46a-29416c0a6bfb/glee-write.jpg','작가 글리쌤'),(607,1,'여행을 좋아하는 누구나 가능! 여행비용 버는 여행작가 되는 법','https://www.inflearn.com/course/여행비용-버는-여행작가-되는법','https://cdn.inflearn.com/public/courses/325066/course_cover/35817bd2-671f-44f1-ba58-0878bc67ca7a/da-travel.jpg','단아'),(608,1,'따라하며 배우는 노드, 리액트 시리즈 - 챗봇 사이트 만들기','https://www.inflearn.com/course/따라하며-배우는-노드-리액트-챗봇','https://cdn.inflearn.com/public/courses/325053/course_cover/b5fb69d7-2957-4023-82f1-76f3ff0b8860/nodeReactchatbot.png','John Ahn'),(609,1,'프리미어 프로 마스터(에피소드2) - 섬세하게 그러나 빠르게!','https://www.inflearn.com/course/프리미어프로-마스터-에피소드2','https://cdn.inflearn.com/public/courses/324984/course_cover/0ff9a051-5dfa-4d36-a035-d25626cdabfb/dmy-premirer2.jpg','디마스터 디마영'),(610,1,'[퍼펙트 프리젠테이션] 발표 준비와 연습 그리고 실전발표','https://www.inflearn.com/course/퍼펙트-프리젠테이션-발표-준비-연습-실전','https://cdn.inflearn.com/public/courses/324877/course_cover/58803d00-bafe-494f-ba7a-a9490dbc9a3c/kjs-pp2-0.jpg','김재성'),(611,1,'청와대 청원 데이터 시각화','https://www.inflearn.com/course/국민청원-데이터시각화','https://cdn.inflearn.com/public/courses/324867/course_cover/89840d20-2cd5-416b-a8a5-ccf53869c7e6/bluehouse-data-eng.png','개복치개발'),(612,1,'프리랜서와 유튜버를 위한 [기초 세금 가이드]','https://www.inflearn.com/course/프리랜서-유튜버-기초-세금가이드','https://cdn.inflearn.com/public/courses/324857/course_cover/784e8eb0-e3a4-48c2-8583-c2a93d28c703/djm-tax.jpg','듀자미 스튜디오'),(613,1,'생활코딩 - JavaScript Immutability','https://www.inflearn.com/course/javascript-immutability','https://cdn.inflearn.com/public/courses/324803/course_cover/3cbd8ce1-4bdc-4302-9438-7b53c72bb125/egoing-js-immutability.png','Egoing Lee'),(614,1,'생활코딩 - React class vs. function style coding','https://www.inflearn.com/course/react-class-function-생활코딩','https://cdn.inflearn.com/public/courses/324802/course_cover/f5b07372-e09d-496d-82fa-af23035dbc15/egoing-re-func.png','Egoing Lee'),(615,1,'[그림으로이해하는] 동기(sync) 비동기(async)의 개념에 대한 가장 직관적인 이해','https://www.inflearn.com/course/sync-async-개념-이해','https://cdn.inflearn.com/public/courses/324755/course_cover/ac23c8f7-6fc7-457f-874b-e2bff8ec0d50/infinf.png','앨런(Allen)'),(616,1,'[PyTorch] 쉽고 빠르게 배우는 딥러닝','https://www.inflearn.com/course/PyTorch-딥러닝','https://cdn.inflearn.com/public/courses/324742/course_cover/96781b94-7bae-47f8-ab6f-42821f26f042/coco-pytorch.png','코코'),(617,1,'R로 쉽게 배우는 강화학습','https://www.inflearn.com/course/R-강화학습-기초','https://cdn.inflearn.com/public/courses/324694/course_cover/c55e7530-acfc-486c-9bdb-c5a7b4129c5e/coco_rnd.png','코코'),(618,1,'우디의 포토샵 강좌','https://www.inflearn.com/course/우디의-포토샵-강좌','https://cdn.inflearn.com/public/course-324677-cover/4bec1644-022d-4af6-baf5-224457b9b929','롤스토리디자인연구소'),(619,1,'포토샵 기본기 하루 5분, 3주 만에 끝내기','https://www.inflearn.com/course/포토샵-기본기-3주완성','https://cdn.inflearn.com/public/courses/324640/course_cover/47c5058f-c1be-4c3b-9aeb-2fe69225cd3c/photoshop_thumbnail.jpg','디자인베이스'),(620,1,'나도 할 수 있다! SW강사!','https://www.inflearn.com/course/SW강사-강의','https://cdn.inflearn.com/public/courses/324632/course_cover/81fce675-0490-4bdd-837f-1f9cfa703bcf/%EC%9D%B8%ED%94%84%EB%9F%B0-%EC%8D%B8%EB%84%A4%EC%9D%BC-%EB%94%94%EC%9E%90%EC%9D%B8%28%EC%88%98%EC%A0%952%29.png','제주코딩베이스캠프'),(621,1,'스케치 뚝딱 끝내기! 입문자용 무료 강좌','https://www.inflearn.com/course/스케치-뚝딱-끝내기-입문자용','https://cdn.inflearn.com/public/courses/324621/course_cover/58c355dc-7c21-43c3-9825-0afa6479ee23/sketch_thumbnail.jpg','디자인베이스'),(622,1,'R로 하는 네트워크 분석','https://www.inflearn.com/course/R-네트워크-분석','https://cdn.inflearn.com/public/courses/324611/course_cover/07a42cfe-b74f-4284-943e-6cc44a9edb8c/coco_Network_Analysis.png','코코'),(623,1,'[백문이불여일타] 데이터 분석을 위한 고급 SQL','https://www.inflearn.com/course/데이터-분석-고급-sql','https://cdn.inflearn.com/public/courses/324605/course_cover/274a6332-60f2-4ef2-ba6d-644b40a48ec0/lian-sql3.png','데이터리안'),(624,1,'Flutter 인스타그램 클론 2.0','https://www.inflearn.com/course/flutter-인스타그램-클론','https://cdn.inflearn.com/public/courses/324598/course_cover/63663b57-afc0-4106-9c88-8092cc8c5ad4/flutter_insta_eng.png','오준석'),(625,1,'Azure 기초 (AZ-900)','https://www.inflearn.com/course/Azure-기초-AZ-900','https://cdn.inflearn.com/public/courses/324570/course_cover/0faaa338-0c55-4138-8eff-391c8726d6dd/cloudmate-azure.png','클라우드메이트'),(626,1,'[백문이불여일타] 데이터 분석을 위한 중급 SQL','https://www.inflearn.com/course/데이터-분석-중급-sql','https://cdn.inflearn.com/public/courses/324568/course_cover/0e6abec7-7192-4b3f-9611-decc54707ee9/lian-sql2.png','데이터리안'),(627,1,'[텐서플로2] 파이썬 딥러닝 완전정복 - GAN, BERT, RNN, CNN 최신기법','https://www.inflearn.com/course/텐서플로-파이썬딥러닝-GAN-BERT-RNN-CNN','https://cdn.inflearn.com/public/courses/324484/course_cover/f6f03229-d156-4a27-a0f2-ede2361c586f/sjh_Deep_Learning.png','노마드크리에이터'),(628,1,'IT인을 위한 ELK 통합로그시스템 구축과 활용','https://www.inflearn.com/course/ELK-통합로그시스템-IT보안','https://cdn.inflearn.com/public/courses/324436/course_cover/c7f1bf78-9a20-4726-ac80-6e69ddb5b1b3/boan_elk.png','보안프로젝트'),(629,1,'Django Mini project BEST 3','https://www.inflearn.com/course/Django-미니프로젝트강좌','https://cdn.inflearn.com/public/courses/324433/course_cover/cac00b72-7378-4737-b68a-06d8c6347d2e/django-%28%EC%88%98%EC%A0%95%29.jpg','제주코딩베이스캠프'),(630,1,'C# 프로그래밍 기초','https://www.inflearn.com/course/C-sharp-씨샵-기초','https://cdn.inflearn.com/public/courses/324413/course_cover/6812112a-96bb-4e54-a1ec-0bb121c01742/lgj_C.png','이교준'),(631,1,'직접 만드는 노션 템플릿 BEST 7선','https://www.inflearn.com/course/노션-템플릿-강의','https://cdn.inflearn.com/public/courses/324386/course_cover/26f8344c-ec04-4efc-ac73-2c8ad152286f/%EB%85%B8%EC%85%98-%EC%BB%A4%EB%B2%84%28%EC%88%98%EC%A0%95%29.png','제주코딩베이스캠프'),(632,1,'제주코딩베이스캠프 Code Festival: Python 100제','https://www.inflearn.com/course/파이썬-100제-제주코딩베이스캠프','https://cdn.inflearn.com/public/courses/324283/course_cover/08b14776-4d69-4e59-8b36-3e5580d5d591/%ED%8C%8C%EC%9D%B4%EC%8D%AC-100%EC%A0%9C%28%EC%88%98%EC%A0%95%29.png','제주코딩베이스캠프'),(633,1,'내 손으로 만드는 Django 2.x 인스타그램 클론 강의','https://www.inflearn.com/course/장고-인스타그램-클론','https://cdn.inflearn.com/public/course-324267-cover/b3c43608-6f3f-4951-bade-d0af7217c07c','제주코딩베이스캠프'),(634,1,'Klaytn 클레이튼 블록체인 어플리케이션 만들기 - 토큰','https://www.inflearn.com/course/클레이튼-블록체인-어플리케이션-ERC721','https://cdn.inflearn.com/public/courses/324215/course_cover/0bc4b03b-fea1-4be9-956c-4b6ec7293762/blockchain_thumanil_sian_1.png','SEJONG IT EDU'),(635,1,'정보올림피아드(중등)','https://www.inflearn.com/course/정보올림피아드-중등','https://cdn.inflearn.com/public/courses/324209/course_cover/5935ca89-77ea-4dca-bedd-9c8dac27bf93/%E1%84%80%E1%85%A1%E1%84%8B%E1%85%B3%E1%86%AF_%E1%84%8C%E1%85%A5%E1%86%BC%E1%84%87%E1%85%A9%E1%84%8B%E1%85%A9%E1%86%AF%E1%84%85%E1%85%B5%E1%86%B7%E1%84%91%E1%85%B5%E1%84%8B%E1%85%A1%E1%84%83%E1%85%B3.png','가을'),(636,1,'[텐서플로2] 파이썬 머신러닝 완전정복 - 마라톤 기록예측 프로젝트','https://www.inflearn.com/course/파이썬-머신러닝-프로젝트','https://cdn.inflearn.com/public/courses/324207/course_cover/1a79c7dc-1624-4d3a-95ff-79ba1e9c4025/python_machine_learning.png','노마드크리에이터'),(637,1,'워드프레스로 개발하기 Part 1 (wordpress part)','https://www.inflearn.com/course/워드프레스-쇼핑몰-파트1','https://cdn.inflearn.com/public/courses/324202/course_cover/9117ebe1-5018-43a1-9cce-f91b491907f7/%E1%84%8B%E1%85%A1%E1%86%AB%E1%84%92%E1%85%A7%E1%86%BC%E1%84%8B%E1%85%AE_%E1%84%8B%E1%85%AF%E1%84%83%E1%85%B3%E1%84%91%E1%85%B3%E1%84%85%E1%85%A6%E1%84%89%E1%85%B3.png','안형우'),(638,1,'RDBMS Modeling','https://www.inflearn.com/course/관계형데이터베이스-RDBMS','https://cdn.inflearn.com/public/courses/324188/course_cover/0c94b9c6-45f8-48b8-bd12-ac261d6f4cd2/lgj_RDBMS.png','이교준'),(639,1,'노션(notion) 완벽 활용법','https://www.inflearn.com/course/노션-notion-활용','https://cdn.inflearn.com/public/courses/324181/course_cover/4f20d4ce-80a2-4334-a85b-429a55ce4bad/boan_notion.png','보안프로젝트'),(640,1,'Database - SQL','https://www.inflearn.com/course/데이터베이스-SQL','https://cdn.inflearn.com/public/courses/324178/course_cover/ba6b2518-fcc4-4726-a167-234b7198e85a/lgj_SQL.png','이교준'),(641,1,'스프링 시큐리티','https://www.inflearn.com/course/백기선-스프링-시큐리티','https://cdn.inflearn.com/public/courses/324176/course_cover/12334f28-c29e-4eff-8460-7cae5bf82304/whiteship_security.jpg','백기선'),(642,1,'누구나 할 수 있는 안드로이드 앱 개발 - 1 (Kotlin)','https://www.inflearn.com/course/코틀린-안드로이드-앱개발','https://cdn.inflearn.com/public/courses/324147/course_cover/a1e2edd3-3322-4832-a664-988de66f3a9c/yhc_kotlin.png','개복치개발'),(643,1,'경영컨설팅 전문가 양성과정','https://www.inflearn.com/course/consulting-컨설팅','https://cdn.inflearn.com/public/courses/324081/course_cover/fe3d6c00-1fa3-4be7-83aa-a979d0446c61/chris_consulting.png','chris kwon'),(644,1,'R로 하는 웹 크롤링 - 입문편','https://www.inflearn.com/course/R-crawling','https://cdn.inflearn.com/public/courses/324066/course_cover/05ce7d49-1c1e-4979-b80c-cb3354f0a8e7/R_basic.png','코코'),(645,1,'벡터 미적분학 시리즈2 - 미분 심화: 최적화 이론의 기초와 벡터 함수','https://www.inflearn.com/course/벡터미적분학기초2','https://cdn.inflearn.com/public/courses/324052/course_cover/19c38dfa-8b04-4e36-8b42-b54f3e2108f7/jbh_vector2.png','조범희 (타블렛깎는노인)'),(646,1,'Flutter 중급 - Http통신, 상태관리','https://www.inflearn.com/course/flutter_중급','https://cdn.inflearn.com/public/courses/324050/course_cover/fd43129d-b09b-453f-bad5-8dfc95741506/flutter2.png','오준석'),(647,1,'취미로 해킹#3(WebGoat)','https://www.inflearn.com/course/webgoat','https://cdn.inflearn.com/public/courses/324035/course_cover/13f685cc-787b-4da8-a840-25debc8444f8/%E1%84%8E%E1%85%B1%E1%84%86%E1%85%B5%E1%84%85%E1%85%A9%E1%84%92%E1%85%A2%E1%84%8F%E1%85%B5%E1%86%BC3.png','장용하'),(648,1,'iOS12 앱 개발 퍼펙트 가이드','https://www.inflearn.com/course/ios','https://cdn.inflearn.com/wp-content/uploads/ljh_iOS12_9.jpg','iOS Developer'),(649,1,'문제로 배우는 C언어','https://www.inflearn.com/course/c언어-문법','https://cdn.inflearn.com/wp-content/uploads/ktw_new2.jpg','김태원'),(650,1,'Node.js로 웹 크롤링하기','https://www.inflearn.com/course/크롤링','https://cdn.inflearn.com/wp-content/uploads/jhy_crawler.jpg','조현영'),(651,1,'윤재성의 Java 기반 Android 9.0(pie) App 개발 심화 2단계','https://www.inflearn.com/course/android-pie-9-0-2','https://cdn.inflearn.com/wp-content/uploads/sc_java2-4.jpg','소프트캠퍼스'),(652,1,'윤재성의 Java 기반 Android 9.0(pie) App 개발 기본 1단계','https://www.inflearn.com/course/android-9-pie-1','https://cdn.inflearn.com/wp-content/uploads/sc_java-6.jpg','소프트캠퍼스'),(653,1,'요즘 누가 유료로 웹서비스 구축 하나, Firebase의 모든것','https://www.inflearn.com/course/firebase-server','https://cdn.inflearn.com/wp-content/uploads/firebase-1.png','David'),(654,1,'스프링 프레임워크 입문','https://www.inflearn.com/course/spring','https://cdn.inflearn.com/wp-content/uploads/springboot_1-1-2.jpg','백기선'),(655,1,'입문에서 실무까지: DevOps의 이해 및 Docker Hands-on','https://www.inflearn.com/course/devops-docker-hands-on','https://cdn.inflearn.com/public/course-191597-cover/0b5d090d-72b1-434f-b757-b1c8ab625e4f','Ralf Yang'),(656,1,'Node.js - Express','https://www.inflearn.com/course/node-js-express','https://cdn.inflearn.com/wp-content/uploads/web2_express-2.jpg','Egoing Lee'),(657,1,'WEB2 Node.js-MySQL','https://www.inflearn.com/course/web2-node-js-mysql','https://cdn.inflearn.com/wp-content/uploads/web2_MySQL.jpg','Egoing Lee'),(658,1,'스프링 부트 개념과 활용','https://www.inflearn.com/course/스프링부트','https://cdn.inflearn.com/wp-content/uploads/springboot-1-2-1.jpg','백기선'),(659,1,'퍼블리셔 취업을 위해 제대로 배워보는 html과 css, 그리고 웹표준','https://www.inflearn.com/course/html-css-webazit','https://cdn.inflearn.com/wp-content/uploads/web_pbl.jpg','Dongho Lee'),(660,1,'누구든지 하는 리액트: 초심자를 위한 react 핵심 강좌','https://www.inflearn.com/course/react-velopert','https://cdn.inflearn.com/wp-content/uploads/react_velopert2.png','velopert(김 민준)'),(661,1,'화이트해커가 되기 위한 모의해킹 완전 정복','https://www.inflearn.com/course/모의해킹-완전분석','https://cdn.inflearn.com/wp-content/uploads/Penetration_Testing.jpg','시큐아카데미'),(662,1,'쉽고 자연스럽게 배워보는 Javascript 입문 - 코드스쿼드 마스터즈 코스 레벨1','https://www.inflearn.com/course/javascript-자바스크립트-codesquad-masters_lv1','https://cdn.inflearn.com/wp-content/uploads/jsplay.jpg','호눅스'),(663,1,'3DS MAX 입문강좌 (입문부터 자동차 예제까지)','https://www.inflearn.com/course/3ds-max-쉽게-배우는-3ds-맥스-입문','https://cdn.inflearn.com/wp-content/uploads/KakaoTalk_20170113_110014310.jpg','목마하임(MokmaHeim)'),(664,1,'씨리얼 토익 - 시험장에서 100% 통하는 900점 RC 공략','https://www.inflearn.com/course/씨리얼-토익-rc-900','https://cdn.inflearn.com/public/courses/326524/cover/6a9a0733-3383-4114-905e-92b92f0fcff2','다름에듀'),(665,1,'씨리얼 토익 - 시험장에서 100% 통하는 900점 LC 공략','https://www.inflearn.com/course/씨리얼-토익-lc-900','https://cdn.inflearn.com/public/courses/326509/cover/04122215-ddbf-4938-9b55-4c5d68278adb','다름에듀'),(666,1,'씨리얼 토익 - 시험장에서 100% 통하는 800점 RC 공략','https://www.inflearn.com/course/씨리얼-토익-rc-800','https://cdn.inflearn.com/public/courses/326508/cover/29c1091b-1839-4b72-b44c-03a51f6d993d','다름에듀'),(667,1,'씨리얼 토익 - 시험장에서 100% 통하는 800점 LC 공략','https://www.inflearn.com/course/씨리얼-토익-lc-800','https://cdn.inflearn.com/public/courses/326497/cover/943eae04-f117-4258-a2aa-2a7c6a3d7f93','다름에듀'),(668,1,'(전자책) 응교수보다 쉬운 인공지능 입문서, 이지딥 PDF','https://www.inflearn.com/course/인공지능-입문서','https://cdn.inflearn.com/public/courses/326475/cover/d0aeb4cb-bbba-4773-8467-dbe3f0ce3a7f','이지딥'),(669,1,'비전공자를 위한 개발자 취업 올인원 가이드 [취업편]','https://www.inflearn.com/course/개발자-취업-취업편','https://cdn.inflearn.com/public/courses/326469/cover/e2cf0ffa-536d-4072-9eb6-5373b45bdfb6','한정수'),(670,1,'애프터이펙트 시즌2 에피소드3 모션을 지배하라!','https://www.inflearn.com/course/애프터이펙트-모션그래픽','https://cdn.inflearn.com/public/courses/326426/cover/2508ddaf-11fd-494f-98f9-fc510d7a74ed','디마스터 디마영'),(671,1,'딥러닝을 위한 파이썬 레벨1','https://www.inflearn.com/course/딥러닝-파이썬-레벨1','https://cdn.inflearn.com/public/courses/326414/cover/4a17a78d-7544-49be-8ce4-ed668120db42','공대형아'),(672,1,'자바 기본을 위한 강의 2부','https://www.inflearn.com/course/자바-프로그래밍-기본2','https://cdn.inflearn.com/public/courses/326372/cover/195e3eae-da1d-41fa-8638-c449d35f5f30','JeongTaeHyun'),(673,1,'Quasar로 만드는 구글 뉴스','https://www.inflearn.com/course/quasar-구글뉴스','https://cdn.inflearn.com/public/courses/326356/cover/2cab70a4-f735-4185-b826-1cf2dc948390','진슈'),(674,1,'따라하며 익히는 크롤링 마스터 with데이터공방','https://www.inflearn.com/course/크롤링-마스터-데이터공방','https://cdn.inflearn.com/public/courses/326350/cover/464f81cf-5aa8-40ea-8731-0c1f8948681c','데이터공방'),(675,1,'운영체제 공룡책 강의','https://www.inflearn.com/course/운영체제-공룡책-전공강의','https://cdn.inflearn.com/public/courses/326346/cover/5eb2b6ed-012c-4faf-b7b0-65f510bce291','주니온'),(676,1,'Swift 언어로 배우는 iOS 벽돌깨기 게임','https://www.inflearn.com/course/스위프트-벽돌깨기','https://cdn.inflearn.com/public/courses/326339/cover/1053c935-8a7c-47fb-b4c6-90a8ad0b3990','쎄뮤'),(677,1,'쉽게 배우는 adobe XD 기초부터 실무까지 완벽 마스터','https://www.inflearn.com/course/adobe-xd-기초-실무','https://cdn.inflearn.com/public/courses/326331/cover/585a98f0-5d21-4bf3-abe7-0dddb808c560','LIZ.B'),(678,1,'풀스택을 위한 탄탄한 프런트엔드 부트캠프 (HTML, CSS, 바닐라 자바스크립트 + ES6) [풀스택 Part2]','https://www.inflearn.com/course/프런트엔드-풀스택-2','https://cdn.inflearn.com/public/course-326306-cover/4ea213de-f786-4af1-a9d0-b8932263885a','잔재미코딩'),(679,1,'코딩테스트 전 꼭 알아야 할 개념과 문제(with 자바)','https://www.inflearn.com/course/코딩테스트-자바-개념','https://cdn.inflearn.com/public/courses/326285/cover/8740c9fa-0ee0-42c2-9179-b0601b0e0c1c','푸샵맨 코딩스터디'),(680,1,'유니티와 C#으로 배우는 카타나제로스타일 게임만들기 (기본편)','https://www.inflearn.com/course/유니티-카타나제로','https://cdn.inflearn.com/public/courses/326221/cover/9c6fa4f9-6222-4439-9417-6c944da99cb2','코사트'),(681,1,'시스템엔지니어가 알려주는 리눅스 기초편 Bash Shell Script','https://www.inflearn.com/course/리눅스-bash-shellscript','https://cdn.inflearn.com/public/course-326220-cover/99e3f7d4-cb53-415b-91a9-91f323171803','픗픗 아카데미'),(682,1,'일곱 살 애기 중국어','https://www.inflearn.com/course/중국어-말하기-기본','https://cdn.inflearn.com/public/course-326170-cover/1f16c07c-526a-4281-911a-6604d7544fec','하루배움 중국어'),(683,1,'Microsoft 365 관리자 기본 교육 (완전 초보도 OK, 누구나 할 수 있다!!)','https://www.inflearn.com/course/microsoft365-관리자','https://cdn.inflearn.com/public/course-326129-cover/cc5c66da-3f4a-485d-bb3e-1d72f6652c4c','오마스'),(684,1,'딥러닝 웹서비스 프로젝트 1 - 기본편. Object Detect 불량품 판별','https://www.inflearn.com/course/딥러닝-웹서비스-프로젝트-1','https://cdn.inflearn.com/public/course-326119-cover/7328cf8e-6778-4db6-a680-8afced69b99e','노마드크리에이터'),(685,1,'웹툰 만들기(기초편)','https://www.inflearn.com/course/웹툰-클립스튜디오-2','https://cdn.inflearn.com/public/course-326114-cover/aece1917-1a3e-437b-9c15-020b90d658b7','안감독'),(686,1,'[베스트셀러 저자 직강] 2021 디지털 마케팅과 페이스북 / 인스타그램 광고','https://www.inflearn.com/course/디지털마케팅-페이스북-인스타그램','https://cdn.inflearn.com/public/course-326086-cover/017395e2-529b-440b-bb38-65f76490ff1f','Gray Minkyu Lee'),(687,1,'문과생도, 비전공자도, 누구나 배울 수 있는 파이썬(Python)!','https://www.inflearn.com/course/생초보-입문-파이썬','https://cdn.inflearn.com/public/course-326085-cover/cda39da9-186f-4aec-a3e7-b99b7d407821','DeepingSauce'),(688,1,'Kotlin으로 개발하는 Spring Boot Web MVC','https://www.inflearn.com/course/스프링부트-코틀린','https://cdn.inflearn.com/public/course-326037-cover/510e0302-40f3-4373-9545-f4d92c264329','Steve (예상국)'),(689,1,'Microsoft Hyper-V 가상화','https://www.inflearn.com/course/서버-데스크탑-가상화','https://cdn.inflearn.com/public/course-326032-cover/ac3fc28b-724c-4490-b38d-4eccbfb6c5a5','코드바나나'),(690,1,'Svelte 실전 강의 - 스도쿠 만들기','https://www.inflearn.com/course/스벨트-실전-스도쿠실습','https://cdn.inflearn.com/public/course-326010-cover/693ab4d4-6030-490b-a3c5-ae35de0dcfa2','이효범(Beomy)'),(691,1,'실전! 웹사이트제작! Step by Step! (\'돕다\' 사이트제작_Application Course)','https://www.inflearn.com/course/웹사이트제작-인터랙티브웹-돕다','https://cdn.inflearn.com/public/course-325996-cover/e56e3ba7-74be-4a1b-b7cf-0006e8e651ed','J.영'),(692,1,'자바 기본을 위한 강의 1부','https://www.inflearn.com/course/자바-프로그래밍-기본','https://cdn.inflearn.com/public/courses/325988/cover/a5f769fe-32e4-4bfd-96e0-8a52e8d734e1','JeongTaeHyun'),(693,1,'우디의 프리미어 프로 강좌','https://www.inflearn.com/course/프리미어프로-woody','https://cdn.inflearn.com/public/course-325983-cover/ecedf971-03fa-453d-bb08-054b702da433','롤스토리디자인연구소'),(694,1,'쉽게 배우고, 포트폴리오로 만드는 반응형 웹! #설화수','https://www.inflearn.com/course/반응형웹-포트폴리오','https://cdn.inflearn.com/public/course-325975-cover/ae770b58-4c9d-4bae-80a1-a8516b9fe505','LIZ.B'),(695,1,'김일한의 파이썬 기반 판다스(Pandas)를 활용한 데이터 분석','https://www.inflearn.com/course/소프트캠퍼스-판다스-데이터분석','https://cdn.inflearn.com/public/course-325960-cover/764acbe7-a8c6-4ae2-b4fa-3f8d7eef55c6','소프트캠퍼스'),(696,1,'실전! 웹사이트제작! Step by Step! (\'돕다\' 사이트제작_Basic Course)','https://www.inflearn.com/course/웹사이트제작-레이아웃-돕다','https://cdn.inflearn.com/public/course-325957-cover/81940263-dd92-4033-9488-d64012c83a20','J.영'),(697,1,'인공지능 기초수학','https://www.inflearn.com/course/인공지능-기초수학','https://cdn.inflearn.com/public/course-325944-cover/4ce08384-791e-4942-9982-1a5b4c2a2f09','제이미'),(698,1,'리눅스 쉘 스크립트 마스터','https://www.inflearn.com/course/리눅스-쉘-스크립트','https://cdn.inflearn.com/public/course-325918-cover/f641b64b-1d8d-41f7-a159-10579aac950b','홍영기'),(699,1,'Project 2013을 활용한 프로젝트 관리 실무','https://www.inflearn.com/course/프로젝트-관리-실무-2013','https://cdn.inflearn.com/public/course-325913-cover/5b00862e-8ec3-4be8-9a77-6300cda5e672','오피스튜터'),(700,1,'웹디자인기능사 실기 문제풀이 A-1','https://www.inflearn.com/course/웹디자인기능사-실기-a1','https://cdn.inflearn.com/public/course-325910-cover/83522995-6a16-41fd-afb3-d4a5797ec675','Dongho Lee'),(701,1,'쉽고 빠르게 익히는 Visio 2016','https://www.inflearn.com/course/오피스튜터-비지오-2016','https://cdn.inflearn.com/public/course-325901-cover/26e61255-e0e4-4972-bafe-cbf608d122e3','오피스튜터'),(702,1,'Outlook과 OneNote로 스마트한 업무 시스템 만들기','https://www.inflearn.com/course/스마트워크-아웃룩-원노트','https://cdn.inflearn.com/public/course-325900-cover/ed2650bb-2685-4bbe-9e33-8b9addaa9ab6','오피스튜터'),(703,1,'쉽고 빠르게 익히는 OneNote 2013','https://www.inflearn.com/course/오피스튜터-원노트-2013','https://cdn.inflearn.com/public/course-325899-cover/1392f3a8-8ca8-4b52-bc90-5c614b6b882b','오피스튜터'),(704,1,'Word 2013에서 자주 발생하는 문제 해결 및 유용한 기능 알아보기','https://www.inflearn.com/course/워드-2013-문제해결-팁','https://cdn.inflearn.com/public/course-325869-cover/42aeaf05-2a7c-40cc-a62e-d2a1e81202d3','오피스튜터'),(705,1,'PowerPoint 2013을 활용한 차트 및 인포그래픽 디자인 기법','https://www.inflearn.com/course/파워포인트-2013-차트-인포그래픽','https://cdn.inflearn.com/public/course-325865-cover/66b4d1f3-41c3-4591-926f-c0ba53629e9f','오피스튜터'),(706,1,'리액트로 나만의 블로그 만들기(MERN Stack)','https://www.inflearn.com/course/리액트-블로그-풀스택','https://cdn.inflearn.com/public/course-325848-cover/eb1bbb3f-adec-4b2f-a295-c0799dae4b48','싸플'),(707,1,'PowerPoint 2013 프레젠테이션 슬라이드 디자인하기','https://www.inflearn.com/course/파워포인트-2013-디자인','https://cdn.inflearn.com/public/course-325847-cover/096ccbc3-d7d9-46bc-a64d-39fa0163874e','오피스튜터'),(708,1,'가볍게 따라하는 Excel 2013 데이터 조정 및 가공','https://www.inflearn.com/course/엑셀-2013-데이터조정-가공','https://cdn.inflearn.com/public/course-325838-cover/bca277be-d654-4d06-8fce-d87f6167a356','오피스튜터'),(709,1,'가볍게 따라하는 Excel 2016 데이터 조정 및 가공','https://www.inflearn.com/course/엑셀-2016-데이터조정-가공','https://cdn.inflearn.com/public/course-325837-cover/b5d6ba55-4f5f-4215-a1c0-14532618217d','오피스튜터'),(710,1,'플러터(Flutter) 앱 개발 입문부터 프로젝트 완성까지','https://www.inflearn.com/course/플러터-모바일앱-입문','https://cdn.inflearn.com/public/course-325829-cover/dbf21271-7ce3-4e26-880c-22cd4d8c226b','보안프로젝트'),(711,1,'Excel 2013 함수와 양식을 활용한 차트 작성','https://www.inflearn.com/course/엑셀-2013-차트','https://cdn.inflearn.com/public/course-325816-cover/de9bef20-791d-483e-b18e-c30c60d9dfb6','오피스튜터'),(712,1,'쉽고 빠르게 익히는 Excel 2013','https://www.inflearn.com/course/오피스튜터-엑셀-2013','https://cdn.inflearn.com/public/course-325812-cover/04f289ca-b5f9-4a37-89fa-493e9156c5a5','오피스튜터'),(713,1,'쉽고 빠르게 익히는 Excel 파워 피벗 & 데이터 모델링','https://www.inflearn.com/course/엑셀-파워피벗-데이터모델링','https://cdn.inflearn.com/public/course-325741-cover/bec55708-732a-478c-9420-5c4fb948f17d','오피스튜터'),(714,1,'실전! 웹사이트제작! Step by Step! (뮤자인_반응형웹)','https://www.inflearn.com/course/웹사이트제작-뮤자인-반응형웹','https://cdn.inflearn.com/public/course-325724-cover/00f98bf8-872f-4c41-8326-83065dacdb87','J.영'),(715,1,'그림으로 배우는 HTML/CSS, 입문!','https://www.inflearn.com/course/그림으로-배우는-html-css','https://cdn.inflearn.com/public/course-325697-cover/9970f262-3eee-46dc-871d-310f21799ac9','홍팍'),(716,1,'쉽고 빠르게 익히는 Power BI (기본편)','https://www.inflearn.com/course/powerbi-데이터분석-시각화-기본','https://cdn.inflearn.com/public/course-325680-cover/20d92f8e-9221-4966-b358-6bfeb13d2d70','오피스튜터'),(717,1,'IT 대기업에 다니고 느낀 7가지','https://www.inflearn.com/course/it-대기업-채용-면접','https://cdn.inflearn.com/public/course-325675-cover/b531c7f8-c062-4ae1-942a-1356db1ec7d2','Judy Kim'),(718,1,'MS 아웃룩 사용법 (데스크톱/웹/모바일 버전) - 화면 소개, 환경 설정, 유용한 기능까지!','https://www.inflearn.com/course/마이크로소프트-아웃룩-사용법','https://cdn.inflearn.com/public/course-325670-cover/7467c96e-ff68-4e74-b444-b24420c1a9eb','오마스'),(719,1,'초보자를 위한 R프로그래밍 핵심 교재','https://www.inflearn.com/course/초보자-r프로그래밍-핵심','https://cdn.inflearn.com/public/course-325629-cover/ff0c26cf-ac21-45a1-87db-e4e10db3eb22','코코'),(720,1,'비전공자를 위한 가장 쉬운 데이터분석 입문','https://www.inflearn.com/course/비전공자-데이터분석-입문-파이썬','https://cdn.inflearn.com/public/course-325583-cover/274c499d-5f32-4428-97fe-60d68d0fe170','런어데이'),(721,1,'채널 개설부터 기획, 편집까지! 유튜브 스타터를 위한 입문강의','https://www.inflearn.com/course/유튜브-스타터-입문','https://cdn.inflearn.com/public/course-325541-cover/b30dc95f-978a-4b25-bfc3-6a482f7e5557','나무엄마'),(722,1,'Javascript ES6+ 제대로 알아보기 - 보너스','https://www.inflearn.com/course/자바스크립트-es6-보너스','https://cdn.inflearn.com/public/course-325539-cover/95816d5d-8bec-4684-8318-92fdeac2813e','정재남'),(723,1,'워드프레스 기초부터 쇼핑몰까지','https://www.inflearn.com/course/워드프레스-쇼핑몰제작','https://cdn.inflearn.com/public/courses/325443/cover/f5501b11-e050-4db3-b3da-5cc2bd63b18c','파워러닝'),(724,1,'밀린신문 PPT Vol.03 - 온라인 강의콘텐츠 만들기 편','https://www.inflearn.com/course/밀린신문-PPT-Vol03','https://cdn.inflearn.com/public/courses/325401/course_cover/f2d64747-5d1f-432c-bdba-6ff0ac134c92/밀린 신문_vol.03_E .png','밀린신문'),(725,1,'애프터이펙트 시즌2 에피소드2 텍스트 애니메이션 마스터','https://www.inflearn.com/course/애프터이펙트-에피소드2-텍스트애니메이션','https://cdn.inflearn.com/public/courses/325398/course_cover/33c1f6b6-a831-4327-be42-bfa0050f595f/dmy-ae2-2.jpg','디마스터 디마영'),(726,1,'생애 첫 SQL With 제코베','https://www.inflearn.com/course/sql-기초-제주코딩베이스캠프','https://cdn.inflearn.com/public/course-325341-cover/1f4c7788-510d-4a81-b019-08a8e5899f70','제주코딩베이스캠프'),(727,1,'JSP WEB MVC Model2 Programming(중급 과정)','https://www.inflearn.com/course/jsp-웹개발-mvc-model2-중급','https://cdn.inflearn.com/public/courses/325299/course_cover/52cdc1f9-de30-43e1-8b25-cfe870075362/softcampus-jsp-mvc-model2-eng.png','소프트캠퍼스'),(728,1,'JSP 웹 쇼핑몰 프로그래밍 기본 과정(JSP WEB Programming)','https://www.inflearn.com/course/jsp-웹개발-쇼핑몰-프로그래밍','https://cdn.inflearn.com/public/courses/325294/course_cover/50eae96a-4d84-4052-baa5-b1bb8bd0ebe5/softcampus-jsp-shopping-mall-eng.png','소프트캠퍼스'),(729,1,'[OpenCV] 파이썬 딥러닝 영상처리 프로젝트 2 - 불량사과를 찾아라!','https://www.inflearn.com/course/딥러닝-파이썬-영상처리-불량사과','https://cdn.inflearn.com/public/courses/325290/course_cover/0f6dc5fe-e6e6-414a-af6d-10f589e50788/openCV-dnn2-rotten-apple-eng.jpg','노마드크리에이터'),(730,1,'처음하는 코딩 - 러플 (중등교육 - Python)','https://www.inflearn.com/course/러플-중등교육-파이썬','https://cdn.inflearn.com/public/courses/325243/course_cover/f3dbb014-8b88-4705-9591-2f109bcbb14e/%EB%9F%AC%ED%94%8C.jpg','제주코딩베이스캠프'),(731,1,'단 2주간 키운 블로그로 월 80만원 용돈 벌기','https://www.inflearn.com/course/2주-블로그-키워서-월80만원-용돈벌기','https://cdn.inflearn.com/public/courses/325215/course_cover/e77a9383-5a19-426a-9992-99ec0307c16f/자생_썸네일_fix.jpg','방구석투잡러 조야'),(732,1,'취미로 시작하는 중국어 회화 [입문]','https://www.inflearn.com/course/취미-시작-중국어-회화','https://cdn.inflearn.com/public/courses/325184/course_cover/2363daf5-18ed-437e-b1af-8e32e0147364/hc-china.jpg','홍차는홍차'),(733,1,'[R로 하는] 머신러닝을 위한 통계학 기초','https://www.inflearn.com/course/머신러닝-통계학-기초-r','https://cdn.inflearn.com/public/courses/325155/course_cover/d8120723-26f7-4fcc-a25c-a99eef4ea0f6/machine-learning-statistics-r-eng.png','코코'),(734,1,'밀린신문 PPT Vol.01','https://www.inflearn.com/course/밀린신문-PPT-Vol-01','https://cdn.inflearn.com/public/courses/325136/course_cover/ef77b8b8-77d1-4188-a11c-26ad610781e3/%E1%84%86%E1%85%B5%E1%86%AF%E1%84%85%E1%85%B5%E1%86%AB%20%E1%84%89%E1%85%B5%E1%86%AB%E1%84%86%E1%85%AE%E1%86%AB_vol.01_E.png','밀린신문'),(735,1,'오디오북, 팟캐스트, 유튜브 제작법 - 골드웨이브*오다시티','https://www.inflearn.com/course/골드웨이브-오다시티-오디오북-팟캐스트-유튜브-제작법','https://cdn.inflearn.com/public/courses/325055/course_cover/cf5ba745-b6b0-4b41-b04f-0a6ccfe2e143/phhg-goldwave.jpg','햇피 in 표현하다'),(736,1,'초보자도 간단히 단숨에 배우는 파이썬 프로그래밍','https://www.inflearn.com/course/초간단-파이썬','https://cdn.inflearn.com/public/courses/325019/course_cover/3374ab15-66b1-4fbd-9861-4c519560aab8/cis-python-2.png','파이썬멘토 조인석'),(737,1,'Flutter + Firebase로 넷플릭스 UI 클론 코딩하기 [무작정 플러터]','https://www.inflearn.com/course/flutter-netflix-clone-app','https://cdn.inflearn.com/public/courses/324976/course_cover/1355e898-fc20-4579-a88f-82340b849595/netflix-flutter-eng.png','권태뽕'),(738,1,'[R] KOSPI/KOSDAQ 전 종목 데이터 수집 및 관리','https://www.inflearn.com/course/r-코스피-코스닥-데이터-수집','https://cdn.inflearn.com/public/courses/324972/course_cover/36468a43-de3b-461b-af55-f3c7b0e51637/kospi-kosdaq-data-eng-1.png','코코'),(739,1,'프리미어 프로 마스터(에피소드1) - 이것이 프리미어프로다!','https://www.inflearn.com/course/프리미어프로마스터-디마영-에피소드1','https://cdn.inflearn.com/public/courses/324956/course_cover/65bc4a4c-5758-4496-97bc-9d8e01c53e47/dmy-premirer1.jpg','디마스터 디마영'),(740,1,'김대리님 이게 바로 업무 자동화입니다 (엑셀 + 파이썬)','https://www.inflearn.com/course/김대리님-업무-자동화-엑셀-파이썬','https://cdn.inflearn.com/public/courses/324955/course_cover/b5176dfa-9216-4203-b4e1-76f964b90030/work-automation-excel-python-eng.png','개복치개발'),(741,1,'웹 애플리케이션 개발을 위한 IntelliJ IDEA 설정','https://www.inflearn.com/course/인텔리제이-웹앱','https://cdn.inflearn.com/public/courses/324954/course_cover/53636a00-6da7-4661-b3ee-52f2359cd1f3/web-app-intellij-eng-2.png','Dowon Lee'),(742,1,'[서브 머니 창출] 스마트 스토어+블로그 마케팅 시작하기','https://www.inflearn.com/course/스마트스토어-블로그마케팅-두번째월급','https://cdn.inflearn.com/public/courses/324940/course_cover/5cb60359-0462-4340-8a48-d95478676ceb/lhr-smartstore.jpg','두번째월급'),(743,1,'Web2 - OAuth 2.0','https://www.inflearn.com/course/web2-oauth2','https://cdn.inflearn.com/public/courses/324898/course_cover/00fd8930-0d50-47bf-bd37-c77f58ecb5df/egoing-js-oauth.jpg','Egoing Lee'),(744,1,'[통합 강의10%할인] 퍼펙트 프리젠테이션 특강','https://www.inflearn.com/course/프레젠테이션-통합-특강','https://cdn.inflearn.com/public/courses/324894/course_cover/9c9e1ae9-9b08-4d44-8cc9-94f2810a52fe/kjs-pp3-0.jpg','김재성'),(745,1,'[평생소장!] [퍼펙트 프리젠테이션] 기획 슬라이드 디자인','https://www.inflearn.com/course/퍼펙트-프리젠테이션-기획-슬라이드-디자인-평생','https://cdn.inflearn.com/public/courses/324893/course_cover/4a50515a-14fc-4dd0-868f-eb0c206e812b/kjs-pp.jpg','김재성'),(746,1,'Python을 이용한 주가 백테스팅 시스템 구축하기','https://www.inflearn.com/course/python-주가-백테스팅','https://cdn.inflearn.com/public/courses/324883/course_cover/efe64328-20c9-4af8-9b65-c40e456d9f12/python-backtesting-eng.png','choi2505'),(747,1,'나도 만들어본다 AI 앱 (tensorflow2.0 + android)','https://www.inflearn.com/course/tensorflow-android-mobile-ai-app','https://cdn.inflearn.com/public/courses/324850/course_cover/d794f398-49ab-4b3b-a9e0-6a4c96eb65ba/newbie-ai-app-eng.png','개복치개발'),(748,1,'[퍼펙트 프리젠테이션] 기획 슬라이드 디자인','https://www.inflearn.com/course/퍼펙트','https://cdn.inflearn.com/public/courses/324847/course_cover/b3238872-ac0d-4be9-97c2-83ecf1baa82d/kjs-pp-0.jpg','김재성'),(749,1,'우디의 일러스트레이터 강좌','https://www.inflearn.com/course/일러스트레이터-woody','https://cdn.inflearn.com/public/course-324821-cover/c157146a-b244-4f88-b159-39541c1cffc8','롤스토리디자인연구소'),(750,1,'[라즈베리파이] IoT 딥러닝 Computer Vision 실전 프로젝트','https://www.inflearn.com/course/라즈베리파이-IoT-딥러닝-실전','https://cdn.inflearn.com/public/courses/324813/course_cover/eb51871d-082a-4b77-add0-f87421aaac46/sjh-IoT.png','노마드크리에이터'),(751,1,'웹 자동화 프로그램 만들기(파이썬 + 셀레니움)','https://www.inflearn.com/course/웹자동화-파이썬-셀레니움','https://cdn.inflearn.com/public/courses/324812/course_cover/64be7503-86b5-4554-a28b-b1b3877fd4c2/python-selenium.png','개복치개발'),(752,1,'생활코딩 - Redux','https://www.inflearn.com/course/redux-생활코딩','https://cdn.inflearn.com/public/courses/324800/course_cover/df1a57d9-dfcf-4471-9e06-5c41aac294bb/egoing-redux.png','Egoing Lee'),(753,1,'쉽게 따라하는 Enscape for SketchUp','https://www.inflearn.com/course/엔스케이프-스케치업','https://cdn.inflearn.com/public/courses/324760/course_cover/b694fd5e-b158-4ebf-aa4e-171253084e91/enscape-sketchup.png','유용한 IT 학습'),(754,1,'신은 직장을 안 다녀!(신의 직장 퇴사 후 1년)','https://www.inflearn.com/course/신의직장-퇴사-후-1년','https://cdn.inflearn.com/public/courses/324725/course_cover/03a602ca-6965-4a03-ac80-17e1b475f64c/jyh-company.png','장용하'),(755,1,'Maxon Cinema4D Xpresso의 입문','https://www.inflearn.com/course/c4d-xpresso','https://cdn.inflearn.com/public/courses/324707/course_cover/6a01090a-f588-4f14-9d57-03bb8d09300c/cinema4dxpresso-eng.png','유용한 IT 학습'),(756,1,'Davinci Resolve (다빈치 리졸브) V15의 입문','https://www.inflearn.com/course/다빈치리졸브-v15','https://cdn.inflearn.com/public/courses/324705/course_cover/8dd08ad3-a0e1-4b11-9cab-5ec6554e4dc1/davinci-v15-eng.png','유용한 IT 학습'),(757,1,'실시간 트렌드 홈페이지 개발(파이썬 크롤링 + Flask)','https://www.inflearn.com/course/파이썬-크롤링-실시간-트렌드-홈페이지','https://cdn.inflearn.com/public/courses/324680/course_cover/8355e425-8af0-4095-b98a-6db794432f1a/python_flask_eng.png','개복치개발'),(758,1,'Autodesk Maya 3D 그래픽의 입문 Part.2 Modeling','https://www.inflearn.com/course/마야-입문-2','https://cdn.inflearn.com/public/courses/324653/course_cover/d8643f65-8c41-4e6b-b0e0-a71875df385e/mayaitgopart2-eng.png','유용한 IT 학습'),(759,1,'R로 무작정 해보는 data science','https://www.inflearn.com/course/R-데이터사이언스-라이브코딩','https://cdn.inflearn.com/public/courses/324648/course_cover/65fd28f3-ed77-40d7-b22b-0e756d6a4ddf/rdatascience_eng.png','코코'),(760,1,'태블로를 활용한 고객 획득 및 유지 패턴 분석','https://www.inflearn.com/course/태블로-세미나','https://cdn.inflearn.com/public/courses/324646/course_cover/ad70cf9a-2d0f-4456-a934-2b96e22bb837/tableaucustomerretention-eng.png','VizLab'),(761,1,'포토샵 스킬 UP을 위한 실전 강좌!','https://www.inflearn.com/course/포토샵-실전-강좌','https://cdn.inflearn.com/public/courses/324644/course_cover/04e565cd-9446-432e-b51b-2dbb0fd18b74/photoshop-advanced-thumbnail.jpg','디자인베이스'),(762,1,'유니티3D를 사용한 VR 제작 기초.','https://www.inflearn.com/course/unity3d-vr-기초','https://cdn.inflearn.com/public/courses/324614/course_cover/732c2839-6915-4417-aafc-5a0e001366cd/donkey_vr.png','동키'),(763,1,'[BASIC] 만들면서 배우는 Figma UI Design','https://www.inflearn.com/course/피그마-기초','https://cdn.inflearn.com/public/course-324603-cover/85700714-fe5e-40c9-b8aa-01a512aeba95','연남동이재용'),(764,1,'텍스트마이닝 실전 프로젝트 - 뉴스 데이터 분석하기','https://www.inflearn.com/course/텍스트마이닝-데이터-분석-뉴스','https://cdn.inflearn.com/public/courses/324601/course_cover/d6bc2d83-5c61-4179-9234-41c18d4c29ec/coco_news.png','코코'),(765,1,'만들면서 배우는 Adobe XD 기초','https://www.inflearn.com/course/adobe-xd-프로토타이핑','https://cdn.inflearn.com/public/courses/324584/course_cover/4d2d4f58-45bf-4aff-9a4c-f186a1d0c9b6/ljy_xd.png','연남동이재용'),(766,1,'[NEW]사물인터넷 통신은 내 손에(Arduino, MQTT, Nodejs, MongoDB, Android,VS Code)','https://www.inflearn.com/course/사물인터넷-통신','https://cdn.inflearn.com/public/course-324572-cover/96e44107-6470-4dc3-9c46-5ab98b0ed77c','박매일'),(767,1,'초간단 초스피드 데이터 수집 (파이썬 크롤링)','https://www.inflearn.com/course/초간단-초스피드-파이썬-크롤링-데이터-수집','https://cdn.inflearn.com/public/courses/324542/course_cover/ad28bab7-a28b-4192-b003-c0b301c3d942/python_crawling_eng.png','개복치개발'),(768,1,'반드시 알고 넘어가야 할 웹 기술 기초편','https://www.inflearn.com/course/웹-기술-기초','https://cdn.inflearn.com/public/courses/324514/course_cover/6acacd47-bce5-4566-810c-fb6c56d49c78/Web_basic.png','크리핵티브'),(769,1,'C# ADO.NET 데이터베이스 프로그래밍','https://www.inflearn.com/course/c-sharp-ado-net','https://cdn.inflearn.com/public/course-324486-cover/12683963-3599-4deb-a098-b2fd81efbbc2','이교준'),(770,1,'온라인 강의를 위한 캠타시아 활용법, MS 팀즈 활용법 등','https://www.inflearn.com/course/IT기술-강의제작을위한-캠타시아','https://cdn.inflearn.com/public/courses/324466/course_cover/9cbb74c1-0919-44db-9d4d-33938751afbf/boan_camtasia.png','보안프로젝트'),(771,1,'3시간이면 충분히 입문자를 벗어날 수 있는 프리미어 프로','https://www.inflearn.com/course/영상편집-프리미어프로-여행브이로그','https://cdn.inflearn.com/public/courses/324463/course_cover/1d9ae29d-412e-4ffe-84c9-d0a3a0adb013/pr-video.png','쇼콜라떼'),(772,1,'편리하고 안전한 클라우드, OneDrive 활용법','https://www.inflearn.com/course/OneDrive-클라우드-활용강좌','https://cdn.inflearn.com/public/courses/324435/course_cover/1145fcb7-af5b-4a75-9e81-13b62d59b645/canako_onedrive.png','오마스'),(773,1,'태블로 레벨UP','https://www.inflearn.com/course/태블로-중급','https://cdn.inflearn.com/public/courses/324340/course_cover/7fffc120-bb67-430a-b70a-1c21984b2b5a/tableau_2.png','VizLab'),(774,1,'호주 현직 자바 개발자가 묻고 답하는 영어 기술면접 25','https://www.inflearn.com/course/자바-개발자-영어-기술면접','https://cdn.inflearn.com/public/courses/324298/course_cover/ee68bc8e-6050-4486-9981-c0009ec0097e/interview_final_768.png','Jin Seo'),(775,1,'지구에서 제일 쉽게 설명한 자료구조와 알고리즘','https://www.inflearn.com/course/자료구조-알고리즘-1','https://cdn.inflearn.com/public/courses/324220/course_cover/412d22af-d2f4-4b6e-a2c9-83562a30eb6e/chan_Algorithm.png','개복치개발'),(776,1,'일주일 만에 소프트웨어 요구사항 제대로 이해하기','https://www.inflearn.com/course/소프트웨어요구사항-메디치','https://cdn.inflearn.com/public/courses/324217/course_cover/0abb2045-c2e6-4858-8fc0-d86f41b1f558/inflearn_course_img_.jpg','SW school'),(777,1,'Java TPC(생각하고, 표현하고, 코딩하고)','https://www.inflearn.com/course/자바-입문-프로그래밍','https://cdn.inflearn.com/public/courses/324192/course_cover/6b4d144e-95e7-48a3-92ff-4f99e6966b11/java%20tpc.png','박매일'),(778,1,'파이썬 데이터시각화 분석 실전 프로젝트','https://www.inflearn.com/course/파이썬-데이터-시각화-프로젝트','https://cdn.inflearn.com/public/courses/324189/course_cover/e156ee75-34da-4a4a-bab5-3780822310b4/sjh_python_Data.png','노마드크리에이터'),(779,1,'SVG 마스터','https://www.inflearn.com/course/mastering-svg','https://cdn.inflearn.com/public/courses/324138/course_cover/7bc7f06a-3ee1-4d69-aab1-ca700c1eac69/thumbnail.jpg','1분코딩'),(780,1,'취미로 해킹#4(Nebula)','https://www.inflearn.com/course/hacking4-Nebula','https://cdn.inflearn.com/public/courses/324135/course_cover/43002c93-270e-4661-bcf9-52c2597cca31/%E1%84%8E%E1%85%B1%E1%84%86%E1%85%B5%E1%84%85%E1%85%A9%E1%84%92%E1%85%A2%E1%84%8F%E1%85%B5%E1%86%BC4.png','장용하'),(781,1,'벡터 미적분학 시리즈3 - 적분 기초','https://www.inflearn.com/course/벡터-미적분-적분-기초','https://cdn.inflearn.com/public/courses/324134/course_cover/a69dbb16-6c4c-4d49-951a-882aeb44760e/jbh3_a.png','조범희 (타블렛깎는노인)'),(782,1,'Angular, 앵귤러 100분 핵심강의','https://www.inflearn.com/course/Angular-100min','https://cdn.inflearn.com/public/courses/324108/course_cover/b570bfe6-6ed1-4f14-9d5e-b3c437a2397d/Angular100_Thumbnail.jpg','노마드크리에이터'),(783,1,'Vue로 Nodebird SNS 만들기','https://www.inflearn.com/course/Vue-nodebird-sns','https://cdn.inflearn.com/public/courses/324065/course_cover/b01af869-40f4-47a3-bdb7-52c5d43b8d10/%E1%84%8C%E1%85%A9%E1%84%92%E1%85%A7%E1%86%AB%E1%84%8B%E1%85%A7%E1%86%BC_%E1%84%87%E1%85%B2sns.png','조현영'),(784,1,'웹 게임을 만들며 배우는 React','https://www.inflearn.com/course/web-game-React','https://cdn.inflearn.com/public/course-324063-cover/3c856a69-e213-4394-8317-1469386b82cc','조현영'),(785,1,'예제로 배우는 스프링부트 입문','https://www.inflearn.com/course/스프링부트-웹프로그래밍','https://cdn.inflearn.com/public/courses/324056/course_cover/d7843f34-f5a0-47e1-abb6-f16ad51fcc6a/ljh_springboot.png','이재환'),(786,1,'행정직을 위한 정시퇴근각 - 파이썬 업무자동화','https://www.inflearn.com/course/Python-Business-Automation','https://cdn.inflearn.com/public/courses/324042/course_cover/90e11167-2224-4ef1-95d9-178390044641/blair_python.png','kokori'),(787,1,'생활코딩 - React','https://www.inflearn.com/course/react-생활코딩','https://cdn.inflearn.com/public/courses/324041/course_cover/c7ef7e48-adbc-4bc7-b71e-2cd19240019d/egoing_react.jpg','Egoing Lee'),(788,1,'iOS 개발을 위한 swift5 완벽 가이드','https://www.inflearn.com/course/Swift-KXcoding','https://cdn.inflearn.com/public/courses/324039/course_cover/a8685d97-2017-4a30-817b-30a6f8b0d839/swift_kky.png','KxCoding'),(789,1,'파이썬을 활용한 선형대수학 - NumPy와 SciPy의 활용','https://www.inflearn.com/course/선형대수학','https://cdn.inflearn.com/wp-content/uploads/linear2_5.jpg','조범희 (타블렛깎는노인)'),(790,1,'카카오 김영삼 작가의 카톡 이모티콘 작가되기','https://www.inflearn.com/course/이모티콘','https://cdn.inflearn.com/wp-content/uploads/sc_emoticon4.jpg','소프트캠퍼스'),(791,1,'윈도우 리버싱 ( window reversing) 완벽 이해 - 레나 챌린지 풀이','https://www.inflearn.com/course/lena-2','https://cdn.inflearn.com/wp-content/uploads/lena.jpg','보안프로젝트'),(792,1,'디지털포렌식 분석 자격증 2급 필기 대비','https://www.inflearn.com/course/disgitalforensic-2-notes','https://cdn.inflearn.com/wp-content/uploads/digitalf-w.png','보안프로젝트'),(793,1,'Flutter 입문 - 안드로이드, iOS 개발을 한 번에','https://www.inflearn.com/course/flutter-입문','https://cdn.inflearn.com/wp-content/uploads/flutter8.jpg','오준석'),(794,1,'리액트로 구현하는 블록체인 이더리움 ERC721','https://www.inflearn.com/course/erc-721','https://cdn.inflearn.com/wp-content/uploads/logo-erc721.png','coldmind'),(795,1,'엑셀 기초에서 실무까지','https://www.inflearn.com/course/엑셀','https://cdn.inflearn.com/wp-content/uploads/excel-4.png','짤막한 강좌(한정희)'),(796,1,'윤재성의 처음 시작하는 MySQL DataBase','https://www.inflearn.com/course/mysql','https://cdn.inflearn.com/wp-content/uploads/sc_MySQL-1.jpg','소프트캠퍼스'),(797,1,'국내파들의 글로벌 커리어 개발','https://www.inflearn.com/course/해외취업-3','https://cdn.inflearn.com/wp-content/uploads/job_free.png','유연실'),(798,1,'EOSJS를 이용한 EOS 심플 월렛 만들기','https://www.inflearn.com/course/eosjs','https://cdn.inflearn.com/wp-content/uploads/Wallet-1.jpg','Dong Jun Kwon'),(799,1,'자바 스프링 프레임워크(renew ver.) - 신입 프로그래머를 위한 강좌','https://www.inflearn.com/course/스프링-프레임워크_renew','https://cdn.inflearn.com/wp-content/uploads/spring_ver.2018-1.jpg','인프런'),(800,1,'파이썬으로 구현하는 거래 자동화 봇 (챗봇)','https://www.inflearn.com/course/python-bitcoin-chatbot','https://cdn.inflearn.com/wp-content/uploads/bitcoin-2.jpg','Gunhee Lee'),(801,1,'악성코드 분석 중급과정 (유형별분석)','https://www.inflearn.com/course/악성코드-분석-중급','https://cdn.inflearn.com/wp-content/uploads/malignant_code-1.jpg','보안프로젝트'),(802,1,'디지털 포렌식 전문가 2급 실기 과정','https://www.inflearn.com/course/디지털-포렌식-전문가2급','https://cdn.inflearn.com/wp-content/uploads/Digital-Forensic.jpg','보안프로젝트'),(803,1,'디지털 포렌식 ( Digital Forensic ) 전문가 과정','https://www.inflearn.com/course/digital-forensic-course','https://cdn.inflearn.com/wp-content/uploads/digital-forensic.jpg','보안프로젝트'),(804,1,'WEB2 - Node.js','https://www.inflearn.com/course/web2-node-js','https://cdn.inflearn.com/wp-content/uploads/node.js-1.jpg','Egoing Lee'),(805,1,'WEB2 - Python 기초','https://www.inflearn.com/course/web2-python','https://cdn.inflearn.com/wp-content/uploads/python-2.jpg','Egoing Lee'),(806,1,'[응용] 다양한 환경을 앤서블(Ansible)로 관리하기 with 베이그런트(Vagrant)','https://www.inflearn.com/course/ansible-응용','https://cdn.inflearn.com/wp-content/uploads/ansible.jpg','조훈(Hoon Jo)'),(807,1,'유니티 게임 개발 (2D) 실전편 - 스크립트는 물론, 디자인 패턴과 알고리즘까지','https://www.inflearn.com/course/유니티-심화-과정','https://cdn.inflearn.com/wp-content/uploads/unityc.jpg','스터디 인코딩'),(808,1,'C 프로그래밍 - 입문부터 게임 개발까지','https://www.inflearn.com/course/c-프로그래밍-게임','https://cdn.inflearn.com/wp-content/uploads/nado-2.jpg','나도코딩'),(809,1,'Javascript 핵심 개념 알아보기 - JS Flow','https://www.inflearn.com/course/핵심개념-javascript-flow','https://cdn.inflearn.com/wp-content/uploads/javascript-flow.jpg','정재남'),(810,1,'iOS AutoLayout을 활용한 실전 UI구성 전략 - 카카오톡 같은 고급 UI 만들기','https://www.inflearn.com/course/autolayout-ui_ios','https://cdn.inflearn.com/wp-content/uploads/auto.png','iOS Developer'),(811,1,'Illustrator CC - 일러스트레이터 입문부터 실전까지 한번에 마스터하기','https://www.inflearn.com/course/illustrator-cc-master','https://cdn.inflearn.com/wp-content/uploads/대표이미지.jpg','클로이'),(812,1,'자바스크립트로 알아보는 함수형 프로그래밍 (ES5)','https://www.inflearn.com/course/함수형-프로그래밍','https://cdn.inflearn.com/wp-content/uploads/functional-programming.png','유인동'),(813,1,'테스트주도개발(TDD)로 만드는 NodeJS API 서버','https://www.inflearn.com/course/테스트주도개발-tdd-nodejs-api','https://cdn.inflearn.com/wp-content/uploads/nodetdd.png','김정환'),(814,1,'오픈 소스 도구를 활용한 웹 해킹 및 스노트 분석(침해대응)','https://www.inflearn.com/course/웹-해킹-스노트-분석침해','https://cdn.inflearn.com/wp-content/uploads/boan4.png','보안프로젝트'),(815,1,'생활코딩 - Linux','https://www.inflearn.com/course/생활코딩-리눅스-강좌','https://cdn.inflearn.com/wp-content/uploads/linux-1.jpg','Egoing Lee'),(816,1,'Node.js 로 Database 다루기 소개와 웹애플리케이션 만들기','https://www.inflearn.com/course/node-js-database','https://cdn.inflearn.com/wp-content/uploads/nodedata.jpg','Egoing Lee'),(817,1,'생활코딩 - 정규표현식','https://www.inflearn.com/course/생활코딩-정규표현식','https://cdn.inflearn.com/wp-content/uploads/re.png','Egoing Lee'),(818,1,'생활코딩 - PHP 기본 A 부터 Z 까지','https://www.inflearn.com/course/생활코딩-php-강좌','https://cdn.inflearn.com/wp-content/uploads/opentutorials_php.png','Egoing Lee'),(819,1,'생활코딩 - mysql 강좌','https://www.inflearn.com/course/mysql-강좌','https://cdn.inflearn.com/wp-content/uploads/opentutorials_mysql.png','Egoing Lee'),(820,1,'생활코딩 - jQuery','https://www.inflearn.com/course/생활코딩-jquery-강좌','https://cdn.inflearn.com/wp-content/uploads/jq.png','Egoing Lee'),(821,1,'더 나은 사진가가 되는 방법 part 3 <사진강의>','https://www.inflearn.com/course/사진가-3','https://cdn.inflearn.com/public/courses/326536/cover/ec460e2c-a935-45bd-887b-7b9f96a487f9','스킬업라이브'),(822,1,'더 나은 사진가가 되는 방법 part 2 <사진강의>','https://www.inflearn.com/course/사진가-2','https://cdn.inflearn.com/public/courses/326535/cover/6926fcc7-32dd-4563-9f74-91723e91ea51','스킬업라이브'),(823,1,'더 나은 사진가가 되는 방법 part 1 <사진강의>','https://www.inflearn.com/course/사진가-1','https://cdn.inflearn.com/public/courses/326534/cover/06887b44-39fc-40bb-8861-60971de8457f','스킬업라이브'),(824,1,'디지털 매핑 / 데이터 시각화','https://www.inflearn.com/course/디지털매핑-시각화','https://cdn.inflearn.com/public/courses/326495/cover/efd292aa-f43e-4ac5-9663-5e9f19715c84','NJ Namju Lee'),(825,1,'비전공자를 위한 개발자 취업 올인원 가이드 [학습편]','https://www.inflearn.com/course/개발자-취업-학습편','https://cdn.inflearn.com/public/courses/326468/cover/51ae6304-e043-41ad-a43c-8102cb01e401','한정수'),(826,1,'딥러닝을 위한 파이썬 레벨2','https://www.inflearn.com/course/딥러닝-파이썬-레벨2','https://cdn.inflearn.com/public/courses/326461/cover/fd9dafd0-1487-4201-9be8-5e8e556d3e48','공대형아'),(827,1,'씨리얼 오픽 - 난이도 3&4 실전 테스트','https://www.inflearn.com/course/씨리얼-오픽-실전테스트-1','https://cdn.inflearn.com/public/courses/326451/cover/dbad6cd2-3625-4a13-b0be-fdcb6ce65f0c','다름에듀'),(828,1,'씨리얼 오픽 - 이슈주제 STEP 1(01~15강)','https://www.inflearn.com/course/씨리얼-오픽-이슈주제-1','https://cdn.inflearn.com/public/courses/326440/cover/f56e70f1-bdf2-4e92-a213-6f71ec243179','다름에듀'),(829,1,'씨리얼 오픽 - 롤플레이 STEP 2(16~30강)','https://www.inflearn.com/course/씨리얼-오픽-롤플레이-2','https://cdn.inflearn.com/public/courses/326437/cover/6662b685-529f-4fd7-91e3-cc5ecf8dc8a4','다름에듀'),(830,1,'[All that MBA] 전략경영, 어떻게 경쟁우위를 만들 것인가','https://www.inflearn.com/course/전략경영-경쟁우위','https://cdn.inflearn.com/public/courses/326387/cover/efa39734-4ce9-4d57-a999-5fd130641d54','인더스트리미디어'),(831,1,'YOLO 구현으로 배우는 딥러닝 논문 구현 with TensorFlow 2.0','https://www.inflearn.com/course/욜로-딥러닝-논문구현','https://cdn.inflearn.com/public/courses/326373/cover/719b43ac-9686-4e91-8340-c8f4084fe21a','AISchool'),(832,1,'SharePoint로 협업을 위한 팀 사이트 만들기','https://www.inflearn.com/course/sharepoint-협업-팀사이트','https://cdn.inflearn.com/public/courses/326369/cover/3c940137-18f8-43da-9173-04cba54e275c','오마스'),(833,1,'공공데이터, 엑셀과 파워포인트로 편하고 멋있게 시각화하기','https://www.inflearn.com/course/통계청자료-시각화','https://cdn.inflearn.com/public/course-326313-cover/72065d25-77af-43c3-a2b7-7d7555aee5ad','김지형'),(834,1,'웹툰,만화기법(중급)','https://www.inflearn.com/course/웹툰-클립스튜디오-3','https://cdn.inflearn.com/public/course-326286-cover/fad3764b-ba9d-4a4f-ae90-3961f85cd439','안감독'),(835,1,'Swift 언어로 배우는 iOS 장기 게임 (Korean Chess)','https://www.inflearn.com/course/스위프트-장기게임','https://cdn.inflearn.com/public/course-326236-cover/aa07be70-d5cc-4d5c-887b-c2b91c20a6e3','쎄뮤'),(836,1,'Swift 언어로 만드는 테트리스 게임','https://www.inflearn.com/course/스위프트-테트리스게임','https://cdn.inflearn.com/public/course-326233-cover/dccc0feb-b331-464e-a072-647e38347982','쎄뮤'),(837,1,'집에서 만드는 칵테일! 77종의 칵테일 손쉽게 만드는 방법','https://www.inflearn.com/course/칵테일-만들기','https://cdn.inflearn.com/public/course-326212-cover/ea70a0c0-846d-45f6-a779-9c9b4dc99059','wickedmandoo'),(838,1,'SQL과 구글시트로 시작하는 데이터분석','https://www.inflearn.com/course/sql-구글시트-데이터분석','https://cdn.inflearn.com/public/course-326209-cover/2f22c0fc-a770-4527-994e-f68212e1eb07','박범진'),(839,1,'VR, AR 기초 이론과 시장 분석','https://www.inflearn.com/course/vr-ar-기초이론','https://cdn.inflearn.com/public/course-326197-cover/6145e1fa-598d-4ce2-b996-37a96926384d','유용한 IT 학습'),(840,1,'3D 게임 디자이너에게 배우는 Zbrush 2020 기초','https://www.inflearn.com/course/지브러쉬-2020-입문','https://cdn.inflearn.com/public/course-326195-cover/61eebf13-b494-4855-ab9d-2898849e69a7','유용한 IT 학습'),(841,1,'하루 1시간. 쿠팡파트너스로 매일 치맥값정도는 벌기_직장인 부업 투잡','https://www.inflearn.com/course/쿠팡파트너스-제휴마케팅','https://cdn.inflearn.com/public/course-326149-cover/350513bb-3bec-481b-8a43-4d17a32bab59','wickedmandoo'),(842,1,'Tensorflow 사용메뉴얼','https://www.inflearn.com/course/텐서플로-딥러닝-구현','https://cdn.inflearn.com/public/course-326050-cover/b183f4fb-56e7-4beb-bfd6-e1ebdaf20276','공대형아'),(843,1,'[전자책 100PAGE]아직도 구매대행만 하니?! 구매대행과 병행수입을 한번에! 무재고.무배송. 스마트 스토어로 월 200벌기! 부업 투잡','https://www.inflearn.com/course/스마트스토어-월200-pdf','https://cdn.inflearn.com/public/course-326002-cover/dbd6cfc1-4481-461b-b0ce-2c0d62066cd5','wickedmandoo'),(844,1,'Teams Meeting 스킬교육: Teams로 온라인 화상회의 하기(회의/교육/세미나)','https://www.inflearn.com/course/온라인-비대면-화상회의','https://cdn.inflearn.com/public/course-325987-cover/be78c6eb-8ac4-4685-813a-dd4adbffb94c','오마스'),(845,1,'Razor Pages 멤버십 서비스 초급과정(.NET5)','https://www.inflearn.com/course/레이저페이지-초급','https://cdn.inflearn.com/public/courses/325973/cover/f1af29ae-1ed3-44c1-918c-7ed5c6fe3532','김정수'),(846,1,'SharePoint로 회사 파일 서버를 대체할 인트라넷 사이트 만들기','https://www.inflearn.com/course/셰어포인트-인트라넷','https://cdn.inflearn.com/public/course-325968-cover/b5dea524-0d40-4bbd-a9f0-0033a4b8214f','오마스'),(847,1,'윤재성의 Kotlin 기반 안드로이드 Part 3 - 데이터관리와 네트워크','https://www.inflearn.com/course/소프트캠퍼스-코틀린-안드로이드-3','https://cdn.inflearn.com/public/course-325892-cover/115c5c0f-87b4-4edc-83cc-0cd351566db3','소프트캠퍼스'),(848,1,'쉽고 빠르게 익히는 Access 2016','https://www.inflearn.com/course/오피스튜터-액세스-2016','https://cdn.inflearn.com/public/course-325879-cover/03276f2b-a5a8-4415-9465-98ed49f9e10e','오피스튜터'),(849,1,'Word 2013에서 스타일과 다단계번호 매기기를 사용해 문서 자동화하기','https://www.inflearn.com/course/워드-2013-스타일-문서자동화','https://cdn.inflearn.com/public/course-325877-cover/49031fe5-272e-4407-9b3c-8b6de040b98a','오피스튜터'),(850,1,'웹툰 만들기(입문편)','https://www.inflearn.com/course/웹툰-클립스튜디오','https://cdn.inflearn.com/public/course-325863-cover/2c2db9ae-1f55-4cd1-bb89-4f37ab476f29','안감독'),(851,1,'Vue.js - Django 연동 웹 프로그래밍 (실전편)','https://www.inflearn.com/course/뷰-장고-연동-실전','https://cdn.inflearn.com/public/course-325859-cover/9a20ad00-e499-4739-abcb-6dd8aaee4e0a','김석훈'),(852,1,'쉽고 빠르게 익히는 PowerPoint 2013','https://www.inflearn.com/course/오피스튜터-파워포인트-2013','https://cdn.inflearn.com/public/course-325846-cover/6c8248a2-b497-412d-b620-cde12396ca71','오피스튜터'),(853,1,'Excel 2013 피벗테이블을 이용한 데이터 집계와 분석','https://www.inflearn.com/course/엑셀-2013-피벗테이블','https://cdn.inflearn.com/public/course-325844-cover/d87c5e0e-388a-4af9-80db-cc0f24c6cfc6','오피스튜터'),(854,1,'가볍게 따라하는 Excel 2013 찾기/참조 함수','https://www.inflearn.com/course/엑셀-2013-찾기-참조-함수','https://cdn.inflearn.com/public/course-325840-cover/753fadb7-95ae-4bd8-8cd5-4909616117ac','오피스튜터'),(855,1,'쉽고 빠르게 익히는 Excel 2016','https://www.inflearn.com/course/오피스튜터-엑셀-2016','https://cdn.inflearn.com/public/course-325811-cover/da2d58c8-6208-4d58-b775-7be311c901dc','오피스튜터'),(856,1,'Windows Server 2019','https://www.inflearn.com/course/윈도-서버-관리-운영','https://cdn.inflearn.com/public/course-325797-cover/124493c6-fdb6-412b-9de9-66873a92e490','코드바나나'),(857,1,'시간의 마법사 RxJS - setTimeout 은 No! 모든 비동기 작업들을 한방에 해결하자','https://www.inflearn.com/course/rxjs-비동기작업','https://cdn.inflearn.com/public/course-325739-cover/a4e6265c-cc99-4f2b-b3fe-085d1e7c1a2a','나무'),(858,1,'자바 입문자를 위한 강의','https://www.inflearn.com/course/자바-프로그래밍-기초-입문','https://cdn.inflearn.com/public/course-325733-cover/a173e0a7-0f14-4be4-88f0-64ec91cfc6f9','JeongTaeHyun'),(859,1,'MAYA 3D animation Season 1','https://www.inflearn.com/course/마야-3d-애니메이션-1','https://cdn.inflearn.com/public/course-325713-cover/e765886c-acab-4edb-a453-7f5bd9fd4fc8','애니펀'),(860,1,'윤재성의 Kotlin 기반 안드로이드 앱 개발 Part2 - 메뉴와 4대 구성요소','https://www.inflearn.com/course/소프트캠퍼스-코틀린-안드로이드-2','https://cdn.inflearn.com/public/course-325703-cover/06bda940-08be-4767-aead-9db2d25b2563','소프트캠퍼스'),(861,1,'[매출 날 때까지!!] 수업후 30일 과정 한 단계씩! 스마트스토어로 월 200 벌기','https://www.inflearn.com/course/스마트스토어-월200','https://cdn.inflearn.com/public/course-325660-cover/20f6915d-5148-4471-9428-ff2ee495fbb7','wickedmandoo'),(862,1,'서버 없이 쓰는 서버, 구글 Cloud Functions','https://www.inflearn.com/course/구글-클라우드-서버리스-서버','https://cdn.inflearn.com/public/course-325618-cover/0f21c219-cc5f-40a0-9bed-bdefea12c4d6','노마드크리에이터'),(863,1,'새차원의 코틀린 코루틴(Coroutines) 강좌','https://www.inflearn.com/course/새차원-코틀린-코루틴','https://cdn.inflearn.com/public/course-325616-cover/e1729805-bd12-48a7-8861-8b830db47520','새차원'),(864,1,'실무에서 바로 쓰는 영어 이메일','https://www.inflearn.com/course/실무-영어-이메일','https://cdn.inflearn.com/public/course-325604-cover/0107ce00-4705-4a0f-b7ef-e0e838d429f7','런어데이'),(865,1,'[오피스365 기본 교육] 달라지는 업무환경과 포탈 설정, 주요 업무 툴','https://www.inflearn.com/course/오피스365-업무-툴','https://cdn.inflearn.com/public/course-325572-cover/2b2e6f46-0d38-4bd2-a4e6-169ddc16402a','오마스'),(866,1,'아두이노 시작하기','https://www.inflearn.com/course/아두이노-시작하기','https://cdn.inflearn.com/public/course-325516-cover/d7e8f448-3c8a-43c4-88f8-03d46854c16d','메이커멘토'),(867,1,'[백문이불여일타] 데이터 분석을 위한 고급 SQL 문제풀이','https://www.inflearn.com/course/sql-고급-문제풀이','https://cdn.inflearn.com/public/courses/325499/cover/0af6b126-00d7-4a4f-bdc3-3c4a1704ca8c','데이터리안'),(868,1,'[왕기초편] 쓱싹 쓱싹 그림을 그려요','https://www.inflearn.com/course/데일리드로잉-왕기초편','https://cdn.inflearn.com/public/course-325485-cover/77a76da4-58d3-4a0b-8018-49b0b9c6d1fc','진'),(869,1,'핸즈온 머신러닝 2','https://www.inflearn.com/course/핸즈온-머신러닝','https://cdn.inflearn.com/public/course-325478-cover/45870197-1e36-43ee-9a11-513f3063a672','Haesun Park'),(870,1,'2시간으로 끝내는 시장조사와 제안서 작성법','https://www.inflearn.com/course/픗픗-시장조사-제안서','https://cdn.inflearn.com/public/course-325476-cover/e20246ee-4392-41de-ac72-a4b6f2eda03b','픗픗 아카데미'),(871,1,'윤재성의 Kotlin 기반 안드로이드 앱 개발 Part1 - UI Programming','https://www.inflearn.com/course/소프트캠퍼스-코틀린-안드로이드-1','https://cdn.inflearn.com/public/courses/325462/course_cover/0319a8c7-213d-439b-9f80-e1ffd3b4ad85/kotlin-part1-uiprogramming-eng.png','소프트캠퍼스'),(872,1,'4차 산업혁명 시대의 경제심리, 행동경제학에 주목하라!','https://www.inflearn.com/course/4차산업혁명-행동경제학','https://cdn.inflearn.com/public/courses/325431/course_cover/92c69dfc-3e3e-4c84-ad5d-e95d08eba74a/mulcam-economic-eng.png','멀티캠퍼스'),(873,1,'AWS(Amazon Web Service) 입문자를 위한 강의','https://www.inflearn.com/course/aws-입문','https://cdn.inflearn.com/public/courses/325381/course_cover/54a565ce-7fe6-499e-81f4-049a33413d84/aws-basic-eng.png','Simon Kim'),(874,1,'돋보이는 신입사원을 위한 엑셀 트레이닝','https://www.inflearn.com/course/돋보이는-신입사원-엑셀-트레이닝','https://cdn.inflearn.com/public/courses/325362/course_cover/7613520f-efef-477e-bbcd-8f1e040c1c1b/byj-powerquery2.png','배영자'),(875,1,'2,000만원 이하 주택 임대료 종합소득세 신고','https://www.inflearn.com/course/주택임대료-종합소득세-신고','https://cdn.inflearn.com/public/courses/325330/course_cover/c7a87040-f319-4ed2-91f1-3283f8332d7f/koreacow-tax.png','koreacow1998'),(876,1,'현직 개발자가 알려주는 안드로이드 앱 쉽게 만드는 방법','https://www.inflearn.com/course/현직개발자-안드로이드-앱','https://cdn.inflearn.com/public/course-325254-cover/0d10cc1b-dcff-478e-a4a8-44ffdf19b684','홍드로이드'),(877,1,'순식간에 훑어보는 주식투자 A to Z','https://www.inflearn.com/course/주식투자-입문','https://cdn.inflearn.com/public/courses/325211/course_cover/2582ad1c-34c9-49bf-abec-af63b5a995b0/%EC%A3%BC%EC%8B%9D%ED%88%AC%EC%9E%90%20A%20to%20Z%20%EC%9D%B8%ED%94%84%EB%9F%B0%202.png','토파보기'),(878,1,'애프터이펙트 마스터 시즌1 에피소드1 무료공개','https://www.inflearn.com/course/애프터이펙트-마스터-에프소드1','https://cdn.inflearn.com/public/courses/325204/course_cover/e4bda320-8c9e-454c-9256-3285b67cfe7c/after%20effects%20master%2001_E.png','디마스터 디마영'),(879,1,'R로 배우는 통계','https://www.inflearn.com/course/r로-배우는-통계-1','https://cdn.inflearn.com/public/courses/325132/cover/ad985604-c55e-4d6c-90f1-c04941e7fd00','Issac Lee'),(880,1,'Azure 가상컴퓨터 - 초급','https://www.inflearn.com/course/azure-가상컴퓨터-초급','https://cdn.inflearn.com/public/courses/325111/course_cover/43b9be07-7a1e-4013-8c75-f81e3a2cc8da/AzureVM.png','클라우드메이트'),(881,1,'C# 윈폼_ 응용프로그램 개발','https://www.inflearn.com/course/c-sharp-윈폼-응용프로그램-개발','https://cdn.inflearn.com/public/courses/325006/course_cover/298f1106-ebdf-4e67-ad40-0b9b13398b55/c-sharp-winform-eng.png','개발자 Park'),(882,1,'안녕, 일본어는 처음이지? 누구나 쉽게 배우는 기초 일본어!','https://www.inflearn.com/course/누구나-쉽게-배우는-기초일본어','https://cdn.inflearn.com/public/courses/324952/course_cover/6d039c4b-8463-4dda-80c8-fac86506131f/cw-hiragana.png','친절한 채원씨'),(883,1,'[PyTorch] 쉽고 빠르게 배우는 GAN','https://www.inflearn.com/course/PyTorch-GAN','https://cdn.inflearn.com/public/courses/324945/course_cover/9794a376-0e54-4745-8a1d-3c6fe72b8fe6/pytorch-gan-eng.png','코코'),(884,1,'스마트워크를 위한 맞춤 프로그램, OneNote (전자 필기장)','https://www.inflearn.com/course/스마트워크-OneNote','https://cdn.inflearn.com/public/courses/324931/course_cover/b3971402-3601-4a54-bf47-2dc3df24405a/omas-onenote.jpg','오마스'),(885,1,'[Vue.js입문~초급] Javascript 초보 Real 웹앱 개발 - 1부 : vue 개념 ~ 초급','https://www.inflearn.com/course/real-웹앱-개발-vuejs-1부','https://cdn.inflearn.com/public/courses/324815/course_cover/61a7baf8-8f94-4682-8efe-9931224212f1/vuejs2-realwebapp-1-eng.png','배동훈'),(886,1,'MOS Word Expert 2016 자격증 따기','https://www.inflearn.com/course/mos-word-expert-2016','https://cdn.inflearn.com/public/courses/324792/course_cover/1427c067-b53c-4947-944f-bfa879f638e5/mos-word-expert-eng.png','유용한 IT 학습'),(887,1,'MOS Excel Expert 2016 자격증 따기','https://www.inflearn.com/course/mos-excel-expert-2016','https://cdn.inflearn.com/public/courses/324789/course_cover/6c988117-7626-4361-b42f-d06e24397ca8/mos-excel-expert-eng.png','유용한 IT 학습'),(888,1,'MOS Excel Core 2016 자격증 따기','https://www.inflearn.com/course/mos-excel-core-2016','https://cdn.inflearn.com/public/courses/324788/course_cover/f4a2ecb8-5b7a-4c96-bcce-2c06b4388bfa/mos-excel-core-eng.png','유용한 IT 학습'),(889,1,'효과적인 모바일 UX 만들기 (디자인 + 코딩)','https://www.inflearn.com/course/모바일-ux-디자인-코딩','https://cdn.inflearn.com/public/courses/324779/course_cover/c3359868-d637-4ac2-9277-5ee32ac63967/mobile-ux-design-eng.png','유용한 IT 학습'),(890,1,'쉽게 따라하는 Vray For Revit','https://www.inflearn.com/course/vray-for-revit','https://cdn.inflearn.com/public/courses/324763/course_cover/3692456f-92f3-48a4-bc05-b57decc200b2/vray-revit.png','유용한 IT 학습'),(891,1,'무료 클라우드 기반 3D CAD - Onshape(온쉐이프) 기초','https://www.inflearn.com/course/온쉐이프-기초','https://cdn.inflearn.com/public/courses/324761/course_cover/c0fbb287-d958-4d65-a10d-c453b1a84855/onshape-eng.png','유용한 IT 학습'),(892,1,'쉽게 따라하는 SketchUp Pro 2019 (한국어판)','https://www.inflearn.com/course/sketchup-2019','https://cdn.inflearn.com/public/courses/324753/course_cover/f33b29f9-dcf8-4816-9355-93fa52f3da88/sketchuppro-2019.png','유용한 IT 학습'),(893,1,'쉽게 따라하는 AutoCAD 2020 3D (한국어판)','https://www.inflearn.com/course/autocad-3d-2020','https://cdn.inflearn.com/public/courses/324752/course_cover/f9263930-bd5c-4b78-bd89-8291dbb1b235/autocad-3d-eng.png','유용한 IT 학습'),(894,1,'쉽게 따라하는 AutoCAD 2020 2D (한국어판)','https://www.inflearn.com/course/autocad-2d-2020','https://cdn.inflearn.com/public/courses/324751/course_cover/9c6a17ea-a28b-473e-8a43-c92dc26e72d6/autocad-2d-eng.png','유용한 IT 학습'),(895,1,'자바(javafx) 실전 데스크탑앱 프로젝트 - 유튜브관리앱','https://www.inflearn.com/course/javafx-데스크탑-앱만들기','https://cdn.inflearn.com/public/courses/324726/course_cover/7957fdce-99a0-4b54-aa97-018b32227591/kro-javafx.png','김래옥'),(896,1,'[2020년] 제발 도커 씁시다!','https://www.inflearn.com/course/도커-docker-서버-자동화','https://cdn.inflearn.com/public/courses/324714/course_cover/21a24493-81a7-40b1-b2d2-7f87bd52c1be/sdg-docker.png','월리'),(897,1,'After Effects CC 모션 이펙트의 활용','https://www.inflearn.com/course/애프터이펙트-모션이펙트','https://cdn.inflearn.com/public/courses/324709/course_cover/f7b03473-5b50-42c9-a470-c43da0fd0d14/ae-motionfx.png','유용한 IT 학습'),(898,1,'After Effects CC 2018 Expression의 입문','https://www.inflearn.com/course/애프터이펙트-익스프레션','https://cdn.inflearn.com/public/courses/324706/course_cover/541a0434-2d52-455f-82df-4e4698be7990/aftereffects-expression-eng.png','유용한 IT 학습'),(899,1,'전문 강사 및 컨설턴트 양성과정 (Upgrade!)','https://www.inflearn.com/course/강사-컨설턴트-마케팅','https://cdn.inflearn.com/public/courses/324681/course_cover/b855f35e-bdc1-4504-9179-e6dd95199567/professional-instructor-eng.png','나연재'),(900,1,'게임 디자인 패턴 with Unity','https://www.inflearn.com/course/게임-디자인패턴-유니티','https://cdn.inflearn.com/public/courses/324667/course_cover/089c85e1-484b-4773-a294-1fbce1f2da20/ljh_unity.png','이재환'),(901,1,'Substance Painter(서브스탠스 페인터) 기초다지기','https://www.inflearn.com/course/서브스탠스페인터-입문-기초','https://cdn.inflearn.com/public/courses/324662/course_cover/7a207f1d-dd3b-4b15-946d-66b7b3dc1d10/subs-painter-main.png','유용한 IT 학습'),(902,1,'Autodesk Maya 3D 그래픽의 입문 Part.1','https://www.inflearn.com/course/마야-입문-1','https://cdn.inflearn.com/public/courses/324652/course_cover/240f1e6f-8812-4447-85aa-ac193317d19d/mayaitgopart1-eng.png','유용한 IT 학습'),(903,1,'R프로그래밍 중급','https://www.inflearn.com/course/R-프로그래밍-중급','https://cdn.inflearn.com/public/courses/324630/course_cover/96314354-aa0e-42e7-95e2-9984e9d0683d/coco_r_2.png','코코'),(904,1,'텍스트마이닝 실전 프로젝트 - 우리집 주변 맛집 랭킹 매기기','https://www.inflearn.com/course/텍스트-마이닝-실전-프로젝트-랭킹','https://cdn.inflearn.com/public/courses/324593/course_cover/9eea519a-8978-47a4-9074-ac8aa342c994/coco_Ranking.png','코코'),(905,1,'스케치앱 마스터 과정[Sketch App]','https://www.inflearn.com/course/스캐치앱-마스터-sketch-app','https://cdn.inflearn.com/public/courses/324578/course_cover/7718f742-eb54-4028-a3a3-153a8558dc01/ljy_master.png','연남동이재용'),(906,1,'웹 해킹과 모의해킹 현업에 대한 이야기','https://www.inflearn.com/course/web-hacking-모의-해킹','https://cdn.inflearn.com/public/courses/324552/course_cover/949eef8b-f3b2-4862-baf0-8ad38c7e03b4/crehacktive_hacking_beginner.png','크리핵티브'),(907,1,'일맥상통 문서작성법 (주말농장 사례)','https://www.inflearn.com/course/문서작성법-일맥상통-기획','https://cdn.inflearn.com/public/courses/324545/course_cover/72facb30-f07b-4e43-8bc4-13a2602ecf14/meaningful_document.png','자바라머신러닝'),(908,1,'블록체인 이더리움 Dapp 개발에 트러플 드리즐 활용하기','https://www.inflearn.com/course/blockchain-truffle-drizzle','https://cdn.inflearn.com/public/courses/324417/course_cover/2f37062b-91b9-4e52-9963-2e4c99977c5a/logo-drizzle.jpg','coldmind'),(909,1,'MATLAB처럼 쓰는 PYTHON','https://www.inflearn.com/course/matlab-python-data-analysis','https://cdn.inflearn.com/public/courses/324408/course_cover/3b7c1fd5-f619-48c6-a253-64bf8ca05805/matlab-python-eng.png','박범진'),(910,1,'자바스크립트 중고급: 근본 핵심 이해','https://www.inflearn.com/course/자바스크립트-중고급','https://cdn.inflearn.com/public/courses/324398/course_cover/97632ccf-eed2-4e51-baec-ef3fb81c9b38/kyb_advanced.jpg','김영보'),(911,1,'Java TPC 실전프로젝트(Java API 활용)','https://www.inflearn.com/course/자바API활용-실전프로젝트','https://cdn.inflearn.com/public/courses/324305/course_cover/dd9c465b-ab64-4d7f-bb7f-7bc11f77a5c6/bmi_javaapi.png','박매일'),(912,1,'앵귤러 파이어베이스 완전정복 - PetStore 쇼핑몰 프로젝트','https://www.inflearn.com/course/앵귤러-파이어베이스-쇼핑몰','https://cdn.inflearn.com/public/courses/324264/course_cover/ce397f2b-a2c3-4ea3-a790-87a21f16a38d/angular_firebase_pet.png','노마드크리에이터'),(913,1,'자바스크립트 비기너: 튼튼한 기본 만들기','https://www.inflearn.com/course/자바스크립트-비기너','https://cdn.inflearn.com/public/course-324235-cover/12a6aceb-1c38-4ce1-b50c-ab9d32e43edd','김영보'),(914,1,'에펙 입문자도 만들 수 있는 유튜브 인트로 에프터이펙트 강좌','https://www.inflearn.com/course/에프터이펙트-유튜브-인트로','https://cdn.inflearn.com/public/courses/324223/course_cover/a1fd7098-b7b9-48eb-9400-c1292f9ee224/After_effect_intro.png','쇼콜라떼'),(915,1,'HTML, CSS, JS, Python 30분 요약강좌','https://www.inflearn.com/course/제주코딩-웹개발-30분요약','https://cdn.inflearn.com/public/courses/324216/course_cover/54a9c127-7937-47af-9090-1ce617082410/%E1%84%8C%E1%85%A6%E1%84%8C%E1%85%AE%E1%84%8F%E1%85%A9%E1%84%83%E1%85%B5%E1%86%BC30%E1%84%87%E1%85%AE%E1%86%AB%E1%84%80%E1%85%A1%E1%86%BC%E1%84%8C%E1%85%AA%28%EC%88%98%EC%A0%95%29.png','제주코딩베이스캠프'),(916,1,'반드시 알아야 할 Tensorflow 수학','https://www.inflearn.com/course/텐서플로우-수학','https://cdn.inflearn.com/public/courses/324211/course_cover/5425519c-7c6a-49b0-bb29-0e5fcc588a7b/kwang_tensorflow.png','최광성'),(917,1,'SQL/DB(MySQL) 기본부터 파이썬/데이터분석 활용까지!','https://www.inflearn.com/course/sql-db-mysql-파이썬-데이터분석','https://cdn.inflearn.com/public/courses/324208/course_cover/f2537bad-8f7e-4b44-b169-2cc0ca92ecad/%E1%84%8C%E1%85%A1%E1%86%AB%E1%84%8C%E1%85%A2%E1%84%86%E1%85%B5%E1%84%8F%E1%85%A9%E1%84%83%E1%85%B5%E1%86%BC_mysql.png','잔재미코딩'),(918,1,'Unity 입문자를 위한 C프로그래밍 기초','https://www.inflearn.com/course/유니티-프로그래밍-C언어-기초','https://cdn.inflearn.com/public/courses/324195/course_cover/1ee21567-1f72-4586-8218-fd6259df51ef/inflearn_course_img_.png','SW school'),(919,1,'NoSQL DB (몽고DB/mongodb) 기본부터 파이썬/데이터분석 활용까지!','https://www.inflearn.com/course/nosql-파이썬-몽고db-잔재미코딩','https://cdn.inflearn.com/public/courses/324183/course_cover/5fbb3f2a-94a2-499a-8e69-ea901a7b2eb8/mongoDB.png','잔재미코딩'),(920,1,'Shiny 그리고 시각화 R Go! 하자!','https://www.inflearn.com/course/r-shiny-시각화-이재화','https://cdn.inflearn.com/public/courses/324174/course_cover/fa58a386-928d-4b36-88aa-e6b916849874/20190809_135625.png','이수화'),(921,1,'파이썬 100분 핵심강의','https://www.inflearn.com/course/100분강의-파이썬','https://cdn.inflearn.com/public/courses/324168/course_cover/bfc7ab70-6fed-4035-9f64-3626577fbe49/python_thubnail.png','노마드크리에이터'),(922,1,'코딩의민족 앱 제작 (Android kotlin)','https://www.inflearn.com/course/안드로이드-코틀린-앱만들기-코딩의민족','https://cdn.inflearn.com/public/courses/324159/course_cover/cbd2d6e1-9a6e-4944-b179-6bbb89c56817/chan_kotlin.png','개복치개발'),(923,1,'Vue, 뷰 100분 핵심강의','https://www.inflearn.com/course/Vue-뷰-100분강의','https://cdn.inflearn.com/public/courses/324150/course_cover/da849df0-392d-4a2a-a89e-eb9d9532ff54/sjh_vue100.png','노마드크리에이터'),(924,1,'현존 최강 크롤링 기술: Scrapy와 Selenium 정복','https://www.inflearn.com/course/crawling-scrapy-selenium','https://cdn.inflearn.com/public/courses/324146/course_cover/118c1e59-e58f-4cc6-93cd-c39970c4e074/jjm_crawling.png','잔재미코딩'),(925,1,'WEB5 - Express Passport.js','https://www.inflearn.com/course/WEB5-Express-Passport-js','https://cdn.inflearn.com/public/courses/324141/course_cover/b97778e7-7d90-40ae-95ec-ae67c44c551e/web5_Express-Passport.js.png','Egoing Lee'),(926,1,'자바 : 클래스의 이해와 객체지향 프로그래밍','https://www.inflearn.com/course/자바-클래스-객체지향-프로그래밍','https://cdn.inflearn.com/public/courses/324139/course_cover/d599784c-a2ef-4c1b-97c0-7e663cd7764d/%E1%84%8B%E1%85%B5%E1%84%8C%E1%85%A2%E1%84%92%E1%85%AA%E1%86%AB_%E1%84%8C%E1%85%A1%E1%84%87%E1%85%A1%E1%84%8F%E1%85%B3%E1%86%AF%E1%84%85%E1%85%A2%E1%84%89%E1%85%B3.png','이재환'),(927,1,'IT보안을 위한 와이어샤크 네트워크 패킷 분석 실전','https://www.inflearn.com/course/wireshark_boanproject','https://cdn.inflearn.com/public/courses/324137/course_cover/28e6c95d-9492-4172-8b7f-a4686fb7db03/boan_wireshark.png','보안프로젝트'),(928,1,'디자인 패턴 with JAVA (GoF)','https://www.inflearn.com/course/Design-pattern-java','https://cdn.inflearn.com/public/courses/324131/course_cover/76ed0e2d-9181-4e25-b72d-a6212582d888/ljh_pattern.png','이재환'),(929,1,'[애플 공식 교재] iOS 앱 만들기 입문','https://www.inflearn.com/course/iOS-App-Dev','https://cdn.inflearn.com/public/courses/324129/course_cover/16c3145e-2ec9-44e1-9f84-8b920ef99560/introappdev_cover_01.png','코더스하이'),(930,1,'인공지능 R GO! 하자!','https://www.inflearn.com/course/Python-R-go','https://cdn.inflearn.com/public/course-324116-cover/085c2815-2af6-41d8-8acc-cfb77feff721','이수화'),(931,1,'윤재성의 Vue.js 프로젝트를 통한 실무 개발 과정','https://www.inflearn.com/course/Vuejs-project','https://cdn.inflearn.com/public/courses/324114/course_cover/9b9d948b-bc1e-409f-9181-025821d1fb95/sc_vue.js.png','소프트캠퍼스'),(932,1,'Typescript with Vue 실전 프로젝트','https://www.inflearn.com/course/Typescript_Vue','https://cdn.inflearn.com/public/courses/324075/course_cover/261cc46e-1582-402d-b20c-7e4fdf7d5f57/sdh_vue.png','성도희'),(933,1,'웹 서비스 해킹을 위한 버프스위트 완벽 활용 가이드','https://www.inflearn.com/course/boan_burpsuite','https://cdn.inflearn.com/public/courses/324072/course_cover/398b51a1-f5ea-47f7-8939-772d06fef504/boan_burp.png','보안프로젝트'),(934,1,'TDD 개발 방법론을 활용한 React Native 앱 개발','https://www.inflearn.com/course/React-TDD','https://cdn.inflearn.com/public/courses/324046/course_cover/f22ad076-c7b5-4706-ae65-fa68c16f29e6/bdh_TDDreact.png','박동호'),(935,1,'돈 안 들고 대기업 이기는 작은 마케팅','https://www.inflearn.com/course/마케팅-ㅍㅍㅅㅅ','https://cdn.inflearn.com/public/courses/324040/course_cover/6caf9da1-d8e8-47ca-8335-b8ad69eadc4e/%EC%97%90%EC%96%B4%ED%81%B4%EB%9E%98%EC%8A%A4_1_%EB%8F%88%EC%95%88%EB%93%9C%EB%8A%94%EB%A7%88%EC%BC%80%ED%8C%85.jpg','픗픗 아카데미'),(936,1,'Ethereum 실전! 초보자를 위한 Lottery Dapp 개발','https://www.inflearn.com/course/ethereum-dapp','https://cdn.inflearn.com/public/courses/324032/course_cover/2ff8fdfa-184f-44f4-b23f-2708d434de37/youtubeChannelArt.png','dapp Campus'),(937,1,'코알못에서 웹서비스 런칭까지 : 제주 코딩 베이스캠프(Django)','https://www.inflearn.com/course/web_fullstack','https://cdn.inflearn.com/public/courses/324031/course_cover/9404bff2-89f1-4784-8a74-49b0fa51f13a/fullstack_jeju%28%EC%88%98%EC%A0%95%29.png','제주코딩베이스캠프'),(938,1,'파이썬 사용자를 위한 웹개발 입문 A to Z Django + Bootstrap','https://www.inflearn.com/course/파이썬','https://cdn.inflearn.com/wp-content/uploads/web4.jpg','SungYong Lee'),(939,1,'Do it! 자바 프로그래밍 입문','https://www.inflearn.com/course/자바-프로그래밍-입문','https://cdn.inflearn.com/wp-content/uploads/java_do_it4.jpg','이지스퍼블리싱'),(940,1,'파이썬으로 장고(Django) 공략하기: 입문','https://www.inflearn.com/course/django-course','https://cdn.inflearn.com/wp-content/uploads/django4.jpg','박순영'),(941,1,'리버싱 이 정도는 알아야지','https://www.inflearn.com/course/reversing','https://cdn.inflearn.com/wp-content/uploads/lsw_reversing2.jpg','SecurityFactory'),(942,1,'Swift로 함수형 프로그래밍 시작하기','https://www.inflearn.com/course/swift-fp','https://cdn.inflearn.com/wp-content/uploads/swift5.jpg','송치원'),(943,1,'웹 게임을 만들며 배우는 자바스크립트','https://www.inflearn.com/course/자바스크립트-게임-개발','https://cdn.inflearn.com/wp-content/uploads/jhy_js_99.jpg','조현영'),(944,1,'해킹 대회를 위한 시스템 해킹 프로토스타 완벽 풀이집','https://www.inflearn.com/course/프로토스타','https://cdn.inflearn.com/wp-content/uploads/boan_protostar.jpg','보안프로젝트'),(945,1,'[유니티 3D] 실전! 생존게임 만들기 - Advanced','https://www.inflearn.com/course/unity-2','https://cdn.inflearn.com/wp-content/uploads/unity-1.jpg','케이디'),(946,1,'윤재성의 처음 시작하는 CSS & CSS3 Tutorials','https://www.inflearn.com/course/css-3','https://cdn.inflearn.com/wp-content/uploads/sc_css.png','소프트캠퍼스'),(947,1,'내 맥북을 자동화하기: 단순반복 작업이여 안녕','https://www.inflearn.com/course/keyboard-maestro','https://cdn.inflearn.com/wp-content/uploads/maestro3.jpg','홍영기'),(948,1,'실전 JSP (renew ver.) - 신입 프로그래머를 위한 강좌','https://www.inflearn.com/course/실전-jsp_renew','https://cdn.inflearn.com/wp-content/uploads/jsp_ver.2018-1.jpg','인프런'),(949,1,'안드로이드 공식 언어 : 코틀린(Kotlin) 시작하기','https://www.inflearn.com/course/next-android-kotlin','https://cdn.inflearn.com/wp-content/uploads/kotlin-1.jpg','Tae-hwan “Taehwan” kwon'),(950,1,'OpenCV + WebApp (얼굴 눈 검출 웹앱만들기)','https://www.inflearn.com/course/opencv-webapp-cv-lecture','https://cdn.inflearn.com/wp-content/uploads/OpenCV-1.jpg','Jeonghyun Kim'),(951,1,'지옥에서 온 Git','https://www.inflearn.com/course/지옥에서-온-git','https://cdn.inflearn.com/wp-content/uploads/git.jpg','Egoing Lee'),(952,1,'캐글 실습으로 배우는 데이터 사이언스','https://www.inflearn.com/course/데이터-사이언스-kaggle','https://cdn.inflearn.com/wp-content/uploads/kaggle.jpg','박조은'),(953,1,'[심화] 앤서블(Ansible)을 깊이 있게 활용하기','https://www.inflearn.com/course/ansible-심화','https://cdn.inflearn.com/wp-content/uploads/ansible-advanced.jpg','조훈(Hoon Jo)'),(954,1,'WEB2 - PHP','https://www.inflearn.com/course/php-기초-강좌','https://cdn.inflearn.com/wp-content/uploads/web2_php.png','Egoing Lee'),(955,1,'[기초] 처음부터 설치하며 배우는 앤서블(Ansible)','https://www.inflearn.com/course/앤서블ansible-기초','https://cdn.inflearn.com/wp-content/uploads/ansible-ad.jpg','조훈(Hoon Jo)'),(956,1,'윈도우 악성코드(malware) 분석 입문 과정','https://www.inflearn.com/course/악성코드분석-입문과정','https://cdn.inflearn.com/wp-content/uploads/Malware_beginner.jpg','보안프로젝트'),(957,1,'밑바닥 부터 시작하는 머신러닝 입문','https://www.inflearn.com/course/파이썬-머신러닝-입문-강좌','https://cdn.inflearn.com/wp-content/uploads/teamlab_mlr.jpg','TeamLab'),(958,1,'[R을 R려줘] R 시각화 기초','https://www.inflearn.com/course/r-시각화-기초','https://cdn.inflearn.com/wp-content/uploads/R-visual1-4.jpg','김승욱'),(959,1,'프로그래밍, 데이터 과학을 위한 파이썬 입문','https://www.inflearn.com/course/python-파이썬-입문-강좌','https://cdn.inflearn.com/wp-content/uploads/python-1.jpg','TeamLab'),(960,1,'만들어 가면서 배우는 JAVA 플레이그라운드','https://www.inflearn.com/course/java-codesquad','https://cdn.inflearn.com/wp-content/uploads/java_playground.png','호눅스'),(961,1,'유니티 게임 개발 (Unity 2D) - 시작부터 배포까지','https://www.inflearn.com/course/유니티-게임-개발-unity','https://cdn.inflearn.com/wp-content/uploads/unitycourse.png','스터디 인코딩'),(962,1,'javascript 로 데스크탑 앱을 - 일렉트론 기초 강좌','https://www.inflearn.com/course/javascript-일렉트론-강좌','https://cdn.inflearn.com/wp-content/uploads/electron3.png','Mark Lee'),(963,1,'정보보안 전문가란? 무엇을 하고 어떻게 준비해야 할까.','https://www.inflearn.com/course/정보보안-전문가','https://cdn.inflearn.com/wp-content/uploads/boan.png','보안프로젝트'),(964,1,'Objective-C 강좌 - 12개 앱 만들면서 배우는 iOS 아이폰 앱 개발','https://www.inflearn.com/course/objective-c-강좌','https://cdn.inflearn.com/wp-content/uploads/objectivec001.jpg','최강사'),(965,1,'AWS (아마존 웹서비스) 가입부터 활용까지','https://www.inflearn.com/course/aws-아마존-웹서비스-가입부터-활용까지','https://cdn.inflearn.com/wp-content/uploads/aws001.jpg','Egoing Lee'),(966,1,'iOS9 & Swift2 12개 앱을 만들면서 배우는 아이폰 앱 개발','https://www.inflearn.com/course/ios9-swift2-아이폰-개발','https://cdn.inflearn.com/wp-content/uploads/ios9_2.jpg','최강사'),(967,1,'자바스크립트 언어 기본 - javascript','https://www.inflearn.com/course/지바스크립트-언어-기본','https://cdn.inflearn.com/wp-content/uploads/js.png','Egoing Lee'),(968,1,'게임 만들면서 배우는 재미있는 스크래치 프로그래밍','https://www.inflearn.com/course/스크래치-scratch','https://cdn.inflearn.com/wp-content/uploads/scratch001.jpg','Egoing Lee'),(969,1,'ATOM Editor 소개 및 사용법','https://www.inflearn.com/course/atom-editor-소개-및-사용법','https://cdn.inflearn.com/wp-content/uploads/atom001.jpg','Egoing Lee'),(970,1,'인터넷 기본 도메인 , 호스트, 포워딩 알아보기','https://www.inflearn.com/course/인터넷-기본-도메인-호스트-포워딩-알아보기','https://cdn.inflearn.com/wp-content/uploads/Creative-process-technology-devices.jpg','Egoing Lee'),(971,1,'웹브라우저 Javascript (자바스크립트)','https://www.inflearn.com/course/javascript-자바스크립트-강좌','https://cdn.inflearn.com/wp-content/uploads/js.png','Egoing Lee'),(972,1,'생활코딩 - HTML 기초','https://www.inflearn.com/course/html-기초','https://cdn.inflearn.com/wp-content/uploads/html.png','Egoing Lee'),(973,1,'따라하면서 배우는 웹애플리케이션 만들기','https://www.inflearn.com/course/웹어플리케이션-강좌','https://cdn.inflearn.com/wp-content/uploads/web3-1.png','Egoing Lee'),(974,1,'씨리얼 토익 - 시험장에서 100% 통하는 700점 RC 공략','https://www.inflearn.com/course/씨리얼-토익-rc-700','https://cdn.inflearn.com/public/courses/326496/cover/e6d58498-5007-4e44-9f15-fc146ed73835','다름에듀'),(975,1,'씨리얼 토익 - 시험장에서 100% 통하는 입문 RC 공략','https://www.inflearn.com/course/씨리얼-토익-rc-입문','https://cdn.inflearn.com/public/courses/326480/cover/ba9089bc-398f-41d5-98d9-c182bff5efb7','다름에듀'),(976,1,'[인공지능 컴퓨터비전] 20장의 사진으로 딥러닝 모델 만들기','https://www.inflearn.com/course/비전공자-인공지능-컴퓨터비전','https://cdn.inflearn.com/public/courses/326473/cover/a541c3f7-c27a-475b-bede-6934f1c46a91','Q쌤'),(977,1,'씨리얼 토익 - 시험장에서 100% 통하는 입문 LC 공략','https://www.inflearn.com/course/씨리얼-토익-lc-입문','https://cdn.inflearn.com/public/courses/326457/cover/7a94e4b3-2d80-4adc-a914-9bb1eeeb3fb6','다름에듀'),(978,1,'씨리얼 오픽 - 이슈주제 STEP 2(16~30강)','https://www.inflearn.com/course/씨리얼-오픽-이슈주제-2','https://cdn.inflearn.com/public/courses/326450/cover/1cc207cb-7a9d-4874-ba17-0f0eaa5c51f6','다름에듀'),(979,1,'라이노 그라스하퍼 C# 디자인 스크립팅','https://www.inflearn.com/course/라이노-그라스하퍼','https://cdn.inflearn.com/public/courses/326408/cover/391594a3-b5e6-4882-b1c4-99a48968a47f','NJ Namju Lee'),(980,1,'[Python 실전] 웹크롤링과 데이터분석 : 전세계 축구 선수 몸값 분석','https://www.inflearn.com/course/웹크롤링-축구선수분석','https://cdn.inflearn.com/public/courses/326406/cover/150871bf-bc44-4a81-a577-c957f2df0a5f','코딩교양스쿨'),(981,1,'씨리얼 오픽 - 돌발주제 STEP 1(01~15강)','https://www.inflearn.com/course/씨리얼-오픽-돌발주제-1','https://cdn.inflearn.com/public/courses/326404/cover/bb72cfdb-8c76-4fe9-9c7a-de09896feb99','다름에듀'),(982,1,'씨리얼 오픽 2급(IM3~IH) 과정','https://www.inflearn.com/course/씨리얼-오픽-ih','https://cdn.inflearn.com/public/courses/326401/cover/bd24a0a6-0da4-46bb-9126-2aa8735b2391','다름에듀'),(983,1,'네이버카페 수익화로 따박따박 월세 받는 법! | 온라인 건물주, 무자본으로 온라인에 내 회사 차리기!','https://www.inflearn.com/course/네이버카페-수익화-무자본창업','https://cdn.inflearn.com/public/courses/326396/cover/a7489a25-0f9a-4879-ab64-f4e529d2d41a','작가 글리쌤'),(984,1,'유니티 쿼터뷰2D 실시간 턴제 스타일 게임 만들기','https://www.inflearn.com/course/유니티-쿼터뷰-턴제-게임','https://cdn.inflearn.com/public/courses/326371/cover/b394bf75-dd05-4d13-935e-d3d0e330c9de','코사트'),(985,1,'Do It! 딥러닝 입문','https://www.inflearn.com/course/딥러닝-입문','https://cdn.inflearn.com/public/courses/326367/cover/e435835a-ee17-4ac5-95d0-935d1c8cd6af','Haesun Park'),(986,1,'[인퓨전]주식 용어 없는 (테크,플랫폼) 투자 가이드','https://www.inflearn.com/course/주식-정보-투자가이드','https://cdn.inflearn.com/public/course-326321-cover/ddae0709-4c9d-42a1-955a-eaa356a8a78a','밀린신문'),(987,1,'[MASTER] 만들면서 배우는 Figma UI Design','https://www.inflearn.com/course/피그마-활용','https://cdn.inflearn.com/public/course-326263-cover/58336ec6-32c9-4924-8a4f-2d67d3fed860','연남동이재용'),(988,1,'Skill-Up! 배워서 바로 쓰는 웹쉘 제작','https://www.inflearn.com/course/웹해킹-웹쉘-제작','https://cdn.inflearn.com/public/course-326254-cover/09ca81a4-4492-4ab6-8d80-31670f3cda01','크리핵티브'),(989,1,'백엔드 개발 스프링부트를 활용한 서버개발 간단하게 배우기','https://www.inflearn.com/course/backend-송자바','https://cdn.inflearn.com/public/course-326205-cover/abb881ca-8463-4ac4-b652-ac67f6efd93e','송자바SONGJAVA'),(990,1,'InDesign CC 2020 제대로 활용하기','https://www.inflearn.com/course/어도비-인디자인-cc-2020','https://cdn.inflearn.com/public/course-326196-cover/786e8edd-bdb1-47af-ab51-c08ca79b9299','유용한 IT 학습'),(991,1,'매월 1000만원 버는 유튜브중개업 운영비법, 국내최초 온라인강의','https://www.inflearn.com/course/유튜브-부동산중개업','https://cdn.inflearn.com/public/course-326104-cover/1a6b21b2-1658-4f60-961c-73522eff9b0a','이사마'),(992,1,'[ISMS-P] ISMSP WIN 크라운 모의고사 과정','https://www.inflearn.com/course/isms-p-모의고사','https://cdn.inflearn.com/public/course-326095-cover/6631516f-c9fa-4989-a009-f809f5e1e55f','ISMS-P WIN'),(993,1,'F6-비전공자·일반인을 위한 기업재무회계의 이해와 활용','https://www.inflearn.com/course/비전공자-일반인-기업재무회계','https://cdn.inflearn.com/public/course-326080-cover/88f41211-1989-419b-8723-daeafb0b5c22','한국CFO스쿨'),(994,1,'PHP 8, 새로운 기능 살펴보기','https://www.inflearn.com/course/php8-new-features','https://cdn.inflearn.com/public/course-326005-cover/4798b800-4e94-4294-88cc-dfd485547b97','정상우'),(995,1,'안드로이드 앱 모의해킹/분석 시작하기 (With.IDA/JEB/Frida)','https://www.inflearn.com/course/안드로이드-모의해킹','https://cdn.inflearn.com/public/course-325984-cover/44c8703a-0733-4c67-80af-6e0107d37751','김태환'),(996,1,'세 살 애기 중국어 [50% 할인 쿠폰]','https://www.inflearn.com/course/중국어-말하기-회화','https://cdn.inflearn.com/public/course-325979-cover/6ebf7355-c9a3-48b6-9195-bd836dae21e1','하루배움 중국어'),(997,1,'QGIS 기초와 Python의 만남','https://www.inflearn.com/course/qgis-파이썬','https://cdn.inflearn.com/public/course-325970-cover/0872f4d9-13c9-4cda-a633-abb1e91909bd','Q쌤'),(998,1,'공무원의 글쓰기 - 최강 시간 절약 꽁수','https://www.inflearn.com/course/공무원-글쓰기','https://cdn.inflearn.com/public/course-325939-cover/262e9a85-cb68-489d-922d-189b8e7dc82b','김지형'),(999,1,'[따라하기만 해!] 스마트스토어 새내기를 위한 완벽 가이드북! (노하우 전자책)','https://www.inflearn.com/course/스마트스토어-가이드북','https://cdn.inflearn.com/public/course-325938-cover/7fa4f823-5691-4bbf-8b5f-83ef77dacf83','프로N잡러 잘살자 궁'),(1000,1,'소인수 분해 알고리즘 완전정복','https://www.inflearn.com/course/소인수분해-알고리즘-파이썬','https://cdn.inflearn.com/public/course-325936-cover/3b2f4343-c0e3-491b-9f3b-a88d4403231b','주니온'),(1001,1,'[소프데이터] 예제로 배우는 기초 SQL','https://www.inflearn.com/course/sql-예제-기초','https://cdn.inflearn.com/public/course-325916-cover/232a79c6-fc4a-4491-80c1-ffd0b33f0e87','소프데이터'),(1002,1,'쉽고 빠르게 익히는 Visio 2013','https://www.inflearn.com/course/오피스튜터-비지오-2013','https://cdn.inflearn.com/public/course-325902-cover/c5e94698-b021-4ea0-98a8-8705068e92cf','오피스튜터'),(1003,1,'쉽고 빠르게 익히는 OneNote 2016','https://www.inflearn.com/course/오피스튜터-원노트-2016','https://cdn.inflearn.com/public/course-325898-cover/2d072b50-8f62-4ad2-bda6-a4f01f2a7ddd','오피스튜터'),(1004,1,'쉽고 빠르게 익히는 Outlook 2013','https://www.inflearn.com/course/오피스튜터-아웃룩-2013','https://cdn.inflearn.com/public/course-325887-cover/540377ff-06b5-46a9-a651-e3a5c2acbddc','오피스튜터'),(1005,1,'쉽고 빠르게 익히는 Outlook 2016','https://www.inflearn.com/course/오피스튜터-아웃룩-2016','https://cdn.inflearn.com/public/course-325881-cover/93919259-6a80-4c08-adde-11dcf9c2c3b1','오피스튜터'),(1006,1,'쉽고 빠르게 익히는 Access 2013','https://www.inflearn.com/course/오피스튜터-액세스-2013','https://cdn.inflearn.com/public/course-325880-cover/c5e814b3-a6f7-4142-92a1-c1de33d4c697','오피스튜터'),(1007,1,'쉽고 빠르게 익히는 Word 2013','https://www.inflearn.com/course/오피스튜터-워드-2013','https://cdn.inflearn.com/public/course-325867-cover/669482ed-514c-4d6d-8ff5-a88f32e38220','오피스튜터'),(1008,1,'쉽고 빠르게 익히는 Word 2016','https://www.inflearn.com/course/오피스튜터-워드-2016','https://cdn.inflearn.com/public/course-325866-cover/e6f0139b-4901-4b70-b243-c6a03e26a566','오피스튜터'),(1009,1,'쉽고 빠르게 익히는 PowerPoint 2013 실무 스킬','https://www.inflearn.com/course/파워포인트-2013-실무','https://cdn.inflearn.com/public/course-325855-cover/c338b98e-1376-40fd-b8dd-1219338e2ad2','오피스튜터'),(1010,1,'쉽고 빠르게 익히는 PowerPoint 2016','https://www.inflearn.com/course/오피스튜터-파워포인트-2016','https://cdn.inflearn.com/public/course-325845-cover/1eb36013-5d27-4e75-a421-d935f6e3262a','오피스튜터'),(1011,1,'Excel 2016 피벗테이블을 이용한 데이터 집계와 분석','https://www.inflearn.com/course/엑셀-2016-피벗테이블','https://cdn.inflearn.com/public/course-325841-cover/d73ad91e-86d9-44c6-8f07-2475e183da98','오피스튜터'),(1012,1,'가볍게 따라하는 Excel 2016 찾기/참조 함수','https://www.inflearn.com/course/엑셀-2016-찾기-참조-함수','https://cdn.inflearn.com/public/course-325839-cover/40485e91-d6b1-4e30-acc0-3d1a37da3d56','오피스튜터'),(1013,1,'쉽고 빠르게 익히는 Excel 2013 VBA','https://www.inflearn.com/course/엑셀-2013-vba','https://cdn.inflearn.com/public/course-325817-cover/883d7dc8-a425-400f-896a-90ed5df123ab','오피스튜터'),(1014,1,'업무 효율성 향상을 위한 Excel 2013 실무 함수','https://www.inflearn.com/course/엑셀-실무-함수-2013','https://cdn.inflearn.com/public/course-325813-cover/8c8af9b0-244e-4092-af17-4d71e73cbab6','오피스튜터'),(1015,1,'파이썬으로 배우는 알고리즘 기초','https://www.inflearn.com/course/파이썬-알고리즘-기초','https://cdn.inflearn.com/public/course-325806-cover/0e0d07a7-840c-4d01-907c-626e9d6b97d5','주니온'),(1016,1,'실용적인 웹 프로그래밍','https://www.inflearn.com/course/실용적인-웹-프로그래밍','https://cdn.inflearn.com/public/course-325803-cover/41972399-0918-493c-98e6-0e2552525894','설리번 프로젝트'),(1017,1,'CKA(공인 쿠버네티스 관리자) 잘 준비하는 법','https://www.inflearn.com/course/공인-쿠버네티스-관리자','https://cdn.inflearn.com/public/course-325790-cover/a4202882-e8c0-4307-902f-886f145ab9d9','조훈(Hoon Jo)'),(1018,1,'[김왼손의 왼손코딩] 1일 1파이썬: 초급자를 위한 파이썬 50제','https://www.inflearn.com/course/왼손코딩-파이썬-50제','https://cdn.inflearn.com/public/courses/325789/cover/5aa75090-0cc5-4582-93d1-076901018688','김왼손의 왼손코딩'),(1019,1,'쉽고 빠르게 익히는 Excel 파워 피벗 & DAX','https://www.inflearn.com/course/엑셀-파워피벗-dax','https://cdn.inflearn.com/public/course-325785-cover/8af1ba54-4c7c-45dd-870c-d1220687c6c6','오피스튜터'),(1020,1,'나는 게임으로 공부한다!','https://www.inflearn.com/course/설리번프로젝트-게임개발','https://cdn.inflearn.com/public/course-325781-cover/b2840c30-7490-4977-9ed2-12cf0a003587','설리번 프로젝트'),(1021,1,'실전! 웹사이트제작! Step by Step! (한국소비자원 소비자시대- 레이아웃제작 기초)','https://www.inflearn.com/course/웹사이트제작-레이아웃-기초','https://cdn.inflearn.com/public/course-325725-cover/82d5800a-81ab-435c-80fd-3fdb9f17851f','J.영'),(1022,1,'Microsoft 지능형 공격 대응 방안 - 고급 메일 보안 ATP의 이해와 정책 설정','https://www.inflearn.com/course/비즈니스-이메일-보안-atp','https://cdn.inflearn.com/public/course-325700-cover/34959ca4-9087-4556-b651-23fc2ed8b800','오마스'),(1023,1,'Cinema4D_ 운동화 모델링','https://www.inflearn.com/course/시포디-폴리곤-운동화-모델링','https://cdn.inflearn.com/public/course-325673-cover/8162c609-1243-47b2-8ec3-aae995510aee','맨땅'),(1024,1,'처음하는 파이썬 데이터 분석 [전처리, pandas, 시각화까지 전과정 기본 기술 쉽게 익히기]','https://www.inflearn.com/course/파이썬-데이터분석-전처리-판다스-시각화','https://cdn.inflearn.com/public/course-325576-cover/75d85753-8e0b-40f3-9f11-ca43e70c5200','잔재미코딩'),(1025,1,'Teams에 이용중인 다른 서비스들을 연결해 편하게 업무하기','https://www.inflearn.com/course/teams-서비스-연결-탭-커넥터','https://cdn.inflearn.com/public/course-325550-cover/154a1264-49af-4622-b16e-a65acf525a67','오마스'),(1026,1,'Linux Command-Line 명령어 기초 배우기','https://www.inflearn.com/course/리눅스-커맨드라인-명령어-기초','https://cdn.inflearn.com/public/course-325534-cover/14e664e4-9dcf-47d1-819e-e8b76aa474c9','코드바나나'),(1027,1,'MSSQL Server 2016 기반의 데이터베이스 입문에서 활용까지 Part.2','https://www.inflearn.com/course/mssql-데이터베이스-파트2','https://cdn.inflearn.com/public/course-325528-cover/6b5829cd-ec0c-4282-a285-95f67f3d1c88','유용한 IT 학습'),(1028,1,'MSSQL Server 2016 기반의 데이터베이스 입문에서 활용까지 Part.3','https://www.inflearn.com/course/mssql-데이터베이스-파트3','https://cdn.inflearn.com/public/course-325527-cover/6ce9301c-6e15-4b33-b2e4-a66d33402e97','유용한 IT 학습'),(1029,1,'실무로 배우는 Photoshop CC 2020','https://www.inflearn.com/course/포토샵-cc-2020-실무','https://cdn.inflearn.com/public/course-325524-cover/c5d65bdd-df6d-4c1d-b1a8-af172bbd1a1a','유용한 IT 학습'),(1030,1,'MSSQL Server 2016 기반의 데이터베이스 입문에서 활용까지 Part.1','https://www.inflearn.com/course/mssql-데이터베이스-파트1','https://cdn.inflearn.com/public/course-325520-cover/c939cb2a-46e0-459b-8799-73e819ebb81b','유용한 IT 학습'),(1031,1,'이부일의 R릴레오 시즌1 (실무편)','https://www.inflearn.com/course/이부일-r릴레오-시즌1-실무','https://cdn.inflearn.com/public/course-325518-cover/2c04c4ad-8580-4f01-ad1a-6ab1b8597046','이부일'),(1032,1,'슬기로운 재택근무를 위한 MS Teams 활용법','https://www.inflearn.com/course/재택근무-ms-teams-활용','https://cdn.inflearn.com/public/course-325509-cover/3247cb79-84bb-40a2-9314-7536fc4b2ca6','오마스'),(1033,1,'파이썬 웹 개발(Flask, SQLAlchemy 이용)','https://www.inflearn.com/course/파이썬-웹개발-플라스크','https://cdn.inflearn.com/public/courses/325473/course_cover/9e642c14-5104-4163-9fb6-30526dbbbbcb/python-flask-webdev-eng.png','최광성'),(1034,1,'당신도 특급 PR러, 아무도 알려주지 않는 홍보와 PR','https://www.inflearn.com/course/픗픗-홍보-pr-스타트업','https://cdn.inflearn.com/public/courses/325460/course_cover/69cc7962-ccc1-45d4-b6cd-0d8bda6b5423/ptpt-pr-eng.jpg','픗픗 아카데미'),(1035,1,'고객이 반응하는 콘텐츠를 만들어내는 방법','https://www.inflearn.com/course/픗픗-콘텐츠마케팅','https://cdn.inflearn.com/public/courses/325459/course_cover/8b18c9e4-7cdf-44bf-a342-7b1a78524514/ptpt-contentsmarketing-eng.png','픗픗 아카데미'),(1036,1,'정보보안 패스파인더','https://www.inflearn.com/course/정보보안-패스파인더','https://cdn.inflearn.com/public/course-325338-cover/2e714603-293d-4146-9fc1-3d70cff5edb0','제주코딩베이스캠프'),(1037,1,'애프터이펙트 시즌2 에피소드1 3D를 만나다!','https://www.inflearn.com/course/애프터이펙트-시즌2-3D','https://cdn.inflearn.com/public/courses/325298/course_cover/dbb6d103-b272-448b-ba47-6cc445d16dce/dmy-ae2-1.jpg','디마스터 디마영'),(1038,1,'Windows PowerShell 기초 배우기','https://www.inflearn.com/course/파워셸-기초','https://cdn.inflearn.com/public/course-325284-cover/1b6ff551-63ce-4021-88c5-0860661bf6e6','코드바나나'),(1039,1,'프로일잘러가 되기 위한 프로젝트 및 할 일 관리 - MS Planner','https://www.inflearn.com/course/프로일잘러-프로젝트-할일-관리-MS-Planner','https://cdn.inflearn.com/public/courses/325250/course_cover/3b76e82e-e32e-4ac0-8be7-2dae67ae9f47/omas-planner.jpg','오마스'),(1040,1,'네이버 카페 운영으로 월 300벌기(온라인 건물주 되어 평생 연금 받자)','https://www.inflearn.com/course/네이버-카페-운영-300-벌기','https://cdn.inflearn.com/public/course-325189-cover/30d39812-59ff-4352-94a4-3650ceb94df2','임섭규'),(1041,1,'블록체인 De-fi를 활용하는 이더리움 Dapp 개발','https://www.inflearn.com/course/defi-ethereum-dapp','https://cdn.inflearn.com/public/courses/325176/course_cover/7656b5b0-bba3-42ae-99b4-ce316932693f/logo.png','coldmind'),(1042,1,'비개발자를 위한 RPA 강의 (UiPath 기본편)','https://www.inflearn.com/course/따라하며-배우는-rpa-uipath-기본','https://cdn.inflearn.com/public/course-325042-cover/b27ca076-e031-4810-a661-ba1421177323','코코아소프트'),(1043,1,'머신러닝 처음 시작하기 (기초 원리 + 초급 실습)','https://www.inflearn.com/course/머신러닝-처음-시작하기','https://cdn.inflearn.com/public/courses/325031/course_cover/5f8675ac-631d-407b-a62d-bd0d88bbe33d/first-machine-learning-eng.png','유용한 IT 학습'),(1044,1,'투자대비 47배 수익얻는 원페이지 머니머신 만들기','https://www.inflearn.com/course/온라인-월세-원페이지-수익화-시스템','https://cdn.inflearn.com/public/course-324979-cover/f8377c64-75b6-4260-b34d-9107d5c1c800','인디라'),(1045,1,'부트스트랩(BOOTSTRAP)을 활용한 반응형 웹페이지 만들기','https://www.inflearn.com/course/rwd-bootstrap','https://cdn.inflearn.com/public/courses/324868/course_cover/56af09d1-8863-473b-8413-7c246dbe90e4/bootstrap-js.png','유용한 IT 학습'),(1046,1,'[애플 공식 교재] iOS 앱 만들기 Part1','https://www.inflearn.com/course/ios-앱개발-스위프트-1','https://cdn.inflearn.com/public/courses/324841/course_cover/00c5f4dc-542e-43c8-a894-91557f002f1c/AppDev_P1.png','코더스하이'),(1047,1,'MOS Word Core 2016 자격증 따기','https://www.inflearn.com/course/mos-word-core-2016','https://cdn.inflearn.com/public/courses/324791/course_cover/6af934d2-02d4-4410-a25f-bebfcd415a25/mos-word-core-eng.png','유용한 IT 학습'),(1048,1,'Tip으로 배우는 엑셀(Excel)','https://www.inflearn.com/course/팁으로-배우는-엑셀','https://cdn.inflearn.com/public/courses/324773/course_cover/f962cd15-f990-40cc-8945-0774ed980a77/excel-tip-eng.png','유용한 IT 학습'),(1049,1,'쉽게 따라하는 Vray For SketchUP','https://www.inflearn.com/course/vray-for-sketchup','https://cdn.inflearn.com/public/courses/324764/course_cover/32906edf-d3d1-4b3d-b99c-390ce4cc1d16/vray-sketchup.png','유용한 IT 학습'),(1050,1,'쉽게 따라하는 Revit 2019 응용','https://www.inflearn.com/course/revit-2019-advanced','https://cdn.inflearn.com/public/courses/324762/course_cover/57c93194-cb9b-4c69-85af-5c1fbd305796/revit2019-advanced-eng.png','유용한 IT 학습'),(1051,1,'쉽게 따라하는 Enscape for Revit','https://www.inflearn.com/course/엔스케이프-레빗','https://cdn.inflearn.com/public/courses/324756/course_cover/98814ae1-7fd3-4cb2-a9fb-f9c8c04e069c/enscape-revit.png','유용한 IT 학습'),(1052,1,'Motion 5 기초부터 템플릿 만들기 까지!','https://www.inflearn.com/course/Motion5-기초부터-템플릿만들기','https://cdn.inflearn.com/public/courses/324730/course_cover/c7e7138e-66ad-428f-9140-71f30b4e5855/Untitled-2.jpg','이감독'),(1053,1,'After Effects CC 2017와 CINEMA 4D 작업 연동의 입문','https://www.inflearn.com/course/애프터이펙트-시네마4d','https://cdn.inflearn.com/public/courses/324708/course_cover/629d0836-6ee4-4f2d-948b-06f554fdfcae/c4d-ae.png','유용한 IT 학습'),(1054,1,'PowerDirector 17 (파워디렉터) 배우기','https://www.inflearn.com/course/파워디렉터-17','https://cdn.inflearn.com/public/courses/324700/course_cover/8937efd4-6fd7-4f3d-98ee-a3fbeb7386a2/powerdirector-eng.png','유용한 IT 학습'),(1055,1,'Adobe Premiere Pro CC 2018, 2019 영상편집의 입문 Part.1','https://www.inflearn.com/course/프리미어-입문-1','https://cdn.inflearn.com/public/courses/324698/course_cover/913d2b3a-c1a0-4565-ab14-8038a55535f0/premiere-beginner-1-eng.png','유용한 IT 학습'),(1056,1,'왕초보를 위한 Adobe Photoshop CC 2019 입문자 가이드','https://www.inflearn.com/course/왕초보-포토샵-입문','https://cdn.inflearn.com/public/courses/324688/course_cover/39808e79-3d1f-4420-8f60-948b94aff15f/wangchobo-photoshop-eng.png','유용한 IT 학습'),(1057,1,'나도 AWS에 서버 구축해보자!','https://www.inflearn.com/course/aws-서버-구축-시작','https://cdn.inflearn.com/public/courses/324679/course_cover/743637d4-4cc1-40e6-8bd5-553a33b2c81b/sth_aws.png','월리'),(1058,1,'Arnold Renderer for Maya Basic','https://www.inflearn.com/course/마야-초급자를-위한-아놀드-렌더러','https://cdn.inflearn.com/public/courses/324656/course_cover/18851883-c809-4e41-b084-95883d02e65c/arnold-renderer-eng.png','유용한 IT 학습'),(1059,1,'Autodesk Maya 3D 그래픽의 입문 Part.3 Rendering','https://www.inflearn.com/course/마야-입문-3','https://cdn.inflearn.com/public/courses/324654/course_cover/80892800-10d7-4c43-a04b-0c356261ec56/mayaitgopart3-eng.png','유용한 IT 학습'),(1060,1,'엑셀 기초부터 고급까지','https://www.inflearn.com/course/엑셀-기초부터-고급까지','https://cdn.inflearn.com/public/courses/324634/course_cover/c7be72c9-fda4-4268-ae61-74b066d82c3c/excel-basic-advance-eng.png','루미의 컴퓨터 강좌'),(1061,1,'핵심 강좌! Cocos Creator 2D 게임 개발','https://www.inflearn.com/course/CocosCreator-2D게임개발-핵심강좌','https://cdn.inflearn.com/public/courses/324623/course_cover/f5226bbf-28ea-41b1-9cc2-468d85506a60/inflearn.png','이재환'),(1062,1,'스프링 시큐리티 - Spring Boot 기반으로 개발하는 Spring Security','https://www.inflearn.com/course/코어-스프링-시큐리티','https://cdn.inflearn.com/public/course-324591-cover/fd1a1901-d1cb-4cf3-8335-3783693eb545','정수원'),(1063,1,'따라하며 배우는 노드, 리액트 시리즈 - 유튜브 사이트 만들기','https://www.inflearn.com/course/따라하며-배우는-노드-리액트-유튜브-만들기','https://cdn.inflearn.com/public/courses/324582/course_cover/1ead1042-97cc-41f2-bc73-a6e86ae86a4d/nodeReact.png','John Ahn'),(1064,1,'성공적인 SQL 인젝션 공격을 위한, SQL 기본 문법','https://www.inflearn.com/course/SQL-인젝션-공격-기본-문법','https://cdn.inflearn.com/public/courses/324577/course_cover/b3cbb825-f59f-4a3f-814a-b5aa7a3b2f04/sql_injection_01_2.png','크리핵티브'),(1065,1,'웹 개발 슈퍼 기초 (HTML, CSS, Javascript)','https://www.inflearn.com/course/웹-개발-기초-입문','https://cdn.inflearn.com/public/courses/324571/course_cover/4b3b7d53-db93-42cc-b359-ca081e3fc99c/chan_htmlcssjs.png','개복치개발'),(1066,1,'초보자도 할 수 있는 웹 취약점 진단(주요정보통신기반시설)','https://www.inflearn.com/course/웹취약점-진단-ISMS','https://cdn.inflearn.com/public/course-324535-cover/a9ec97ea-1ae5-4a5d-9c67-c910fb39c096','존찬'),(1067,1,'에프터이펙트를 활용한 캐릭터 리깅 방법. (with Duik Bassel)','https://www.inflearn.com/course/에프터이펙트-캐릭터-리깅','https://cdn.inflearn.com/public/courses/324493/course_cover/f9d04591-005a-485d-a8e2-1c23e266656b/%EB%A6%AC%EA%B9%85%EC%86%8C%EA%B0%9C2.jpg','맨땅'),(1068,1,'하울의 안드로이드 인스타그램 클론 만들기','https://www.inflearn.com/course/인스타그램만들기-안드로이드','https://cdn.inflearn.com/public/courses/324447/course_cover/d5e228ee-b22a-4d19-aa86-85105661b8f6/Howlstargram_2.png','하울'),(1069,1,'안드로이드 루팅(Rooting) 탐지와 우회','https://www.inflearn.com/course/안드로이드-루팅-탐지-우회','https://cdn.inflearn.com/public/courses/324396/course_cover/b50ff7e7-4710-4c55-b171-ce0178c583bd/android_root_UX.png','개복치개발'),(1070,1,'언리얼 엔진4 (Unreal Engine) 3D 횡스크롤 게임 만들기','https://www.inflearn.com/course/언리얼-횡스크롤-게임만들기','https://cdn.inflearn.com/public/courses/324360/course_cover/86050d8a-4df6-40c9-834b-8798879dd066/%E1%84%8B%E1%85%A5%E1%86%AB%E1%84%85%E1%85%B5%E1%84%8B%E1%85%A5%E1%86%AF_%E1%84%92%E1%85%AC%E1%86%BC%E1%84%89%E1%85%B3%E1%84%8F%E1%85%B3%E1%84%85%E1%85%A9%E1%86%AF.png','daehee Hwang'),(1071,1,'윤재성의 스프링 프레임워크 개발자를 위한 실습을 통한 입문 과정','https://www.inflearn.com/course/스프링-프레임워크-입문','https://cdn.inflearn.com/public/courses/324292/course_cover/4f6403ce-0749-47c5-98d9-7158d8c2401c/%E1%84%89%E1%85%A9%E1%84%8F%E1%85%A2%E1%86%B7_%E1%84%89%E1%85%B3%E1%84%91%E1%85%B3%E1%84%85%E1%85%B5%E1%86%BC.png','소프트캠퍼스'),(1072,1,'플랫폼 비즈니스 제대로 이해하기','https://www.inflearn.com/course/플랫폼-비즈니스-이해-개발','https://cdn.inflearn.com/public/courses/324179/course_cover/5a29aa1f-bf85-489b-819b-6774a3408259/platfrom-business.png','김재훈'),(1073,1,'SwiftUI 개념 익히기','https://www.inflearn.com/course/SwiftUI-개념-iOS','https://cdn.inflearn.com/public/courses/324172/course_cover/23361a3e-0a71-49e9-b372-053170c1331c/swiftui-tutorial.png','Hohyeon Moon'),(1074,1,'기업IT 기초개념강좌, 쉐어드아이티CLASS','https://www.inflearn.com/course/기업IT기초개념-쉐어드아이티','https://cdn.inflearn.com/public/courses/324171/course_cover/e6c272f0-fd74-4d30-a781-fac1c1ab15eb/%EC%89%90%EC%96%B4%EB%93%9C%EC%95%84%EC%9D%B4%ED%8B%B0CLASS%20%EC%9D%B8%ED%94%84%EB%9F%B0%20%EB%B0%B0%EB%84%88%20%281%29.jpg','쉐어드IT'),(1075,1,'퍼포먼스 올리는 검색마케팅 : SEO, 검색광고, 블로그','https://www.inflearn.com/course/검색-마케팅-SEO-블로그','https://cdn.inflearn.com/public/courses/324153/course_cover/82fb9612-5214-432a-9fe8-27bb8835ac6a/%EB%A7%88%EC%BC%80%ED%8C%85_%EC%9D%B4%ED%99%98%EC%84%A0_%EA%B2%80%EC%83%89%EB%A7%88%EC%BC%80%ED%8C%85.jpg','픗픗 아카데미'),(1076,1,'누구나 할 수 있다! 이모티콘 만들기','https://www.inflearn.com/course/디자인-이모티콘-소콘소콘','https://cdn.inflearn.com/public/courses/324152/course_cover/d22e9571-9687-4443-b476-268a58d0c7b2/%EC%9D%B8%ED%94%84%EB%9F%B0.jpg','소콘소콘'),(1077,1,'누구나 할 수 있는 안드로이드 앱 개발 - 2 (Kotlin)','https://www.inflearn.com/course/안드로이드-앱개발-kotlin2','https://cdn.inflearn.com/public/courses/324148/course_cover/7dde2f7a-24ba-4f77-b26d-2267054dc090/%E1%84%83%E1%85%A9%E1%86%BC%E1%84%89%E1%85%A2%E1%86%BC%E1%84%83%E1%85%A9%E1%84%8B%E1%85%A2%E1%86%B8%E1%84%80%E1%85%A2%E1%84%87%E1%85%A1%E1%86%AF.png','개복치개발'),(1078,1,'Web4 - Express-Session-Auth','https://www.inflearn.com/course/web4-Express-Session-Auth','https://cdn.inflearn.com/public/courses/324140/course_cover/8321ddf2-5046-454a-bda1-f380fb3de894/web4_session-auth.png','Egoing Lee'),(1079,1,'블록체인 Dapp 개발에 트러플 활용하기_기본편','https://www.inflearn.com/course/Dapp-Truffle-blockchain-basic','https://cdn.inflearn.com/public/courses/324127/course_cover/ff96ae3e-9e5f-46e3-9bea-8d0a79cc0ed0/logo-truffle.jpg','coldmind'),(1080,1,'올웨더 전략, 자산 배분의 정석','https://www.inflearn.com/course/distribution-of-property','https://cdn.inflearn.com/public/courses/324105/course_cover/4b0c525f-6f0c-417c-b51a-c716ac9a14b8/%EC%A3%BC%EC%8B%9D-%EA%B9%80%EB%8F%99%EC%A3%BC-%EC%9E%90%EC%82%B0%EB%B0%B0%EB%B6%84.jpg','픗픗 아카데미'),(1081,1,'살아남는 소셜 미디어 마케팅: 페이스북&인스타그램','https://www.inflearn.com/course/소셜_미디어_마케팅','https://cdn.inflearn.com/public/courses/324080/course_cover/95edc133-e723-4227-a739-be7d7a6cc733/%EB%A7%88%EC%BC%80%ED%8C%85-%EA%B9%80%ED%98%9C%EC%97%B0-%EC%86%8C%EC%85%9C%EB%AF%B8%EB%94%94%EC%96%B4%EB%A7%88%EC%BC%80%ED%8C%85.jpg','픗픗 아카데미'),(1082,1,'누구나 시작할 수 있는 네트워크 Step 1 - 네트워크 모델','https://www.inflearn.com/course/네트워크-1-네트워크-모델','https://cdn.inflearn.com/public/courses/324078/course_cover/ee970880-0b0c-45bd-992f-f9c9eb956e60/jc_network1.png','존찬'),(1083,1,'에프터이펙트를 시작해보자','https://www.inflearn.com/course/애프터이펙트-입문-aftereffect','https://cdn.inflearn.com/public/courses/324068/course_cover/d3794d90-c9fe-4408-8b84-dcc5f602775d/jl_ae.png','jinlee982005'),(1084,1,'파이썬으로 영화 예매 오픈 알리미 만들기','https://www.inflearn.com/course/영화예매-파이썬','https://cdn.inflearn.com/public/courses/324067/course_cover/2f52720f-0a32-4721-8f20-7346d00096ef/hsw_python.png','한승우'),(1085,1,'[애플 공식 교재] iOS 앱 만들기 입문 (리뷰포함)','https://www.inflearn.com/course/iOS-App-Dev-Review','https://cdn.inflearn.com/public/courses/324062/course_cover/77a50836-1aec-41a8-995a-701013e3f4eb/introappdev_cover_01.png','코더스하이'),(1086,1,'실전 작은 마케팅(2)','https://www.inflearn.com/course/마케팅-ㅍㅍㅅㅅ-작은마케팅','https://cdn.inflearn.com/public/courses/324051/course_cover/b26fd43b-e405-49dd-bb0a-236f4f8fcf31/%EC%97%90%EC%96%B4%ED%81%B4%EB%9E%98%EC%8A%A4_%EC%8B%A4%EC%A0%842.jpg','픗픗 아카데미'),(1087,1,'파이썬 레시피 - 웹 활용 입문편 (전자책 포함)','https://www.inflearn.com/course/파이썬-레시피-활용','https://cdn.inflearn.com/public/courses/324048/course_cover/a2a41bc4-d093-4a91-b772-ea16bfc7acab/python_semicircle.png','반원'),(1088,1,'챌린지로 알아보는 디지털포렌식 해킹 대회 준비 (기초)','https://www.inflearn.com/course/디지털포렌식_챌린지','https://cdn.inflearn.com/public/courses/324047/course_cover/84de1478-399d-4e6f-83f1-a8db5de5be6a/boan_forensic.png','보안프로젝트'),(1089,1,'Angular(2+) Front에서 Back까지 - 앵귤러 기본','https://www.inflearn.com/course/Angular','https://cdn.inflearn.com/public/courses/324038/course_cover/ad135c4f-a879-4665-9bac-964ddb0e08a6/kky_angular.png','김영태'),(1090,1,'오픈소프트웨어 2.5D CNC 메이커캠 (Makercam) 강의','https://www.inflearn.com/course/CNC메이커캠','https://cdn.inflearn.com/public/courses/324018/course_cover/25abd80d-8544-4b55-afe7-8703210b4e6e/gremaza_makercam.png','gremaza'),(1091,1,'리눅스 IPC 프로그래밍 - 이론과 실습','https://www.inflearn.com/course/리눅스ipc프로그래밍','https://cdn.inflearn.com/public/courses/324014/course_cover/829e31a6-d191-4774-8362-0834f244874d/ktw_IPC.png','ProgCoach4U'),(1092,1,'Vue.js - Django 연동 웹 프로그래밍','https://www.inflearn.com/course/vue-js-2','https://cdn.inflearn.com/wp-content/uploads/ksh_vuejs.jpg','김석훈'),(1093,1,'왕초보 블록체인 개념 완벽 이해하기(with 자바)','https://www.inflearn.com/course/blockchain-2','https://cdn.inflearn.com/wp-content/uploads/blockchain3.jpg','푸샵맨 코딩스터디'),(1094,1,'정보보안 및 개인정보보호 특강','https://www.inflearn.com/course/정보보안-및-개인정보보호','https://cdn.inflearn.com/wp-content/uploads/jyh_security-1.jpg','장용하'),(1095,1,'스크래치 코딩으로 배우는 수학의 개념과 원리','https://www.inflearn.com/course/스크래치','https://cdn.inflearn.com/wp-content/uploads/scratch_coding13.jpg','노마드크리에이터'),(1096,1,'맥으로 배우는 윈도우즈 포렌식','https://www.inflearn.com/course/forensic-2','https://cdn.inflearn.com/wp-content/uploads/forensic-3.jpg','dorumugs'),(1097,1,'클라우드 서비스 AWS','https://www.inflearn.com/course/aws-2','https://cdn.inflearn.com/wp-content/uploads/AWS-1.png','Egoing Lee'),(1098,1,'버전 관리 시스템 Git','https://www.inflearn.com/course/git-2','https://cdn.inflearn.com/wp-content/uploads/git-4.jpg','Egoing Lee'),(1099,1,'윤재성의 Oracle SQL Database 11g PL/SQL Developer','https://www.inflearn.com/course/oracle','https://cdn.inflearn.com/wp-content/uploads/sc_oracle.jpg','소프트캠퍼스'),(1100,1,'윤재성의 처음 시작하는 C언어','https://www.inflearn.com/course/c','https://cdn.inflearn.com/wp-content/uploads/sc_C-1.jpg','소프트캠퍼스'),(1101,1,'대회 문제 풀이로 이해하는 디스크 포렌식 분석','https://www.inflearn.com/course/disk-forensic-analysis','https://cdn.inflearn.com/wp-content/uploads/Forensic.png','보안프로젝트'),(1102,1,'HAL, CubeMX, TrueSTUDIO를 이용한 STM32F4 무료 강좌','https://www.inflearn.com/course/stm32f4','https://cdn.inflearn.com/wp-content/uploads/ST-2.png','ChrisP'),(1103,1,'윤재성의 Start Google Angular.js 앵귤러 과정','https://www.inflearn.com/course/angular-js','https://cdn.inflearn.com/wp-content/uploads/sc_angular_E-5.jpg','소프트캠퍼스'),(1104,1,'[R을 R려줘] R시각화 중급','https://www.inflearn.com/course/r시각화','https://cdn.inflearn.com/wp-content/uploads/R-visual2-1.jpg','김승욱'),(1105,1,'Electron과 NodeJS 그리고 Socket.io를 이용한 채팅 어플리케이션 개발','https://www.inflearn.com/course/electron-2','https://cdn.inflearn.com/wp-content/uploads/electron-2.jpg','김지운'),(1106,1,'3ds max Unwrap UVW 해부 강좌','https://www.inflearn.com/course/unwrap-uvw-map','https://cdn.inflearn.com/wp-content/uploads/3ds.jpg','이규태 (역지사지)'),(1107,1,'Autocad 버전에 관계없이 완성하기','https://www.inflearn.com/course/autocad-3','https://cdn.inflearn.com/wp-content/uploads/autocad3.jpg','이규태 (역지사지)'),(1108,1,'윤재성의 처음 시작하는 jQuery Programming','https://www.inflearn.com/course/jquery-programming','https://cdn.inflearn.com/wp-content/uploads/jq_softcam.png','소프트캠퍼스'),(1109,1,'실무중심의 HTML5 시각화 프로그래밍','https://www.inflearn.com/course/html5-시각화','https://cdn.inflearn.com/wp-content/uploads/data.jpg','트레이딩온'),(1110,1,'모두를 위한 프로세스 마이닝','https://www.inflearn.com/course/process-mining','https://cdn.inflearn.com/wp-content/uploads/process.jpg','이보경'),(1111,1,'해외취업 ASP.NET Core 웹개발 기본 강좌','https://www.inflearn.com/course/asp-net-core','https://cdn.inflearn.com/wp-content/uploads/dotnetcore-1.jpg','SEJONG IT EDU'),(1112,1,'CSS에 날개를 달아주는 Sass (SCSS)','https://www.inflearn.com/course/css에-날개를-달아주는-sass-scss','https://cdn.inflearn.com/wp-content/uploads/sass.jpg','DEvSIGNER'),(1113,1,'R 프로그램 - 시즌2','https://www.inflearn.com/course/r-프로그래밍-시즌2','https://cdn.inflearn.com/wp-content/uploads/rs2.jpg','seounglim45'),(1114,1,'WEB3 - PHP & MySQL','https://www.inflearn.com/course/web3-php-mysql','https://cdn.inflearn.com/wp-content/uploads/phpmysql.jpg','Egoing Lee'),(1115,1,'배웠는데 못 쓰겠는 CSS 구출기','https://www.inflearn.com/course/css-심화-강좌','https://cdn.inflearn.com/wp-content/uploads/css-rescue3.jpg','sonack'),(1116,1,'직장인을 위한 프로그래밍 입문과 업무자동화 활용','https://www.inflearn.com/course/python-파이썬-자동화','https://cdn.inflearn.com/wp-content/uploads/python_automation2.jpg','SungYong Lee'),(1117,1,'Spring framework 개발 환경 구축하기와 Dao 리팩토링하기','https://www.inflearn.com/course/spring-framework','https://cdn.inflearn.com/wp-content/uploads/spring-framework.jpg','Kyeongrok Kim'),(1118,1,'직접 등록하는 iMessage Sticker','https://www.inflearn.com/course/imessage-sticker','https://cdn.inflearn.com/wp-content/uploads/imessage.jpg','eungen joo'),(1119,1,'DATABASE 1&2 - MySQL','https://www.inflearn.com/course/database-2-mysql-강좌','https://cdn.inflearn.com/wp-content/uploads/database2_mysql.png','Egoing Lee'),(1120,1,'WEB2 - JavaScript','https://www.inflearn.com/course/web2-javascript','https://cdn.inflearn.com/wp-content/uploads/web2-js-1.png','Egoing Lee'),(1121,1,'[R을 R려줘] R 중급','https://www.inflearn.com/course/r을-r려줘-r-중급','https://cdn.inflearn.com/wp-content/uploads/r-inter1.jpg','김승욱'),(1122,1,'앱 12개를 만들며 배우는 Swift4 & iOS11 아이폰 iOS 개발 강좌','https://www.inflearn.com/course/swift4-스위프트-ios-개발','https://cdn.inflearn.com/wp-content/uploads/ios11.jpg','최강사'),(1123,1,'타입스크립트 코리아 : React with TypeScript 세미나','https://www.inflearn.com/course/react-with-typescript','https://cdn.inflearn.com/wp-content/uploads/React_with_TypeScript_inflearn-1.png','Mark Lee'),(1124,1,'마인크래프트 게임을 활용한 파이썬 프로그래밍 완벽 이해','https://www.inflearn.com/course/마인크래프트-파이썬-프로그래밍','https://cdn.inflearn.com/wp-content/uploads/minecraft2.png','보안프로젝트'),(1125,1,'ELK 스택 (ElasticSearch, Logstash, Kibana) 으로 데이터 분석','https://www.inflearn.com/course/elk-스택-데이터-분석','https://cdn.inflearn.com/wp-content/uploads/elkstack.jpg','Minsuk Heo'),(1126,1,'악성코드 분석을 위한 메모리 포렌식 (memory forensic)','https://www.inflearn.com/course/메모리-포렌식-memory-forensic','https://cdn.inflearn.com/wp-content/uploads/memoryforensic.jpg','보안프로젝트'),(1127,1,'IT 직장인들을 위한 책쓰기 강의','https://www.inflearn.com/course/직장인들을-위한-책쓰기-강의','https://cdn.inflearn.com/wp-content/uploads/writer.jpg','보안프로젝트'),(1128,1,'퍼블리셔, 신입 프론트 개발자를 위한 실무에서 써먹는 실전 jQuery 설명서','https://www.inflearn.com/course/실무에-필요한-jquery-설명서','https://cdn.inflearn.com/public/course-35780-cover/30770bb8-ac6a-4df2-b25d-75d41c01fd86','개발로짜'),(1129,1,'CSS 기본부터 활용까지','https://www.inflearn.com/course/css-기본부터-활용까지','https://cdn.inflearn.com/wp-content/uploads/css.jpg','Egoing Lee'),(1130,1,'React & Express 를 이용한 웹 어플리케이션 개발하기','https://www.inflearn.com/course/react-강좌-velopert','https://cdn.inflearn.com/wp-content/uploads/react.png','velopert(김 민준)'),(1131,1,'Node.Js 활용하기','https://www.inflearn.com/course/node-js-활용','https://cdn.inflearn.com/wp-content/uploads/nodeweb.jpg','Egoing Lee'),(1132,1,'[nodejs 강좌] Node.js 를 이용해 웹애플리케이션 만들기','https://www.inflearn.com/course/nodejs-강좌-생활코딩','https://cdn.inflearn.com/wp-content/uploads/nodejs_open.jpg','Egoing Lee'),(1133,1,'디즈니 애니메이션 스튜디오 look dev artist 에게 배우는 Mari 2.0 사용법','https://www.inflearn.com/course/mari-2-0-배우기','https://cdn.inflearn.com/wp-content/uploads/mari001.jpg','Berdandyss'),(1134,1,'기본을 확실히!! HTML 의 모든것','https://www.inflearn.com/course/html-기본','https://cdn.inflearn.com/wp-content/uploads/html001.jpg','Egoing Lee'),(1135,1,'씨리얼 토익 - 시험장에서 100% 통하는 700점 LC 공략','https://www.inflearn.com/course/씨리얼-토익-lc-700','https://cdn.inflearn.com/public/courses/326481/cover/5c5113d6-0b44-4e99-aaff-0b739116cd1e','다름에듀'),(1136,1,'씨리얼 오픽 - 난이도 5&6 실전 테스트','https://www.inflearn.com/course/씨리얼-오픽-실전테스트-2','https://cdn.inflearn.com/public/courses/326456/cover/9712bf3d-567e-4cd0-bab4-afd2337faf68','다름에듀'),(1137,1,'라이노 그라스하퍼 Python 디자인 스크립팅','https://www.inflearn.com/course/라이노-그라스하퍼-파이썬','https://cdn.inflearn.com/public/courses/326452/cover/a68f2a5f-82d4-4729-842d-0d8507711363','NJ Namju Lee'),(1138,1,'씨리얼 오픽 - 롤플레이 STEP 1(01~15강)','https://www.inflearn.com/course/씨리얼-오픽-롤플레이-1','https://cdn.inflearn.com/public/courses/326436/cover/7d7b2be1-f220-41d8-ad18-ad4e1df47247','다름에듀'),(1139,1,'씨리얼 오픽 - 돌발주제 STEP 2(16~30강)','https://www.inflearn.com/course/씨리얼-오픽-돌발주제-2','https://cdn.inflearn.com/public/courses/326409/cover/3c3c92a9-1d83-4662-b53e-430872ab1ceb','다름에듀'),(1140,1,'씨리얼 오픽 3급(IM 1,2) 과정','https://www.inflearn.com/course/씨리얼-오픽-im','https://cdn.inflearn.com/public/courses/326403/cover/3ff2c878-f177-4040-9d5a-20bbf9c1aa49','다름에듀'),(1141,1,'Spring Boot JWT Tutorial','https://www.inflearn.com/course/스프링부트-jwt','https://cdn.inflearn.com/public/courses/326392/cover/b788d3b3-2861-452e-bd67-e47c3d16abdc','정은구'),(1142,1,'씨리얼 오픽 1급(AL) 과정','https://www.inflearn.com/course/씨리얼-오픽-al','https://cdn.inflearn.com/public/courses/326353/cover/3510ebcb-f0b5-4bab-a226-70c20bf9ad91','다름에듀'),(1143,1,'[전자책 92page_35,000자] 하루 1시간. 쿠팡파트너스로 7일이내 매출나기.','https://www.inflearn.com/course/쿠팡파트너스-제휴마케팅-전자책','https://cdn.inflearn.com/public/course-326315-cover/a493f9cd-4ca6-45bd-a3b4-834d1eee5d81','wickedmandoo'),(1144,1,'시각화 솔루션 TIBCO Spotfire - 사용자교육 기초편','https://www.inflearn.com/course/spotfire-기초','https://cdn.inflearn.com/public/course-326274-cover/7097816c-c633-40aa-af28-1edcef16c0c5','피앤디솔루션'),(1145,1,'R과 Python으로 하는 문서자동화 (기초)','https://www.inflearn.com/course/문서자동화-r-python','https://cdn.inflearn.com/public/course-326178-cover/3421db03-6979-4d1b-84ab-25ae6415a6fe','Issac Lee'),(1146,1,'빅데이터 분석 솔루션 TEXTOM 매뉴얼 v4.0 2탄','https://www.inflearn.com/course/빅데이터-텍스톰-2','https://cdn.inflearn.com/public/course-326075-cover/fc26c04b-6643-445c-a11c-f7669df97f49','빅데이터 솔루션 TEXTOM'),(1147,1,'누구나 쉽게 배우는 통계(SPSS보다 쉽게 R)','https://www.inflearn.com/course/쉽게-배우는-통계','https://cdn.inflearn.com/public/course-325961-cover/0f401a63-c941-4312-a84b-22b003d41e35','김지형'),(1148,1,'초보자도 쉽게 배우는 엑셀 피벗 테이블','https://www.inflearn.com/course/초보자-엑셀-피벗테이블','https://cdn.inflearn.com/public/course-325942-cover/cef7aa20-7fe0-414f-8249-594f73d0f6d6','김지형'),(1149,1,'코린아, 코딩하자! with 파이썬','https://www.inflearn.com/course/코린아-코딩하자-파이썬-기초','https://cdn.inflearn.com/public/course-325701-cover/a260a7cb-aa91-45ce-a4b5-acbc4bcefe8d','주니온'),(1150,1,'퀀트 트레이딩 개론','https://www.inflearn.com/course/퀀트-트레이딩-개론','https://cdn.inflearn.com/public/course-325659-cover/06d613cb-910e-484d-a71e-edbe37f03c7c','토파보기'),(1151,1,'한글 보고서 꾸미기에 유용한 꿀팁','https://www.inflearn.com/course/한글-한컴-문서-보고서-작성','https://cdn.inflearn.com/public/course-325639-cover/eaa37dfe-5d1a-41db-90f6-06b5a26e054d','김경자'),(1152,1,'실무로 배우는 Illustrator CC 2020','https://www.inflearn.com/course/일러스트레이터-cc-2020-실무','https://cdn.inflearn.com/public/course-325522-cover/1b7c69c7-1d25-46b7-b968-eb9cc8eec3c1','유용한 IT 학습'),(1153,1,'Illustrator CC 2020 제대로 배우기','https://www.inflearn.com/course/어도비-일러스트레이터-cc-2020','https://cdn.inflearn.com/public/course-325519-cover/d752ddd1-d35b-4126-af90-ab027d21d4ec','유용한 IT 학습'),(1154,1,'(Python) 누구나 캐글에 입문할 수 있다 (feat. 지방대/비전공/인문학도)','https://www.inflearn.com/course/캐글-파이썬-입문-포트폴리오','https://cdn.inflearn.com/public/course-325507-cover/7bc5a1bf-cba7-4769-82ab-0483bde7cb1a','ChloEvan'),(1155,1,'[애플 공식 교재] 스위프트 퍼즐 2','https://www.inflearn.com/course/swift-high-coding2','https://cdn.inflearn.com/public/courses/325451/course_cover/a9649bb7-3c02-4d2f-9f1a-78c0889b2258/ltc2.jpg','코더스하이'),(1156,1,'마케터를 위한 SQL','https://www.inflearn.com/course/마케터를-위한-sql','https://cdn.inflearn.com/public/courses/325334/course_cover/284056f3-9730-4943-8fe0-dd3c807896b6/marketer-sql-eng.png','최광성'),(1157,1,'반복되는 내 업무 자동화하기 - Power Automate(Flow)','https://www.inflearn.com/course/반복되는-업무-자동화','https://cdn.inflearn.com/public/courses/325210/course_cover/2fde74b9-2f35-46a0-be72-7254d217ed2a/omas-flow.jpg','오마스'),(1158,1,'비개발자를 위한 RPA 강의 (UiPath 입문편)','https://www.inflearn.com/course/따라하며-배우는-rpa-uipath-입문','https://cdn.inflearn.com/public/course-325007-cover/d984543a-dbff-49b4-8626-c38dd8911991','코코아소프트'),(1159,1,'데이터베이스 MSSQL','https://www.inflearn.com/course/데이터베이스-mssql-수업','https://cdn.inflearn.com/public/courses/325002/course_cover/14539389-837c-4a99-b428-3fbf78a8f706/database-mssql-eng.png','개발자 Park'),(1160,1,'데이터베이스 오라클(Oracle)','https://www.inflearn.com/course/데이터베이스-오라클-수업','https://cdn.inflearn.com/public/course-324996-cover/82b6156a-e90c-409c-a3ca-e4e98e810ae1','개발자 Park'),(1161,1,'Office 365의 강력한 보안 3총사-기본/문서/메일','https://www.inflearn.com/course/office365-보안-기본-문서-메일-3총사','https://cdn.inflearn.com/public/courses/324936/course_cover/d70b1cb9-f487-46bc-a09a-141da399f661/omas-office365.jpg','오마스'),(1162,1,'[오피스 365] Admin Center 설정 및 이해','https://www.inflearn.com/course/오피스365-Admin-Center','https://cdn.inflearn.com/public/courses/324935/course_cover/6580912e-13aa-4939-92d0-c3b6fded1a43/omas-admincenter.png','오마스'),(1163,1,'PowerApps, 우리회사에 필요한 모바일 앱 만들기','https://www.inflearn.com/course/powerapps-모바일앱-만들기','https://cdn.inflearn.com/public/courses/324934/course_cover/706a00db-a00e-4c1e-ab46-e7a86e4a8e54/omas-powerapps.jpg','오마스'),(1164,1,'Microsoft Teams for 관리자','https://www.inflearn.com/course/Microsoft-Teams-관리자','https://cdn.inflearn.com/public/courses/324933/course_cover/51341553-cde2-416d-b650-01f0b447a05e/omas-teams1.jpg','오마스'),(1165,1,'빠른 퇴근을 위한 오피스 2019 새로운 기능','https://www.inflearn.com/course/빠른-퇴근-성공-오피스-2019','https://cdn.inflearn.com/public/courses/324930/course_cover/da5da134-24ea-4c54-9fbb-33cd1de6af31/omas-office2019.png','오마스'),(1166,1,'MOS PowerPoint 2016 자격증 따기','https://www.inflearn.com/course/mos-powerpoint-2016','https://cdn.inflearn.com/public/courses/324790/course_cover/bc31054c-48fa-4670-a802-6cf05528fb01/mos-powerpoint-eng.png','유용한 IT 학습'),(1167,1,'MOS Access 2016 자격증 따기','https://www.inflearn.com/course/mos-access-2016','https://cdn.inflearn.com/public/courses/324787/course_cover/325b0cf4-285f-4194-bdc9-bbe070c611d2/mos-access-eng.png','유용한 IT 학습'),(1168,1,'ᄒᆞᆫ글(한글) 제대로 배우기','https://www.inflearn.com/course/한글-오피스-배우기','https://cdn.inflearn.com/public/courses/324776/course_cover/1d92eb61-17a1-4a62-a294-8ae1b48413f2/hancom-tip-eng.png','유용한 IT 학습'),(1169,1,'실무로 배우는 엑셀(Excel) 2019','https://www.inflearn.com/course/실무로-배우는-엑셀-2019','https://cdn.inflearn.com/public/courses/324770/course_cover/5a4b6f76-8d9b-420d-899b-307c98f8e15c/pro-excel-work-eng.png','유용한 IT 학습'),(1170,1,'쉽게 따라하는 라이노(Rhino 6) for Architecture 기본 (한국어판)','https://www.inflearn.com/course/라이노6-기본','https://cdn.inflearn.com/public/courses/324750/course_cover/c588bf35-d960-4949-af08-9c2d71303110/rhinoceros-eng.png','유용한 IT 학습'),(1171,1,'데이터 자동화(with VBA)','https://www.inflearn.com/course/데이터자동화-with-vba','https://cdn.inflearn.com/public/courses/324739/course_cover/7edf5250-a7e0-47af-808c-c3a8c8567cc8/byj-vba.png','배영자'),(1172,1,'Adobe After Effects CC 2018, 2019 업데이트','https://www.inflearn.com/course/애프터이펙트-업데이트','https://cdn.inflearn.com/public/courses/324697/course_cover/1aa5f7ac-4ea0-4d06-9df6-32bebce78a7c/aftereffect-update-eng.png','유용한 IT 학습'),(1173,1,'Sigil(시길)을 이용하여 전자책 만들기','https://www.inflearn.com/course/시길-전자책','https://cdn.inflearn.com/public/courses/324691/course_cover/6b623788-4029-43f7-a5ae-8966b1cb2ba4/sigil-epub-eng.png','유용한 IT 학습'),(1174,1,'누구나 시작할 수 있는 네트워크 Step2 (서브넷팅)','https://www.inflearn.com/course/네트워크-step2-서브넷팅','https://cdn.inflearn.com/public/courses/324532/course_cover/e45a2b1e-bcc1-4466-a82b-2aadb27a178c/jc_network2.png','존찬'),(1175,1,'RPG 게임 어플 만들기 [iOS 아이폰]','https://www.inflearn.com/course/RPG-게임만들기-iOS','https://cdn.inflearn.com/public/courses/324527/course_cover/90d24f33-c1fb-4d19-aec5-ec0a802e3ef1/onarcher_rpg.png','OnArcher'),(1176,1,'한큐에 끝내는 해커톤 입문_아두이노와 웹','https://www.inflearn.com/course/해커톤-아두이노-파이썬-입문','https://cdn.inflearn.com/public/courses/324511/course_cover/bb42bbb1-ce46-4223-8954-690f398201fc/hackathon_eng.png','밍밍이와 맹맹이'),(1177,1,'업무 자동화를 위한 파이썬 pyautogui, beautifulsoup 크롤링 기초','https://www.inflearn.com/course/업무자동화-파이썬-pyautogui-크롤링기초','https://cdn.inflearn.com/public/courses/324445/course_cover/d5cfc064-0223-44fa-9fd5-df1490ecf056/automation_2.png','fl Kim'),(1178,1,'입문자를 위한 파이썬 기초 따라잡기','https://www.inflearn.com/course/파이썬-기초','https://cdn.inflearn.com/public/courses/324376/course_cover/eae71fd5-cb85-45d4-bb29-81c241a376d6/boan_python.png','보안프로젝트'),(1179,1,'자바 머신러닝 weka(웨카) 초급','https://www.inflearn.com/course/자바-머신러닝-weka','https://cdn.inflearn.com/public/courses/324289/course_cover/400354c7-cee9-445f-8ba9-2028b931717a/java-machinelearning-weka-1-eng.jpg','자바라머신러닝'),(1180,1,'블록체인 Dapp 이더리움_오픈제펠린 SDK','https://www.inflearn.com/course/블록체인-Dapp-이더리움-오픈제펠린','https://cdn.inflearn.com/public/courses/324243/course_cover/6575bb8a-1260-40c8-afb0-0128ac2a8a9f/logo-oz.jpg','coldmind'),(1181,1,'코알못도 누구나 쉽게 따라하는 웹, 앱 만들기 (기초부터 실전 활용까지)','https://www.inflearn.com/course/웹-앱-조코딩','https://cdn.inflearn.com/public/courses/324229/course_cover/146a253b-c106-4999-8606-d72820a90908/%E1%84%8C%E1%85%A9%E1%84%8F%E1%85%A9%E1%84%83%E1%85%B5%E1%86%BC.png','조코딩'),(1182,1,'판테온과 도커로 블록체인 이더리움 구축하기','https://www.inflearn.com/course/블록체인-판테온-도커-이더리움','https://cdn.inflearn.com/public/courses/324177/course_cover/7b3d27e3-2f89-4375-b133-bb62d97b575f/pantheon-logo.jpg','coldmind'),(1183,1,'만들면서 배우는 HTML/CSS','https://www.inflearn.com/course/html-css-sucademy','https://cdn.inflearn.com/public/courses/324151/course_cover/56341482-a56d-4bca-879f-34d7d2215315/kks_html%29css.png','수코딩'),(1184,1,'[포토샵 혁명 방송] 포토샵 중급 완성','https://www.inflearn.com/course/photoshop-intermediate-level','https://cdn.inflearn.com/public/courses/324136/course_cover/6bafe72e-0196-41d1-ad2c-b3bcbf583407/free_photoshop.png','인프런'),(1185,1,'경영 컨설팅 전문가 양성과정 2 : 컨설팅 사례 및 해설 클리닉','https://www.inflearn.com/course/consulting2-컨설팅2','https://cdn.inflearn.com/public/courses/324111/course_cover/97531ab4-5f8f-4ea6-8db3-bd062b8a4cc9/consulting2.png','chris kwon'),(1186,1,'챌린지로 알아보는 디지털포렌식 해킹 대회 준비(심화)','https://www.inflearn.com/course/디지털포렌식_챌린지심화','https://cdn.inflearn.com/public/courses/324071/course_cover/8ce2df76-493a-41e1-a57f-217d20c2b22c/boan_forensic2.png','보안프로젝트'),(1187,1,'엑셀장인의 매크로','https://www.inflearn.com/course/엑셀매크로','https://cdn.inflearn.com/public/courses/324069/course_cover/ae268107-da7d-436a-9a49-20dcb0b769b5/ecji_excel.png','엑셀장인'),(1188,1,'실전 작은 마케팅(1)','https://www.inflearn.com/course/마케팅-ppss','https://cdn.inflearn.com/public/courses/324049/course_cover/301747fb-33a5-4b1d-8cdc-3d6b5a1062db/%EC%97%90%EC%96%B4%ED%81%B4%EB%9E%98%EC%8A%A4_%EC%8B%A4%EC%A0%841.jpg','픗픗 아카데미'),(1189,1,'겜팔이의 노릇노릇 파이어베이스','https://www.inflearn.com/course/firebase-파이어베이스','https://cdn.inflearn.com/public/courses/324034/course_cover/6623a4e4-7708-47e3-b8a7-a4395e18eff7/%EC%9D%B8%ED%94%84%EB%9F%B0%20%EB%A1%9C%EA%B3%A0.png','겜팔이'),(1190,1,'실전적용!! 아마존 셀러의 모든것','https://www.inflearn.com/course/아마존셀러','https://cdn.inflearn.com/public/courses/324026/course_cover/84f14ce8-0dbf-4ae6-a513-bf4355571780/amazon.png','Smart Amazon Selling'),(1191,1,'윤재성의 Java 기반 Android 9.0(pie) App 개발 고급 3단계','https://www.inflearn.com/course/java-android-app','https://cdn.inflearn.com/public/courses/323996/course_cover/3c721267-a356-40a9-8c67-cf85e5651089/sc_java3.jpg','소프트캠퍼스'),(1192,1,'프로세스 마이닝을 활용한 고객여정분석','https://www.inflearn.com/course/프로세스-마이닝','https://cdn.inflearn.com/wp-content/uploads/process2-3.jpg','이보경'),(1193,1,'스크래치 3.0 - 입문부터 실전 게임 개발까지','https://www.inflearn.com/course/나도코딩-스크래치','https://cdn.inflearn.com/wp-content/uploads/ndcd_scratch2.jpg','나도코딩'),(1194,1,'리눅스 시스템 프로그래밍 - 이론과 실습','https://www.inflearn.com/course/리눅스-시스템-프로그래밍-이론과-실습','https://cdn.inflearn.com/wp-content/uploads/ktw_2_1.png','ProgCoach4U'),(1195,1,'언리얼4 이펙터 추천! 블루프린트 이펙트 입문','https://www.inflearn.com/course/언리얼4','https://cdn.inflearn.com/wp-content/uploads/cjs_unreal-1.jpg','린반'),(1196,1,'나만의 포트폴리오 웹페이지 만들기','https://www.inflearn.com/course/포트폴리오','https://cdn.inflearn.com/wp-content/uploads/lsm_portfolio-1.jpg','이수민'),(1197,1,'무작정 시작하는 안드로이드 개발','https://www.inflearn.com/course/안드로이드-모바일','https://cdn.inflearn.com/wp-content/uploads/sjh_AAD-3.jpg','노마드크리에이터'),(1198,1,'차트 기술분석 실전 매매 기법 Part4. \'보조지표\'를 활용한 필승 매매 B','https://www.inflearn.com/course/왕초보부터-고수까지-기술분석-리얼-트레이딩-시뮬','https://cdn.inflearn.com/wp-content/uploads/chacool_tradingzaB.jpg','인베스트 크립토'),(1199,1,'트러플로 dApp 개발 : 실리콘밸리 개발자와 함께','https://www.inflearn.com/course/truffle-dapp','https://cdn.inflearn.com/wp-content/uploads/ethereum3_programmers.jpg','Mahesh'),(1200,1,'탈중앙화 eBay 개발!: 실리콘밸리 개발자와 함께','https://www.inflearn.com/course/ethereum-ipfs','https://cdn.inflearn.com/wp-content/uploads/ethereum4_programmers.jpg','Mahesh'),(1201,1,'차트 기술분석 실전 매매 기법 Part4. \'보조지표\'를 활용한 필승 매매 A','https://www.inflearn.com/course/trading-view','https://cdn.inflearn.com/wp-content/uploads/chacool_tradingA.jpg','인베스트 크립토'),(1202,1,'윤재성의 처음 시작하는 파이썬','https://www.inflearn.com/course/python-2','https://cdn.inflearn.com/wp-content/uploads/sc_python-1.jpg','소프트캠퍼스'),(1203,1,'유니티 강좌 [쯔꾸르풍 게임 제작하기]','https://www.inflearn.com/course/unity','https://cdn.inflearn.com/wp-content/uploads/unity2d.jpg','케이디'),(1204,1,'차트 기술분석 실전 매매 기법 Part3. \'패턴\'을 활용한 필승 매매 전략','https://www.inflearn.com/course/tradingview','https://cdn.inflearn.com/wp-content/uploads/chacool_trading3.jpg','인베스트 크립토'),(1205,1,'윤재성의 Bootstrap 4 & 3 Framework Tutorial','https://www.inflearn.com/course/bootstrap-2','https://cdn.inflearn.com/wp-content/uploads/boot_E.jpg','소프트캠퍼스'),(1206,1,'저작권 걱정없는 나만의 음악 만들기 - Studio One','https://www.inflearn.com/course/studio-one','https://cdn.inflearn.com/wp-content/uploads/studio-one.jpg','양승욱'),(1207,1,'Unity 3D VR 장르별 실전 게임 프로젝트 - 디펜스게임','https://www.inflearn.com/course/유니티-강좌','https://cdn.inflearn.com/wp-content/uploads/unity3d_2.jpg','소프트캠퍼스'),(1208,1,'git과 github','https://www.inflearn.com/course/git-and-github','https://cdn.inflearn.com/wp-content/uploads/git-3.jpg','호눅스'),(1209,1,'윤재성의 처음시작하는 HTML & HTML5 Tutorials','https://www.inflearn.com/course/html-2','https://cdn.inflearn.com/wp-content/uploads/sc_html.jpg','소프트캠퍼스'),(1210,1,'블록체인 기반의 스마트컨트랙트 개발','https://www.inflearn.com/course/블록체인-dapp_smartcontract','https://cdn.inflearn.com/wp-content/uploads/blockchain_leejj1.png','JeungJoo Lee'),(1211,1,'MAXST AR SDK와 유니티를 사용한 증강현실 앱 개발','https://www.inflearn.com/course/maxst-ar-sdk_unity','https://cdn.inflearn.com/wp-content/uploads/inflearn_black_1x.png','MAXST 맥스트'),(1212,1,'MATLAB으로 시작하는 프로그래밍','https://www.inflearn.com/course/matlab-시작-programming','https://cdn.inflearn.com/wp-content/uploads/Matlab_pbj.jpg','박범진'),(1213,1,'[김왼손의 왼손코딩] 한입에 쏙 파이썬: 3시간 만에 끝내는 파이썬 기초 (저자 직강)','https://www.inflearn.com/course/파이썬-입문-hello-coding','https://cdn.inflearn.com/wp-content/uploads/hello_coding.jpg','김왼손의 왼손코딩'),(1214,1,'파이썬 크롤링(Python Crawling) 으로 웹 데이터 추출 입문부터 실습까지','https://www.inflearn.com/course/python-crawling','https://cdn.inflearn.com/wp-content/uploads/python_crawler.jpg','Kyeongrok Kim'),(1215,1,'블렌더(Blender)를 활용한 3D 캐릭터 애니메이션 만들기','https://www.inflearn.com/course/블렌더-3d-animation','https://cdn.inflearn.com/wp-content/uploads/blender.jpg','gremaza'),(1216,1,'생초보도 하는 IOS 앱 취약점 진단','https://www.inflearn.com/course/ios-앱-취약점-진단','https://cdn.inflearn.com/wp-content/uploads/i2sec_iOS.jpg','박상욱'),(1217,1,'아이폰 앱 개발(Swift4 & iOS11) 입문 2편','https://www.inflearn.com/course/아이폰-앱-개발-입문-2편','https://cdn.inflearn.com/wp-content/uploads/ios-happy2.jpg','최완택'),(1218,1,'ECMAScript 6: 빠르게 배우는 ES6 스킬과 비동기 프로그래밍','https://www.inflearn.com/course/es6-ecmascript-6','https://cdn.inflearn.com/wp-content/uploads/ES6-1-2.jpg','김형태'),(1219,1,'WEB2 - Domain Name System','https://www.inflearn.com/course/web2-domain','https://cdn.inflearn.com/wp-content/uploads/web2_domain.jpg','Egoing Lee'),(1220,1,'14일만에 배우는 ASP.NET CORE(.NET5)','https://www.inflearn.com/course/닷넷-코어','https://cdn.inflearn.com/public/courses/139621/cover/cb0d1e48-5e10-49f1-8dbc-4f6f021b66cf','김정수'),(1221,1,'화이트해커가 되기 위한 8가지 웹 해킹 기술','https://www.inflearn.com/course/화이트해커가-되기위한-8가지','https://cdn.inflearn.com/wp-content/uploads/White-Hacker.jpg','시큐아카데미'),(1222,1,'어도비 XD로 프로토타입 제작하기','https://www.inflearn.com/course/어도비-xd-프로토타입-제작','https://cdn.inflearn.com/wp-content/uploads/adobexd.jpg','오심인'),(1223,1,'Pandas 팬더스 데이터분석 기초 실습','https://www.inflearn.com/course/pandas-팬더스-데이터분석-기초','https://cdn.inflearn.com/wp-content/uploads/pandas1.jpg','Minsuk Heo'),(1224,1,'코코아코딩, 스크래치 게임만들기!','https://www.inflearn.com/course/코코아코딩-스크래치-게임-만들기','https://cdn.inflearn.com/wp-content/uploads/인프런로고.png','정글코딩(JungleCoding)'),(1225,1,'[디퍼런테이션] PPT 제작의 필수 강의','https://www.inflearn.com/course/powerpoint-파워포인트-강의','https://cdn.inflearn.com/wp-content/uploads/ppt_differ.jpg','WonYoung Choi'),(1226,1,'아이오닉으로 오프라인 퍼스트 웹 (offline first web) 만들기','https://www.inflearn.com/course/offline-first-web','https://cdn.inflearn.com/wp-content/uploads/ionic_offline1.jpg','김철현'),(1227,1,'만들면서 배우는 인공지능(강화학습 편)','https://www.inflearn.com/course/인공지능-강화학습','https://cdn.inflearn.com/wp-content/uploads/ai_kwang.jpg','최광성'),(1228,1,'WEB2 - CSS','https://www.inflearn.com/course/생활코딩의-web2시리즈','https://cdn.inflearn.com/wp-content/uploads/web2.png','Egoing Lee'),(1229,1,'My Location - ionic3 와 Google Map Api 를 활용한 내 위치 정보 찾기','https://www.inflearn.com/course/my-location-ionic3','https://cdn.inflearn.com/wp-content/uploads/ionic3-location-1.jpg','김철현'),(1230,1,'앵귤러 기초 세미나','https://www.inflearn.com/course/앵귤러-기초-세미나','https://cdn.inflearn.com/wp-content/uploads/Angular_inflearn.png','Mark Lee'),(1231,1,'아빠가 들려주는 [R shiny app] 만들기','https://www.inflearn.com/course/r-shiny-app','https://cdn.inflearn.com/wp-content/uploads/rshiny1.jpg','김지형'),(1232,1,'[R을 R려줘] R 문법 기초','https://www.inflearn.com/course/r-기초-데이터-분석','https://cdn.inflearn.com/wp-content/uploads/r-data2.jpg','김승욱'),(1233,1,'파이썬을 이용한 IT 해킹과 보안','https://www.inflearn.com/course/it보안-파이썬-스쿨','https://cdn.inflearn.com/wp-content/uploads/python-school1.png','보안프로젝트'),(1234,1,'80여개 예제로 알아보는 쉽고 재미있는 [데이터 시각화]','https://www.inflearn.com/course/데이터-시각화','https://cdn.inflearn.com/wp-content/uploads/data-visual.png','김지형'),(1235,1,'타입스크립트 코리아 : Electron with TypeScript Hands-On Labs 세미나','https://www.inflearn.com/course/electron-typescript-hands-labs','https://cdn.inflearn.com/wp-content/uploads/et.png','Mark Lee'),(1236,1,'Java로 배우는 자료구조','https://www.inflearn.com/course/java-자료구조','https://cdn.inflearn.com/wp-content/uploads/JAVA-DATA.jpg','권오흠'),(1237,1,'모던 자바스크립트(javascript) 개발을 위한 ES6 강좌','https://www.inflearn.com/course/es6-강좌-자바스크립트','https://cdn.inflearn.com/wp-content/uploads/es6-1.png','윤지수'),(1238,1,'OpenCV 강좌 - 컴퓨터 비전','https://www.inflearn.com/course/opencv-lecture','https://cdn.inflearn.com/wp-content/uploads/오픈씨뷔-1.jpg','Jeonghyun Kim'),(1239,1,'누구나 따라하면서 배우는 JSP 커뮤니티 게시판 만들기','https://www.inflearn.com/course/jsp-게시판','https://cdn.inflearn.com/wp-content/uploads/jsp_board2.png','안경잡이개발자'),(1240,1,'HTML,CSS 개발을 위한 핵심 가이드','https://www.inflearn.com/course/html-css-강좌-codesquad','https://cdn.inflearn.com/wp-content/uploads/image.jpg','윤지수'),(1241,1,'이것이 우분투 리눅스다','https://www.inflearn.com/course/이것이-우분투-리눅스다','https://cdn.inflearn.com/wp-content/uploads/ubuntu.jpg','한빛미디어'),(1242,1,'애자일 개발 방법론 개념과 실제 적용하기','https://www.inflearn.com/course/애자일-개발-방법론-개념과-실제-적용하기','https://cdn.inflearn.com/wp-content/uploads/agile1.jpg','이재왕'),(1243,1,'Node.js 웹개발로 알아보는 백엔드 자바스크립트의 이해','https://www.inflearn.com/course/node-js-웹개발','https://cdn.inflearn.com/wp-content/uploads/nodejs3.jpg','윤지수'),(1244,1,'OpenCV 를 활용한 명함인식 기능 구현 강좌','https://www.inflearn.com/course/opencv-강좌-명함인식','https://cdn.inflearn.com/wp-content/uploads/opencv.jpg','마이캠퍼스'),(1245,1,'비박스를 활용한 웹 모의해킹 완벽 실습','https://www.inflearn.com/course/비박스-모의해킹-실습','https://cdn.inflearn.com/wp-content/uploads/beebox2.png','보안프로젝트'),(1246,1,'안드로이드 모바일 앱 모의해킹과 시큐어코딩','https://www.inflearn.com/course/안드로이드-앱-모의해킹-진단-완벽-실습','https://cdn.inflearn.com/wp-content/uploads/android.jpg','보안프로젝트'),(1247,1,'보안 전문가를 위한 파워쉘','https://www.inflearn.com/course/보안-전문가를-위한-파워쉘','https://cdn.inflearn.com/wp-content/uploads/powershell.jpg','보안프로젝트'),(1248,1,'메타스플로잇(Metasploit) 활용한 취약점 분석(중고급과정)','https://www.inflearn.com/course/메타스플로잇-활용한-취약점-분석고급','https://cdn.inflearn.com/wp-content/uploads/metasploithigh.png','보안프로젝트'),(1249,1,'메타스플로잇(Metasploit) 활용한 취약점 분석(초중급과정)','https://www.inflearn.com/course/메타스플로잇-활용-및-분석','https://cdn.inflearn.com/wp-content/uploads/metasploit.png','보안프로젝트'),(1250,1,'쉽게 만드는 웹페이지 - IUEditor 사용법','https://www.inflearn.com/course/iueditor-사용법','https://cdn.inflearn.com/wp-content/uploads/iueditor.png','아이유에디터'),(1251,1,'쉽게 배우는 ZBrush 입문 강좌','https://www.inflearn.com/course/지브러시-강좌-zbrush-입문','https://cdn.inflearn.com/wp-content/uploads/zbrush3.jpg','목마하임(MokmaHeim)'),(1252,1,'마모셋 툴백 (marmoset toolbag) 렌더 무료강좌','https://www.inflearn.com/course/마모셋-툴백-marmoset-toolbag-렌더-무료강좌','https://cdn.inflearn.com/wp-content/uploads/marmoset001.jpg','Sup Choi'),(1253,1,'소스트리(source tree) 를 사용하여 Git 사용하기','https://www.inflearn.com/course/git-강좌-생활코딩','https://cdn.inflearn.com/wp-content/uploads/git001.png','Egoing Lee'),(1254,1,'스타트업,초기 기업들을 위한 실용적 세무 이야기','https://www.inflearn.com/course/스타트업-세무-강좌','https://cdn.inflearn.com/wp-content/uploads/ma001.jpg','Meet Advisor'),(1255,1,'Kotlin 부터 Spring Security 까지','https://www.inflearn.com/course/코틀린-스프링-시큐리티','https://cdn.inflearn.com/public/courses/326483/cover/bc32ba17-3f98-494d-94c3-5241bef8ca6e','최광성'),(1256,1,'실전! 웹사이트제작! Step by Step! (\'라한호텔\' 사이트제작_Application Course)','https://www.inflearn.com/course/웹사이트제작-인터랙티브웹-라한호텔','https://cdn.inflearn.com/public/course-326307-cover/f7535cc4-a8bf-498e-b3f9-c477030666af','J.영'),(1257,1,'웃으며 배우는 생활일본어','https://www.inflearn.com/course/생활일본어-초급','https://cdn.inflearn.com/public/course-326281-cover/9486a764-df5f-4654-a512-79f35f498730','친절한 채원씨'),(1258,1,'코딩 입문 - 하다 보니 알게 되는 자바스크립트','https://www.inflearn.com/course/자바스크립트-기초','https://cdn.inflearn.com/public/course-326269-cover/d5ff629b-2698-48b5-b382-3b113f47c37f','월리'),(1259,1,'빅데이터 분석 솔루션 TEXTOM 매뉴얼 v4.0 1탄','https://www.inflearn.com/course/빅데이터-텍스톰-1','https://cdn.inflearn.com/public/course-326072-cover/e30f7737-f523-431d-897c-8f2e9b6067dc','빅데이터 솔루션 TEXTOM'),(1260,1,'Do it! 키트 없이 배우는 아두이노','https://www.inflearn.com/course/키트없이-배우는-아두이노','https://cdn.inflearn.com/public/course-325950-cover/381eee5e-4958-4c7b-8a3e-47d416769191','메이커멘토'),(1261,1,'산점도 예제로 배우는 R 데이터 시각화','https://www.inflearn.com/course/ggplot2-산점도','https://cdn.inflearn.com/public/course-325843-cover/bd692dbd-872b-4467-9419-ce3e018aa9b2','Issac Lee'),(1262,1,'블록코딩의 이해','https://www.inflearn.com/course/블록코딩-cos','https://cdn.inflearn.com/public/course-325568-cover/16d9dbc6-300d-40b1-8c70-8e7429fc845f','만능MN'),(1263,1,'[직딩꿀템] 죽은 문서 살리는 인포그래픽 패턴','https://www.inflearn.com/course/직딩꿀템-인포그래픽-패턴','https://cdn.inflearn.com/public/courses/325458/course_cover/d211dd20-c58c-4d68-8721-73cc08aa84c4/mulcam-worksmart-infographic-eng.png','멀티캠퍼스'),(1264,1,'[직딩꿀템] 디자이너 없이 뚝딱 만드는 디자인 콘텐츠 feat. 망고보드','https://www.inflearn.com/course/직딩꿀템-망고보드-디자인콘텐츠','https://cdn.inflearn.com/public/course-325457-cover/8ccb65c6-c47b-45bf-982a-212ecfcae1a8','멀티캠퍼스'),(1265,1,'[직딩꿀템] 검색해도 찾기 힘든 꼭 필요한 엑셀 함수','https://www.inflearn.com/course/직딩꿀템-엑셀-함수','https://cdn.inflearn.com/public/course-325455-cover/d230c830-0516-4878-ac04-43fd193fd293','멀티캠퍼스'),(1266,1,'[직딩꿀템] 직장인 글쓰기 트레이닝, 일하는 문장들','https://www.inflearn.com/course/직딩꿀템-직장인-글쓰기','https://cdn.inflearn.com/public/courses/325446/course_cover/0fe7b8b2-69a4-4c5f-b59d-8c04d79d3dca/mulcam-worksmart-writing-eng.png','멀티캠퍼스'),(1267,1,'[원포인트 MBA] 고려대 김태규 교수의 HR전략과 조직관리','https://www.inflearn.com/course/원포인트-mba-hr전략-조직관리','https://cdn.inflearn.com/public/courses/325430/course_cover/a09edeed-2105-4352-a623-3715bc559129/mulcam-mba-ktg-eng.png','멀티캠퍼스'),(1268,1,'[원포인트 MBA] 연세대 권구혁 교수의 경영전략','https://www.inflearn.com/course/원포인트-mba-경영전략','https://cdn.inflearn.com/public/courses/325427/course_cover/c39640cf-357d-4c34-90bb-0d5cee6fc089/mulcam-mba-kkh-eng.png','멀티캠퍼스'),(1269,1,'크롬 확장 프로그램으로 업무 생산성 높이기','https://www.inflearn.com/course/크롬확장프로그램-업무생산성-향상','https://cdn.inflearn.com/public/courses/325332/course_cover/b6976f40-f5f6-45e3-bf7b-97ae657a61bb/chn-chrome.png','yong-nam cho'),(1270,1,'Teams 라이브 이벤트로 온라인 방송/교육/세미나하기','https://www.inflearn.com/course/teams-라이브이벤트-온라인방송-교육-세미나하기','https://cdn.inflearn.com/public/courses/325304/course_cover/f427459e-9484-431e-bd56-36c95c5ec187/omas-teams.jpg','오마스'),(1271,1,'데이터베이스 SQL 강의','https://www.inflearn.com/course/database-sql-basic','https://cdn.inflearn.com/public/courses/324971/course_cover/495289db-5bd3-49e4-b388-b322d452a3a5/database-sql-eng.png','개발자 Park'),(1272,1,'SELECT ALL FROM SQL','https://www.inflearn.com/course/sql-select','https://cdn.inflearn.com/public/courses/324947/course_cover/3a694dcb-152b-4837-a01b-fa907719733e/select-sql-eng.png','박범진'),(1273,1,'Office 365 시작하기 (사용자 편)','https://www.inflearn.com/course/Office365-start-사용자','https://cdn.inflearn.com/public/courses/324929/course_cover/fc6dd157-dc5a-4004-a4ac-ebf591b3d5ae/omas-office365.png','오마스'),(1274,1,'IBM Cloud를 이용한 무료 마인크래프트 서버 만들기','https://www.inflearn.com/course/IBM-마인크래프트-서버','https://cdn.inflearn.com/public/courses/324905/course_cover/e5fa82f0-f8fc-415e-9c7e-31277094873d/minecraft-server-eng.png','codebeartube'),(1275,1,'3. 웹개발 코스 [스프링 프레임워크+전자정부 표준프레임워크]','https://www.inflearn.com/course/웹개발-코스-스프링-전자정부','https://cdn.inflearn.com/public/courses/324888/course_cover/44f2d353-757a-4835-8935-d5b986674f91/egov-spring-eng.png','개발자 Park'),(1276,1,'1. 웹개발 기초 [HTML, CSS]','https://www.inflearn.com/course/웹개발-기초-html-css','https://cdn.inflearn.com/public/courses/324886/course_cover/998919c5-399f-416c-9f57-c611ae178c51/html-css-basic-eng.png','개발자 Park'),(1277,1,'Adobe Premiere Pro CC 2018, 2019 영상편집의 입문 Part.2','https://www.inflearn.com/course/프리미어-입문-2','https://cdn.inflearn.com/public/courses/324699/course_cover/508f7e7d-aa1a-44ac-b440-078644811ca3/premiere-beginner-2-eng.png','유용한 IT 학습'),(1278,1,'R프로그래밍 기초 다지기','https://www.inflearn.com/course/R-프로그래밍-기초','https://cdn.inflearn.com/public/courses/324587/course_cover/e821ef82-c27c-4d24-b0d2-a6c8778eb99c/Rbasic.png','코코'),(1279,1,'병.의원 경영컨설팅 실무 활용과정','https://www.inflearn.com/course/경영컨설팅-활용-병원','https://cdn.inflearn.com/public/courses/324379/course_cover/0fa83c13-c81e-453f-9a51-0ed4745d682c/hospital_BC.png','chris kwon'),(1280,1,'Ionic, 아이오닉 100분 핵심강의','https://www.inflearn.com/course/100분강의-아이오닉','https://cdn.inflearn.com/public/courses/324290/course_cover/f546dc57-2927-44cc-a5f4-d8ada39327c9/sjh_ionic100.png','노마드크리에이터'),(1281,1,'구글 알고리즘 문제 풀이','https://www.inflearn.com/course/구글-알고리즘-문제풀이','https://cdn.inflearn.com/public/courses/324236/course_cover/a4de2bcd-0920-40cd-816c-fdd325f4cfa7/kwang_codejam.png','최광성'),(1282,1,'데이터 시각화와 차트분석 기법','https://www.inflearn.com/course/데이터-시각화-차트분석','https://cdn.inflearn.com/public/courses/324186/course_cover/8210c08d-1b3e-44e2-842a-53abad9007b4/sjh_DataVisualization.png','노마드크리에이터'),(1283,1,'블록체인 Dapp 이더리움_트랜잭션','https://www.inflearn.com/course/블록체인-Dapp-이더리움-트랜잭션','https://cdn.inflearn.com/public/courses/324158/course_cover/e2a90179-9bfa-4c3f-92f1-c69949474c73/logo.jpg','coldmind'),(1284,1,'윤재성의 안드로이드를 위한 자바 프로그래밍','https://www.inflearn.com/course/android_java','https://cdn.inflearn.com/public/courses/324024/course_cover/748e1882-e710-4388-98e8-e760f38c1afc/sc_java.png','소프트캠퍼스'),(1285,1,'예제로 배우는 스프링 입문 (개정판)','https://www.inflearn.com/course/spring_revised_edition','https://cdn.inflearn.com/public/courses/323992/course_cover/134042f1-d820-4de1-9cd1-1f99517844da/spring_revised_edition2.png','백기선'),(1286,1,'JoyWins 큰돌샘의 아두이노 기초 강좌','https://www.inflearn.com/course/사물인터넷','https://cdn.inflearn.com/wp-content/uploads/sys_arduino2.jpg','큰돌샘(JoyWins)'),(1287,1,'언리얼4 블루프린트로 안드로이드 게임 만들기','https://www.inflearn.com/course/언리얼4-2','https://cdn.inflearn.com/wp-content/uploads/cjs_unreal4-2.png','린반'),(1288,1,'나만의 포트폴리오 블로그 만들기(feat. 티스토리 스킨)','https://www.inflearn.com/course/프레임워크','https://cdn.inflearn.com/public/courses/315633/course_cover/3adf0c20-a478-46c7-a109-3c8296741c15/tidory.png','정상우'),(1289,1,'Kevin의 알기 쉬운 Java 개발자 로드맵 이야기','https://www.inflearn.com/course/java-4','https://cdn.inflearn.com/wp-content/uploads/java22.jpg','Kevin'),(1290,1,'공모전 사례로 풀어보는 앱 개발 프로젝트','https://www.inflearn.com/course/school-android-dev','https://cdn.inflearn.com/wp-content/uploads/lje5.jpg','3G팀'),(1291,1,'Do it! 프론트엔드 웹 디자인 입문','https://www.inflearn.com/course/프런트엔드-웹-디자인-입문','https://cdn.inflearn.com/wp-content/uploads/Doit_Web_Design3.jpg','이지스퍼블리싱'),(1292,1,'파이썬 라즈베리파이 IoT프로젝트-원격모니터링 자동차','https://www.inflearn.com/course/iot','https://cdn.inflearn.com/wp-content/uploads/sjh_IoT2.jpg','노마드크리에이터'),(1293,1,'윤재성의 처음시작하는 JavaScript Tutorials','https://www.inflearn.com/course/javascript','https://cdn.inflearn.com/wp-content/uploads/sc_JS.jpg','소프트캠퍼스'),(1294,1,'차트 기술분석 실전 매매 기법 Part2. \'캔들\'을 활용한 필승 매매','https://www.inflearn.com/course/캔들','https://cdn.inflearn.com/wp-content/uploads/chacool_trading2.jpg','인베스트 크립토'),(1295,1,'강화학습 기초 이론','https://www.inflearn.com/course/강화학습','https://cdn.inflearn.com/wp-content/uploads/RL2.jpg','팡요랩'),(1296,1,'윤재성의 Node.js 서버 프로그래밍 과정','https://www.inflearn.com/course/node-js','https://cdn.inflearn.com/wp-content/uploads/node.js_server2.jpg','소프트캠퍼스'),(1297,1,'차트 기술분석 실전 매매 기법 Part1. 추세 활용 실전 매매 기법','https://www.inflearn.com/course/tradingview-part1','https://cdn.inflearn.com/wp-content/uploads/chacool_trading1.jpg','인베스트 크립토'),(1298,1,'자바 프로그래밍 입문 강좌 (renew ver.) - 초보부터 개발자 취업까지!!','https://www.inflearn.com/course/실전-자바_java-renew','https://cdn.inflearn.com/wp-content/uploads/java_ver.2018-2.jpg','인프런'),(1299,1,'web2 - Home server','https://www.inflearn.com/course/web2-home-server','https://cdn.inflearn.com/wp-content/uploads/home_server-1.jpg','Egoing Lee'),(1300,1,'게임 보안 입문을 위한 치트엔진 튜토리얼','https://www.inflearn.com/course/게임-보안-치트엔진','https://cdn.inflearn.com/wp-content/uploads/tutorial.jpg','보안프로젝트'),(1301,1,'엑셀을 활용한 VBA 업무 자동화','https://www.inflearn.com/course/excel-vba-엑셀-업무자동화','https://cdn.inflearn.com/wp-content/uploads/excel-vba1.jpg','Kyeongrok Kim'),(1302,1,'회사에서 바로 통하는 엑셀 2016','https://www.inflearn.com/course/excel-엑셀-2016','https://cdn.inflearn.com/wp-content/uploads/excel2016.jpg','한빛미디어'),(1303,1,'야곰의 iOS 프로그래밍','https://www.inflearn.com/course/ios-프로그래밍','https://cdn.inflearn.com/wp-content/uploads/yagom.png','yagom'),(1304,1,'GPU 프로그래밍 언어 CUDA(쿠다) 기초','https://www.inflearn.com/course/gpu-cuda','https://cdn.inflearn.com/wp-content/uploads/cuda.jpg','최광성'),(1305,1,'엔트리 기초부터 활용까지 정글코딩!','https://www.inflearn.com/course/엔트리-정글코딩','https://cdn.inflearn.com/wp-content/uploads/jungle.jpg','정글코딩(JungleCoding)'),(1306,1,'실무에 바로 적용하는 아이오닉 3 Tutorial','https://www.inflearn.com/course/ionic-아이오닉-기초','https://cdn.inflearn.com/wp-content/uploads/ionic-tutorialpg.jpg','김철현'),(1307,1,'Ionic3+Firebase를 이용한 Email/Password 사용자 인증','https://www.inflearn.com/course/ionic-simple-login','https://cdn.inflearn.com/wp-content/uploads/ionic_login.jpg','김철현'),(1308,1,'2017 Do it! 안드로이드 앱 프로그래밍 [개정 4판 누가 버전]','https://www.inflearn.com/course/안드로이드-앱-프로그래밍','https://cdn.inflearn.com/wp-content/uploads/doit-android1.jpg','이지스퍼블리싱'),(1309,1,'[김왼손의 왼손코딩] 미운코딩새끼: 4시간 만에 끝내는 파이썬 기초 (전자책 포함)','https://www.inflearn.com/course/파이썬-기초-강좌','https://cdn.inflearn.com/public/course-77623-cover/f5ee3793-aabe-4370-821a-7ae8a521531d','김왼손의 왼손코딩'),(1310,1,'Rails로 쉽고 빠른 웹사이트 만들기(Ruby Coin)','https://www.inflearn.com/course/ruby-coin','https://cdn.inflearn.com/wp-content/uploads/ruby_on_rails.png','Karoid'),(1311,1,'네트워크 패킷 분석 입문 및 악성코드 샘플 분석','https://www.inflearn.com/course/네트워크-패킷-분석-입문-및-악성코드-샘플-분석','https://cdn.inflearn.com/wp-content/uploads/패킷-분석-및-악성코드-분석.jpg','보안프로젝트'),(1312,1,'파이어베이스를 활용한 메신져 만들기 - Android','https://www.inflearn.com/course/firebase-messenger-android','https://cdn.inflearn.com/wp-content/uploads/firebase_mg.png','신휴창'),(1313,1,'모두를 위한 딥러닝 - Deep Reinforcement Learning','https://www.inflearn.com/course/reinforcement-learning','https://cdn.inflearn.com/wp-content/uploads/rl.jpg','Sung Kim'),(1314,1,'윈도우즈 애플리케이션 취약점 분석 입문부터 활용까지','https://www.inflearn.com/course/윈도우즈-애플리케이션-취약점','https://cdn.inflearn.com/wp-content/uploads/window_protect.jpg','보안프로젝트'),(1315,1,'C# 프로그래밍','https://www.inflearn.com/course/c-프로그래밍','https://cdn.inflearn.com/wp-content/uploads/csharp.png','나우IT'),(1316,1,'파이썬 웹 프로그래밍 - Django로 웹 서비스 개발하기','https://www.inflearn.com/course/django-파이썬-장고-강좌','https://cdn.inflearn.com/wp-content/uploads/django_codesquad.jpg','호눅스'),(1317,1,'C로 배우는 자료구조 및 여러가지 예제 실습','https://www.inflearn.com/course/c로-배우는-자료구조-및-여러가지-예제-실습','https://cdn.inflearn.com/wp-content/uploads/datastructure.jpg','권오흠'),(1318,1,'Stanford iOS 한글자막 강의','https://www.inflearn.com/course/stanford-ios-한글자막-강의','https://cdn.inflearn.com/wp-content/uploads/stanford.jpg','한글링'),(1319,1,'영리한 프로그래밍을 위한 알고리즘 강좌','https://www.inflearn.com/course/알고리즘-강좌','https://cdn.inflearn.com/wp-content/uploads/algorith.png','권오흠'),(1320,1,'Maya 하드서페이스 모델링 강좌','https://www.inflearn.com/course/maya-하드서페이스-모델링-강좌','https://cdn.inflearn.com/wp-content/uploads/maya2.jpg','wtemodeler'),(1321,1,'C 와 C++ 을 동시에 배워보자 - 두들낙서의 C/C++','https://www.inflearn.com/course/c언어-두들낙서','https://cdn.inflearn.com/wp-content/uploads/ddns_C_3-1.jpg','두들낙서'),(1322,1,'Zbrush 4R6 입문에서 마스터 까지 Zbrush 4R6 의 모든것','https://www.inflearn.com/course/zbrush-4r6-입문에서-마스터','https://cdn.inflearn.com/wp-content/uploads/zbrush001-1.jpg','Sup Choi'),(1323,1,'실전 파이썬 게임 만들기 (Python)','https://www.inflearn.com/course/파이썬-게임-만들기-python','https://cdn.inflearn.com/wp-content/uploads/pygame001.jpg','샵투월드'),(1324,1,'Zbrush 이용한 공룡, 공룡책 제작과정 으로 배우는 3D 모델링 배우기','https://www.inflearn.com/course/zbrush-공룡-제작과정','https://cdn.inflearn.com/wp-content/uploads/zbrush002.jpg','비타민상상력'),(1325,1,'안드로이드 기초부터 창업까지 - 실무 강좌','https://www.inflearn.com/course/앱-창업자를-위한-안드로이드-강좌','https://cdn.inflearn.com/wp-content/uploads/adroid1.png','Seoul Wiz'),(1326,1,'이부일의 R릴레오 시즌2 (기초편)','https://www.inflearn.com/course/이부일-r릴레오-시즌2-기초','https://cdn.inflearn.com/public/course-325496-cover/97d71b00-45ad-401c-a5b0-3048231e1a60','이부일'),(1327,1,'마개와 함께 업무자동화 도전하기 (RPA UiPath)','https://www.inflearn.com/course/마개-업무자동화-uipath','https://cdn.inflearn.com/public/courses/325471/course_cover/5c105144-348c-41dd-9109-df83cb550292/rpa-uipath-magae-eng.png','마개튜브'),(1328,1,'[직딩꿀템] 일이 풀리는 비즈니스 이메일 상황별 작성법','https://www.inflearn.com/course/직딩꿀템-상황별-이메일','https://cdn.inflearn.com/public/course-325452-cover/71fe16c0-9693-404c-a112-3760a0f81050','멀티캠퍼스'),(1329,1,'4차 산업혁명 시대의 新창의적 사고, 수학적으로 사고하라!','https://www.inflearn.com/course/4차산업혁명-수학적사고','https://cdn.inflearn.com/public/courses/325447/course_cover/70e4ae15-1615-4bfa-86bf-4c95e2059c87/mulcam-creative-thinking-eng.png','멀티캠퍼스'),(1330,1,'[직딩꿀템] 직장인 Office 응급키트! Excel 기능 제대로 알고 쓰기','https://www.inflearn.com/course/직딩꿀템-엑셀-기능-기본','https://cdn.inflearn.com/public/course-325441-cover/71e6a912-c4da-4b7b-8f4e-33da21684093','멀티캠퍼스'),(1331,1,'[직딩꿀템] 따라하면 만렙찍는 이지쌤의 PPT 만능 스킬','https://www.inflearn.com/course/직딩꿀템-ppt-스킬','https://cdn.inflearn.com/public/courses/325438/course_cover/a5c39054-8eeb-4a98-a6c7-64830eabdf6e/mulcam-ppttechnique-eng.png','멀티캠퍼스'),(1332,1,'[원포인트 MBA] 연세대 최원욱 교수의 회계정보와 의사결정','https://www.inflearn.com/course/원포인트-mba-회계정보-의사결정','https://cdn.inflearn.com/public/courses/325428/course_cover/8bcf42c2-6125-4b8b-ac17-04d5092edf6b/mulcam-mba-cww-eng.png','멀티캠퍼스'),(1333,1,'Microsoft Teams for 사용자','https://www.inflearn.com/course/Microsoft-Teams-사용자','https://cdn.inflearn.com/public/courses/324932/course_cover/a850c7ba-ecfe-4271-9f79-514ce21e2a19/omas-teams2.jpg','오마스'),(1334,1,'1인 온라인마케팅 성공마스터','https://www.inflearn.com/course/1인온라인마케팅','https://cdn.inflearn.com/public/courses/324682/course_cover/1673d0f8-69c5-4bf8-829a-fbbd2ccea796/marketing-successmaster-eng.png','나연재'),(1335,1,'MariaDB 클라이언트 개발, HeidiSQL','https://www.inflearn.com/course/mariadb-heidisql-클라이언트-개발','https://cdn.inflearn.com/public/courses/324637/course_cover/f3ca6577-c239-4aa5-bde4-7aec10922a82/HeidiSQL1_%EC%9D%B8%ED%94%84%EB%9F%B0.png','소프트웨어알림장'),(1336,1,'Klaytn 클레이튼 스마트계약과 탈중앙앱','https://www.inflearn.com/course/klaytn-스마트계약과-탈중앙앱','https://cdn.inflearn.com/public/courses/324608/course_cover/1d5d0144-131a-4ff7-a725-99345788181f/klaytn_hanyang.png','Klaytn'),(1337,1,'웹퍼블리셔가 알려주는 실무 웹사이트 따라만들기 Season1','https://www.inflearn.com/course/퍼블리셔-웹사이트만들기-리베하얀','https://cdn.inflearn.com/public/courses/324224/course_cover/a62ae693-4ed4-49b0-9894-6128971aa33a/inf_001.png','리베하얀'),(1338,1,'[애플 공식 교재] 스위프트 퍼즐 1','https://www.inflearn.com/course/swift-high-coding1','https://cdn.inflearn.com/public/courses/324061/course_cover/ebdc9143-bf06-469a-aa14-07a19a9c2831/inflearn-cover.jpg','코더스하이'),(1339,1,'Klaytn 클레이튼 블록체인 어플리케이션 만들기 - 이론과 실습','https://www.inflearn.com/course/클레이튼','https://cdn.inflearn.com/wp-content/uploads/blockchain_thumanil_ending.jpg','SEJONG IT EDU'),(1340,1,'프로젝트를 통해 배우는 파이썬 프로그램','https://www.inflearn.com/course/자판기-프로그램','https://cdn.inflearn.com/wp-content/uploads/sjh_python2.jpg','노마드크리에이터'),(1341,1,'파이썬 프로그래밍','https://www.inflearn.com/course/파이썬-프로그래밍','https://cdn.inflearn.com/wp-content/uploads/python_re3.jpg','블스'),(1342,1,'아두이노를 이용한 기상정보 수집과 빅데이터 분석','https://www.inflearn.com/course/아두이노-기상정보-수집-빅데이터-분석','https://cdn.inflearn.com/wp-content/uploads/sjh_arduino.jpg','노마드크리에이터'),(1343,1,'[김왼손의 왼손코딩] 파이썬 예제 뽀개기: 파이썬 초중급자를 위한 파이썬 30제','https://www.inflearn.com/course/파이썬-예제','https://cdn.inflearn.com/wp-content/uploads/python4.jpg','김왼손의 왼손코딩'),(1344,1,'게임으로 배우는 JavaScript','https://www.inflearn.com/course/javascript-game','https://cdn.inflearn.com/wp-content/uploads/sjh_JS-1.jpg','노마드크리에이터'),(1345,1,'이더리움 & 솔리디티 기반의 투표 dApp 구현하기','https://www.inflearn.com/course/ethereum-solidity-투표-dapp','https://cdn.inflearn.com/wp-content/uploads/ethereum2_programmers-3.jpg','Mahesh'),(1346,1,'이더리움 입문 바이블: 모든 이더리움 입문자를 위하여','https://www.inflearn.com/course/ethereum-bible','https://cdn.inflearn.com/wp-content/uploads/ethereum1_programmers-6.jpg','Mahesh'),(1347,1,'실전 자바 01 초보자 편','https://www.inflearn.com/course/java-3','https://cdn.inflearn.com/wp-content/uploads/lgj_java1-1.jpg','이교준'),(1348,1,'[유니티 3D] FPS 서바이벌 디펜스','https://www.inflearn.com/course/unity-3','https://cdn.inflearn.com/wp-content/uploads/keidy_unity_fps.jpg','케이디'),(1349,1,'리액트로 구현하는 블록체인 이더리움 Dapp','https://www.inflearn.com/course/dapp','https://cdn.inflearn.com/wp-content/uploads/react-3-1.png','coldmind'),(1350,1,'Unity 3D VR 장르별 실전 게임 프로젝트- 클리커게임','https://www.inflearn.com/course/unity3d-clicker-game','https://cdn.inflearn.com/wp-content/uploads/clicker.jpg','소프트캠퍼스'),(1351,1,'김영삼의 모바일 앱 UX/UI 설계 및 디자인 실무','https://www.inflearn.com/course/모바일-앱-ux-ui','https://cdn.inflearn.com/wp-content/uploads/gui.jpg','소프트캠퍼스'),(1352,1,'PBR 리얼타임 캐릭터 제작','https://www.inflearn.com/course/cg-realtime-odject','https://cdn.inflearn.com/wp-content/uploads/PBR.jpg','Sup Choi'),(1353,1,'안드로이드 취약점 진단','https://www.inflearn.com/course/안드로이드-보안','https://cdn.inflearn.com/wp-content/uploads/i2sec_android.jpg','박상욱'),(1354,1,'\'내 생애 첫번째 코딩 앱인벤터\' 저자에게 배우는 App Inventor','https://www.inflearn.com/course/app-inventor','https://cdn.inflearn.com/wp-content/uploads/appinventor.jpg','이창현'),(1355,1,'Firebase 서버를 통한 Android앱 개발 지침서','https://www.inflearn.com/course/firebase-android','https://cdn.inflearn.com/wp-content/uploads/android_firebase.jpg','하울'),(1356,1,'Firebase 서버를 통한 IOS앱 개발 지침서','https://www.inflearn.com/course/firebase-ios-app','https://cdn.inflearn.com/wp-content/uploads/IOS_firebase.jpg','하울'),(1357,1,'모의해킹 업무 이해, 두번째 이야기','https://www.inflearn.com/course/모의해킹-업무-second','https://cdn.inflearn.com/wp-content/uploads/hacking2.jpg','보안프로젝트'),(1358,1,'언리얼 엔진 4 C++ : Time Travel RPG 제작','https://www.inflearn.com/course/unreal-언리얼-엔진-4-c','https://cdn.inflearn.com/wp-content/uploads/unreal-C1.jpg','SUN YOUNG KIM'),(1359,1,'1인 스타트업 CEO를 위한 IT 서비스 활용 노하우','https://www.inflearn.com/course/it-서비스-활용-노하우','https://cdn.inflearn.com/wp-content/uploads/seeik.jpg','씨익연구소 박윤종 소장'),(1360,1,'아이폰 앱 개발(Swift4 & iOS11) 입문 1편','https://www.inflearn.com/course/아이폰-앱-개발','https://cdn.inflearn.com/wp-content/uploads/ios-happy1.jpg','최완택'),(1361,1,'머신러닝 이론 및 파이썬 실습','https://www.inflearn.com/course/머신러닝이론-파이썬실습','https://cdn.inflearn.com/wp-content/uploads/mlfree.png','Minsuk Heo'),(1362,1,'언리얼 엔진 4 : Intro to Blueprints','https://www.inflearn.com/course/언리얼-엔진-intro-to-blueprints','https://cdn.inflearn.com/wp-content/uploads/blueprint1.png','인프런'),(1363,1,'MongoDB - Javascript로 배우는 NoSQL DB','https://www.inflearn.com/course/mongodb_grammar_basics','https://cdn.inflearn.com/wp-content/uploads/mongodb.jpg','Karoid'),(1364,1,'파이썬스쿨 - 파이썬 프로그래밍을 이용한 업무 자동화','https://www.inflearn.com/course/python-school-업무-자동화','https://cdn.inflearn.com/wp-content/uploads/python_auto.jpg','보안프로젝트'),(1365,1,'새차원의 코틀린(Kotlin) 강좌','https://www.inflearn.com/course/코틀린-강좌-새차원','https://cdn.inflearn.com/wp-content/uploads/kotlin.png','새차원'),(1366,1,'그로스해킹 핵심 강좌 - Growth Hacking Fundamentals','https://www.inflearn.com/course/그로스해킹','https://cdn.inflearn.com/wp-content/uploads/gh.png','Steve Seo'),(1367,1,'모의해킹 업무의 이해','https://www.inflearn.com/course/보안-모의해킹-업무','https://cdn.inflearn.com/wp-content/uploads/it보안-모의해킹.gif','보안프로젝트'),(1368,1,'Sencha ExtJS 6 로 웹 어플리케이션 만들기- 실전/응용편','https://www.inflearn.com/course/sencha-extjs-6-실전응용','https://cdn.inflearn.com/wp-content/uploads/extjs.png','개발로짜'),(1369,1,'모의해킹이란 무엇인가 - 진로편','https://www.inflearn.com/course/모의해킹-진로','https://cdn.inflearn.com/wp-content/uploads/hack.jpg','보안프로젝트'),(1370,1,'초보자를 위한 AWS 클라우드 시작하기','https://www.inflearn.com/course/aws-클라우드-시작하기','https://cdn.inflearn.com/wp-content/uploads/aws.png','인프런'),(1371,1,'AngularJS 기본 개념과 To-Do 앱 만들기 실습 - 앵귤러 강좌','https://www.inflearn.com/course/angular-앵귤러-강좌','https://cdn.inflearn.com/wp-content/uploads/angular002.png','WePlanet Official Account'),(1372,1,'빅데이터의 통찰력을 키워주는 엑셀 Quick Start','https://www.inflearn.com/course/엑셀-강좌','https://cdn.inflearn.com/wp-content/uploads/excelstart.png','topmentor'),(1373,1,'iOS10 아이폰 웹브라우저 Swift3 로 만들기 실습','https://www.inflearn.com/course/swift-ios9-아이폰-웹브라우저-만들기','https://cdn.inflearn.com/wp-content/uploads/webbrowser.jpg','최강사'),(1374,1,'파이썬을 이용한 웹 크롤링(Web Crawling) 어플리케이션 만들기','https://www.inflearn.com/course/웹-크롤링web-crawling-어플리케이션-만들기','https://cdn.inflearn.com/wp-content/uploads/cr.png','onecue'),(1375,1,'[C# 초보 강좌] 예제로 배우는 C#','https://www.inflearn.com/course/c-초보-강좌-예제로-배우는-c','https://cdn.inflearn.com/wp-content/uploads/c_001.jpg','alongside74'),(1376,1,'창원대학교 박동규 교수의 Swift 언어 기초 강좌','https://www.inflearn.com/course/창원대학교-박동규-교수의-swift-기초-강좌','https://cdn.inflearn.com/wp-content/uploads/swift001.jpg','Donggyu Park'),(1377,1,'어셈블리어 배우기','https://www.inflearn.com/course/어셈블리어-배우기','https://cdn.inflearn.com/wp-content/uploads/code001.jpg','인프런'),(1378,1,'초절정 파이썬 강좌 (python)','https://www.inflearn.com/course/초절정-파이썬-강좌-python','https://cdn.inflearn.com/wp-content/uploads/python001.jpg','샵투월드'),(1379,1,'구글 애널리틱스 (google analytics) 분석하기 - RENEW','https://www.inflearn.com/course/구글-애널리틱스-강좌-분석하기-2','https://cdn.inflearn.com/wp-content/uploads/google-1.jpg','인프런'),(1380,1,'여러가지 개발자 도구 사용법','https://www.inflearn.com/course/여러가지-개발자-도구-사용법','https://cdn.inflearn.com/wp-content/uploads/develop002.jpg','인프런'),(1381,1,'[직딩꿀템] 일이 풀리는 비즈니스 이메일 골든 룰','https://www.inflearn.com/course/직딩꿀템-비즈니스-이메일','https://cdn.inflearn.com/public/courses/325456/course_cover/3c33fcc1-8294-4e11-9365-beb4165a948c/mulcam-worksmart-businessmail-2-eng.png','멀티캠퍼스'),(1382,1,'[직딩꿀템] 나도 금손! 지나가던 팀장도 돌아보는 PPT 디자인','https://www.inflearn.com/course/직딩꿀템-ppt-디자인','https://cdn.inflearn.com/public/course-325454-cover/b712643a-2e98-4bcf-82c0-d77f512801a3','멀티캠퍼스'),(1383,1,'[직딩꿀템] 직장인 Office 응급키트! PowerPoint 기능 제대로 알고 쓰기','https://www.inflearn.com/course/직딩꿀템-파워포인트-기능-입문','https://cdn.inflearn.com/public/course-325453-cover/2ad227fe-607e-4fb3-864d-813b8aaea5fc','멀티캠퍼스'),(1384,1,'[직딩꿀템] 원하는 대로 만드는 엑셀 차트의 기술','https://www.inflearn.com/course/직딩꿀템-엑셀-차트','https://cdn.inflearn.com/public/courses/325448/course_cover/a1be4abf-5b51-4b66-a347-87a3a87844aa/mulcam-worksmart-office-excelchart-eng.png','멀티캠퍼스'),(1385,1,'[원포인트 MBA] 서울대 이경미 교수의 마케팅 실전전략','https://www.inflearn.com/course/원포인트-mba-마케팅전략','https://cdn.inflearn.com/public/courses/325442/course_cover/2ef692ce-4772-43e4-bf16-44b2da88bd61/mulcam-mba-lgm-eng.png','멀티캠퍼스'),(1386,1,'[직딩꿀템] 엑셀 배열수식을 활용한 100배 빠른 함수 작업','https://www.inflearn.com/course/직딩꿀템-엑셀-배열수식','https://cdn.inflearn.com/public/courses/325439/course_cover/fa497c24-7297-40aa-a5f6-70a3dd898017/mulcam-arrayformula-eng.png','멀티캠퍼스'),(1387,1,'[직딩꿀템] 직장인 Office 응급키트! Word 기능 제대로 알고 쓰기','https://www.inflearn.com/course/직딩꿀템-워드-기본','https://cdn.inflearn.com/public/courses/325435/course_cover/84de85ef-4a01-46fe-85d0-bacacfa95625/mulcam-wordbasic-eng.png','멀티캠퍼스'),(1388,1,'[원포인트 MBA] 연세대 신현한 교수의 재무관리 에센스','https://www.inflearn.com/course/원포인트-mba-재무관리','https://cdn.inflearn.com/public/courses/325429/course_cover/52a88cf4-d776-427f-b13f-41b576cc2a8b/mulcam-mba-shh-eng.png','멀티캠퍼스'),(1389,1,'2. 웹개발 코스 [JAVA 개발언어]','https://www.inflearn.com/course/웹개발-기초-java','https://cdn.inflearn.com/public/courses/324887/course_cover/7c90fa90-5157-46f6-a28d-450995d16d8e/java-basic-eng.png','개발자 Park'),(1390,1,'컴퓨터 일반론','https://www.inflearn.com/course/컴퓨터-일반론','https://cdn.inflearn.com/public/course-324450-cover/5101403b-94ed-4f25-8b73-93488981552a','만능MN'),(1391,1,'코틀린으로 만드는 스프링부트','https://www.inflearn.com/course/코틀린-스프링부트','https://cdn.inflearn.com/public/courses/324016/course_cover/93ddf9bf-7cd2-4a00-abe1-1d3ae3912eaa/kwang_kotlin.png','최광성'),(1392,1,'된다! 일러스트레이터 CC','https://www.inflearn.com/course/된다-일러스트레이터-cc','https://cdn.inflearn.com/wp-content/uploads/ai.jpg','이지스퍼블리싱'),(1393,1,'2018 Do it! 안드로이드 앱 프로그래밍','https://www.inflearn.com/course/2018-안드로이드-앱-프로그래밍-오레오','https://cdn.inflearn.com/wp-content/uploads/2018doit-android.jpg','이지스퍼블리싱'),(1394,1,'블록체인 이더리움 부동산 댑(Dapp) 만들기 - 기본편','https://www.inflearn.com/course/blockchain-이더리움-dapp','https://cdn.inflearn.com/wp-content/uploads/blockchain_ssj2-1.jpg','SEJONG IT EDU'),(1395,1,'2D 캐드(CAD) 마스터하기 (오픈소프트웨어)','https://www.inflearn.com/course/2d-cad-마스터-리브레캐드','https://cdn.inflearn.com/wp-content/uploads/2dcad.jpg','gremaza'),(1396,1,'블록체인과 솔리디티','https://www.inflearn.com/course/블록체인-blockchain','https://cdn.inflearn.com/wp-content/uploads/blockchain.jpg','박민 박'),(1397,1,'Firebase 서버를 통한 IOS앱 HowlTalk 만들기','https://www.inflearn.com/course/firebase-ios-채팅앱-howltalk','https://cdn.inflearn.com/wp-content/uploads/howtalk_IOS-1.jpg','하울'),(1398,1,'C# 네트워크 프로그래밍','https://www.inflearn.com/course/c-네트워크-프로그래밍','https://cdn.inflearn.com/wp-content/uploads/C-networ2.jpg','나우IT'),(1399,1,'구글 애드워즈 - 캠페인 유형별로 모아서보기','https://www.inflearn.com/course/marketing-google-adwords','https://cdn.inflearn.com/wp-content/uploads/googleadwords.jpg','인프런'),(1400,1,'C++ Let\'s Make Games','https://www.inflearn.com/course/c_game-making','https://cdn.inflearn.com/wp-content/uploads/C_C.png','노근석'),(1401,1,'인슈의 게임 캐릭터 포토샵 디자인&원화 입문자편','https://www.inflearn.com/course/게임-캐릭터-디자인-원화-입문자편','https://cdn.inflearn.com/wp-content/uploads/insue.jpeg','박인수'),(1402,1,'\'해킹대회 문제\'로 배우는 파일시스템 이해/실습','https://www.inflearn.com/course/해킹대회-문제로-배우는-파일시스템','https://cdn.inflearn.com/wp-content/uploads/해킹문제_파일시스템분석.jpg','보안프로젝트'),(1403,1,'XE3 사이트제작 튜토리얼','https://www.inflearn.com/course/xe3-사이트제작','https://cdn.inflearn.com/wp-content/uploads/xe3-1.jpg','인프런'),(1404,1,'R 프로그램 - 시즌 1','https://www.inflearn.com/course/r-프로그램-시즌-1','https://cdn.inflearn.com/wp-content/uploads/rprogramming.jpg','seounglim45'),(1405,1,'타입스크립트 코리아 : 기초 세미나','https://www.inflearn.com/course/타입스크립트-코리아-1705-기초-세미나','https://cdn.inflearn.com/wp-content/uploads/TypeScript_inflearn.png','Mark Lee'),(1406,1,'야곰의 스위프트 기본 문법 강좌','https://www.inflearn.com/course/스위프트-기본-문법','https://cdn.inflearn.com/wp-content/uploads/swift_basic.png','yagom'),(1407,1,'Sencha ExtJS 6 로 화면개발 더이상 고민하지 말자 - 기초편','https://www.inflearn.com/course/sencha-extjs-6-기초','https://cdn.inflearn.com/wp-content/uploads/sencha.jpg','개발로짜'),(1408,1,'아이폰 ios 개발 강좌 - 앱 12개를 만들며 배우는 Swift3 & iOS10','https://www.inflearn.com/course/swift3-스위프트-ios-개발-강좌','https://cdn.inflearn.com/wp-content/uploads/swift33.jpg','최강사'),(1409,1,'라이노 3D 모델링 실전 예제 - 향수병, Zero three 스피커 모델링','https://www.inflearn.com/course/라이노-3d-모델링-향수병','https://cdn.inflearn.com/wp-content/uploads/rhino001.jpg','권경범'),(1410,1,'누구나 쉽게 따라하며 배우는 - 에프터이펙트 입문 강좌','https://www.inflearn.com/course/누구나-쉽게-따라하며-배우는-에프터이펙트-입문편','https://cdn.inflearn.com/wp-content/uploads/aftereffect001.jpg','송승빈'),(1411,1,'[C# 중급 강좌] 라이브러리 만들기','https://www.inflearn.com/course/c-중급-강좌-라이브러리-만들기','https://cdn.inflearn.com/wp-content/uploads/c_001.jpg','alongside74'),(1412,1,'토튜의 따라하면서 게임을 만드는 유니티 NGUI 강좌','https://www.inflearn.com/course/토튜의-유니티-ngui-강좌','https://cdn.inflearn.com/wp-content/uploads/ngui001.jpg','totuworld'),(1413,1,'[포토샵 혁명 방송] 포토샵 고급 완성 - 펜툴 마스터 하기','https://www.inflearn.com/course/포토샵-혁명-방송-포토샵-고급-완성-펜툴-마스터-하-2','https://cdn.inflearn.com/wp-content/uploads/photoshop001.jpg','인프런'),(1414,1,'유니티 기초 강좌 - 기획부터 사용까지','https://www.inflearn.com/course/유니티-기초-강좌-기획부터-사용까지-2','https://cdn.inflearn.com/wp-content/uploads/unity002.jpg','인프런'),(1415,1,'아두이노 강좌','https://www.inflearn.com/course/아두이노-강좌','https://cdn.inflearn.com/wp-content/uploads/arduino001.jpg','인프런'),(1416,1,'제이쿼리모바일 (Jquery Mobile) 배우기 강좌 - 웹학교','https://www.inflearn.com/course/제이쿼리모바일-웹학교','https://cdn.inflearn.com/wp-content/uploads/mobile_app.jpg','웹학교'),(1417,1,'실전 HTML & CSS 강좌','https://www.inflearn.com/course/html-css-강좌','https://cdn.inflearn.com/wp-content/uploads/web1.png','Seoul Wiz'),(1418,1,'빠르게 활용 가능한 파이썬 3.2 프로그래밍','https://www.inflearn.com/course/빠르게-활용-가능한-파이썬-3-2-프로그래밍','https://cdn.inflearn.com/wp-content/uploads/wikipython.jpg','인프런'),(1419,1,'C# 처음부터 배우기','https://www.inflearn.com/course/c-sharp-처음부터-배우기','https://cdn.inflearn.com/public/courses/325001/course_cover/efb3e24d-d9dc-40ff-9f94-b1c6416d9d73/c-sharp-beginner-eng.png','개발자 Park'),(1420,1,'게임 개발을 위해 알아야 할 Azure CDN','https://www.inflearn.com/course/Azure-CDN-게임개발','https://cdn.inflearn.com/public/courses/324331/course_cover/4bdcf8ca-714c-4531-95de-2fb6bd145fa8/azurecdn_image.PNG','클라우드메이트'),(1421,1,'Do it! Node.js 프로그래밍(개정판)','https://www.inflearn.com/course/2017-node-js-프로그래밍','https://cdn.inflearn.com/wp-content/uploads/doit_node.jpg','이지스퍼블리싱'),(1422,1,'공도리의 HTML5와 CSS3를 이용한 홈페이지 개발','https://www.inflearn.com/course/html5','https://cdn.inflearn.com/wp-content/uploads/html_css.jpg','이우진'),(1423,1,'알고리즘의 개요와 실습 환경 구축','https://www.inflearn.com/course/algorithm-알고리즘-실습','https://cdn.inflearn.com/wp-content/uploads/Algorithm-1.jpg','안경잡이개발자'),(1424,1,'JSP 강의평가 웹 사이트 개발하기','https://www.inflearn.com/course/강의평가-사이트-jsp','https://cdn.inflearn.com/wp-content/uploads/jsp-1.jpg','안경잡이개발자'),(1425,1,'Firebase 서버를 통한 Android앱 HowlTalk 만들기','https://www.inflearn.com/course/howltalk-android-채팅앱','https://cdn.inflearn.com/wp-content/uploads/android-2.jpg','하울'),(1426,1,'겜팔이의 안드로이드 세뇌교실 - 인★그램 개발부터 배포까지','https://www.inflearn.com/course/안드로이드-세뇌교실','https://cdn.inflearn.com/wp-content/uploads/android-senue.jpg','겜팔이'),(1427,1,'ionic 3로 만드는 Push Message Server','https://www.inflearn.com/course/push-message-server','https://cdn.inflearn.com/wp-content/uploads/pushme1.jpg','김철현'),(1428,1,'인슈의 캐주얼 게임 캐릭터 원화','https://www.inflearn.com/course/게임-캐릭터-원화','https://cdn.inflearn.com/wp-content/uploads/insue2.jpeg','박인수'),(1429,1,'안드로이드 스튜디오로 안드로이드 앱 만들기','https://www.inflearn.com/course/안드로이드-스튜디오-안드로이드-앱-만들기','https://cdn.inflearn.com/wp-content/uploads/androidstudio.png','안경잡이개발자'),(1430,1,'파이어베이스(Firebase)를 이용한 웹+안드로이드 메모 어플리케이션 만들기','https://www.inflearn.com/course/파이어베이스-강좌-웹-어플리케이션','https://cdn.inflearn.com/wp-content/uploads/firebase.jpg','신휴창'),(1431,1,'아이오닉(ionic2) 개발을 위한 타입스크립트 기본','https://www.inflearn.com/course/아이오닉-ionic2-타입스크립트','https://cdn.inflearn.com/wp-content/uploads/typescriptforang.jpg','차정민'),(1432,1,'널널한 박교수의 C 강좌 고급편','https://www.inflearn.com/course/널널한-박교수-c-강좌','https://cdn.inflearn.com/wp-content/uploads/c-1.jpg','Donggyu Park'),(1433,1,'Git 과 Redmine 으로 하는 프로젝트 관리','https://www.inflearn.com/course/git-redmine-gitflow','https://cdn.inflearn.com/wp-content/uploads/gitredmine.jpg','가람'),(1434,1,'모두를 위한 딥러닝 - 기본적인 머신러닝과 딥러닝 강좌','https://www.inflearn.com/course/기본적인-머신러닝-딥러닝-강좌','https://cdn.inflearn.com/wp-content/uploads/machinelearning1.jpg','Sung Kim'),(1435,1,'Objective-C 를 이용해 iOS9 아이폰 웹브라우저 만들기','https://www.inflearn.com/course/objective-c-강좌-웹브라우저','https://cdn.inflearn.com/wp-content/uploads/objective-web.jpg','최강사'),(1436,1,'Django 초보 가이드 - 실습을 통해 알아보는 장고 입문','https://www.inflearn.com/course/django-초보-가이드-실습을-통해-알아보는-장고-입문','https://cdn.inflearn.com/wp-content/uploads/django001.jpg','onecue'),(1437,1,'C++ 로 배우는 자료구조와 알고리즘','https://www.inflearn.com/course/c-로-배우는-자료구조와-알고리즘','https://cdn.inflearn.com/wp-content/uploads/c.jpg','인프런'),(1438,1,'왕초보를 위한 스위프트 프로그래밍 강좌 (iOS app with xcode&swift)','https://www.inflearn.com/course/왕초보를-위한-스위프트-프로그래밍-강좌-ios-app-xcodeswift','https://cdn.inflearn.com/wp-content/uploads/swift.jpg','인프런'),(1439,1,'독하게 시작하는 C 프로그래밍','https://www.inflearn.com/course/독하게-시작하는-c-프로그래밍','https://cdn.inflearn.com/wp-content/uploads/c003.jpg','최호성'),(1440,1,'워드프레스 쇼핑몰(우커머스) 제작 따라하기','https://www.inflearn.com/course/워드프레스-쇼핑몰우커머스-제작-따라하기','https://cdn.inflearn.com/wp-content/uploads/woo001.png','인프런'),(1441,1,'Do it! 안드로이드 앱 프로그래밍 저자 정재곤 박사 직강 동영상 강좌!','https://www.inflearn.com/course/do-it-안드로이드-앱-프로그래밍-안드로이드-강좌-2','https://cdn.inflearn.com/wp-content/uploads/easy_and.png','이지스퍼블리싱'),(1442,1,'테레비 보다 재미있는 제이쿼리(jQuery) 강좌','https://www.inflearn.com/course/테레비-보다-재미있는-제이쿼리jquery-강좌','https://cdn.inflearn.com/wp-content/uploads/jquery001.jpg','샵투월드'),(1443,1,'유니티 3D 로그라이크 게임 만들기 [한글자막]','https://www.inflearn.com/course/유니티-3d-게임-만들기','https://cdn.inflearn.com/wp-content/uploads/unity003.jpg','인프런'),(1444,1,'Doit! HTML5 + CSS3 웹 표준의 정석 (전면 개정 1판-2019)','https://www.inflearn.com/course/html5-css3-웹-표준의-정석','https://cdn.inflearn.com/wp-content/uploads/easy_html.png','이지스퍼블리싱'),(1445,1,'Do it! 반응형 웹 디자인 - 저자 동영상 강좌','https://www.inflearn.com/course/do-it-반응형-웹-디자인-저자-동영상-강좌','https://cdn.inflearn.com/wp-content/uploads/easy_web.png','이지스퍼블리싱'),(1446,1,'타이젠 강좌','https://www.inflearn.com/course/타이젠-강좌','https://cdn.inflearn.com/wp-content/uploads/tizen001.jpg','Seoul Wiz'),(1447,1,'아이폰 앱 제작기 – 원트소프트 꼬마마녀 샐리','https://www.inflearn.com/course/아이폰-앱-제작기-원트소프트-꼬마마녀-샐리','https://cdn.inflearn.com/public/course-19889-cover/8bb39c03-cf00-497b-9f09-c319a219bf04','Choong Ji Kim'),(1448,1,'TED – 자기계발','https://www.inflearn.com/course/ted-자기개발','https://cdn.inflearn.com/public/courses/19671/course_cover/267bc159-34ed-42e2-985b-19badfa9ab84/ted.png','인프런'),(1449,1,'Ionic PWA (프로그래시브 웹 앱) 만들기','https://www.inflearn.com/course/ionic-pwa','https://cdn.inflearn.com/wp-content/uploads/pwa-ionic1.jpg','김철현'),(1450,1,'퓨즈 스터디를 원하다[Wonhada]','https://www.inflearn.com/course/fusetools','https://cdn.inflearn.com/wp-content/uploads/퓨즈.jpg','원강민'),(1451,1,'초보도 쉽게 할 수 있는 아이폰 어플(iOS App) 만들기','https://www.inflearn.com/course/ios-app-for-beginner','https://cdn.inflearn.com/wp-content/uploads/슬라이드3.jpg','OnArcher'),(1452,1,'자바(JAVA) 언어 기본 강좌','https://www.inflearn.com/course/자바java-언어-기본-강좌','https://cdn.inflearn.com/wp-content/uploads/javavavava.png','나우IT'),(1453,1,'부트스트랩으로 개인 홈페이지 만들기','https://www.inflearn.com/course/부트스트랩으로-개인-홈페이지-만들기','https://cdn.inflearn.com/wp-content/uploads/bootstrap-05.jpg','안경잡이개발자'),(1454,1,'게임학개론','https://www.inflearn.com/course/게임학개론','https://cdn.inflearn.com/wp-content/uploads/gamestudy.jpg','나우IT'),(1455,1,'나의 첫 Django 앱 만들기','https://www.inflearn.com/course/나의-첫-django-앱-만들기','https://cdn.inflearn.com/wp-content/uploads/python.png','schoolofweb.net'),(1456,1,'MIT 공개강좌 - 컴퓨터 과학 & 프로그래밍 입문 (python)','https://www.inflearn.com/course/mit-공개강좌-python','https://cdn.inflearn.com/wp-content/uploads/mit.jpg','인프런'),(1457,1,'id software 3D 아티스트 에게 배우는 Maya 3D 모델링 입문','https://www.inflearn.com/course/maya-3d-모델링-입문','https://cdn.inflearn.com/wp-content/uploads/maya001.jpg','Sup Choi'),(1458,1,'[포토샵 혁명 방송] 포토샵 기초 완성','https://www.inflearn.com/course/포토샵-혁명-방송-포토샵-기초-완성','https://cdn.inflearn.com/wp-content/uploads/photoshop002.jpg','인프런'),(1459,1,'혼자 공부하는 C 언어 저자에게 배우는 C 언어의 모든 것','https://www.inflearn.com/course/c언어-온라인강좌','https://cdn.inflearn.com/wp-content/uploads/c001.jpg','한빛미디어'),(1460,1,'뇌를 자극하는 윈도우즈 시스템 프로그래밍','https://www.inflearn.com/course/시스템-프로그래밍','https://cdn.inflearn.com/wp-content/uploads/coding001.jpg','한빛미디어'),(1461,1,'\'이것이 리눅스다\' 저자의 Red Hat CentOS7 리눅스 서버&네트워크 강좌','https://www.inflearn.com/course/이것이-리눅스다','https://cdn.inflearn.com/wp-content/uploads/linux001.jpg','한빛미디어'),(1462,1,'Angular 기본과 간단한 To-Do 어플리케이션 만들기','https://www.inflearn.com/course/angular-강좌-기본','https://cdn.inflearn.com/wp-content/uploads/angular-1.png','Jeado Ko'),(1463,1,'성공적인 코딩 인터뷰를 위한 코딩 인터뷰 정복하기 - 코딩 테스트','https://www.inflearn.com/course/코딩-인터뷰','https://cdn.inflearn.com/wp-content/uploads/interview.jpg','Minsuk Heo'),(1464,1,'PHP 기초강좌 - 쩡원의 게시판 홈페이지 제작 무작정 따라하기','https://www.inflearn.com/course/php-기초강좌-게시판-만들기','https://cdn.inflearn.com/wp-content/uploads/phpforbeginner.png','인프런'),(1465,1,'잘쓰는 기능만 쏙 뽑아 배우는 파워포인트 Quick Start','https://www.inflearn.com/course/파워포인트-강좌-quick-start','https://cdn.inflearn.com/wp-content/uploads/ppt1.png','topmentor'),(1466,1,'스크래치로 배우는 알고리즘','https://www.inflearn.com/course/스크래치-알고리즘','https://cdn.inflearn.com/wp-content/uploads/algorithm_scratch.jpg','인프런'),(1467,1,'자바 디자인 패턴의 이해 - Gof Design Pattern','https://www.inflearn.com/course/자바-디자인-패턴','https://cdn.inflearn.com/wp-content/uploads/designpatterns.jpg','가람'),(1468,1,'워드프레스 홈페이지 1시간만에 만들기','https://www.inflearn.com/course/워드프레스-홈페이지-1시간만에-만들기','https://cdn.inflearn.com/wp-content/uploads/wordpress.jpg','인프런'),(1469,1,'섹쉬 PHP 강좌 - PHP 기본부터 MYSQL, XML, 네이버쇼핑검색 을 이용한 활용까지','https://www.inflearn.com/course/섹쉬-php-강좌','https://cdn.inflearn.com/wp-content/uploads/php001.jpg','샵투월드'),(1470,1,'Finish Korean pronunciation at once','https://www.inflearn.com/course/한국어학습-발음','https://cdn.inflearn.com/public/course-325588-cover/4d01b253-955d-483a-86f9-e12fd2c722d9','tutor UU'),(1471,1,'워드프레스 속성 마스터 과정','https://www.inflearn.com/course/워드프레스-속성-마스터','https://cdn.inflearn.com/public/courses/325177/course_cover/00435a77-a5e7-4a70-bfea-39f366343bba/wordpress-master-eng.png','파워러닝');
/*!40000 ALTER TABLE `inflearn_total_list` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `member`
--

DROP TABLE IF EXISTS `member`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `member` (
  `uid` bigint(20) NOT NULL AUTO_INCREMENT,
  `email` varchar(100) DEFAULT NULL,
  `password` varchar(100) DEFAULT NULL,
  `name` varchar(200) DEFAULT NULL,
  `create_date` datetime DEFAULT current_timestamp(),
  `introduce` varchar(200) DEFAULT NULL,
  `profileimage` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`uid`),
  UNIQUE KEY `user_idx_unique_email` (`email`)
) ENGINE=InnoDB AUTO_INCREMENT=102 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `member`
--

LOCK TABLES `member` WRITE;
/*!40000 ALTER TABLE `member` DISABLE KEYS */;
INSERT INTO `member` VALUES (84,'easydeveloper1@naver.com','71c4e06ece01af111978ac1b4d3e76d6a583a99b1a64f1dd5af8fe219abab4ba','성정욱','2021-02-17 18:30:11','개발하고 공유하는 것을 좋아하는 백앤드 개발자입니다.','http://3.36.125.70/profileimg/9df9480f-d5fd-43e9-b606-7b9020dafbd3_썸네일2.png'),(85,'midkyle1216@gmail.com','739ec448edaf7f4d91eb443462ed320074862935d2c799b76c6ed42ec6edd78c','kyle','2021-02-17 18:31:28',NULL,NULL),(86,'frontend@gmail.com','312433c28349f63c4f387953ff337046e794bea0f9b9ebfcb08e90046ded9c76','조우리','2021-02-17 20:40:56','안녕하세요! frontend입니다. 반갑습니다','http://3.36.125.70/profileimg/d66979a3-ea4e-4359-b42f-1df30f3febb6_71QqCSMgI3L._AC_SL1500_.jpg'),(87,'easydeveloper2@naver.com','71c4e06ece01af111978ac1b4d3e76d6a583a99b1a64f1dd5af8fe219abab4ba','성정욱2','2021-02-17 22:06:54',NULL,'http://3.36.125.70/profileimg/c6ca3c56-ffee-44ac-b781-1d78ea7d04d2_썸네일3.png'),(88,'easydeveloper3@naver.com','71c4e06ece01af111978ac1b4d3e76d6a583a99b1a64f1dd5af8fe219abab4ba','성정욱3','2021-02-17 22:16:11',NULL,'http://3.36.125.70/profileimg/7168817b-fbb3-4b69-bc84-323c928e2fe2_썸네일4.png'),(89,'opert1564@naver.com','85fd2024a2029ecc503cc6de21ed5136f579c9fda18e6bbfb9c2c8d0d6a01e2f','최동식','2021-02-17 22:16:58',NULL,NULL),(90,'pangpang@pang.com','118a071e42977187a8498d13eacd62830ac5bf0d93b92878739ac2e45ed18ecf','괴도루팡','2021-02-17 22:27:47',NULL,NULL),(91,'administrator@statoverflow.com','739ec448edaf7f4d91eb443462ed320074862935d2c799b76c6ed42ec6edd78c','kyle','2021-02-17 22:33:30',NULL,NULL),(92,'jasmin445512@gmail.com','5f5b24ad65531525ddcccace0598dafaa386e30749babf12c7b0cda2af45c582','김알파카','2021-02-17 22:48:28',NULL,NULL),(93,'easydeveloper5@naver.com','71c4e06ece01af111978ac1b4d3e76d6a583a99b1a64f1dd5af8fe219abab4ba','1','2021-02-18 15:04:03',NULL,NULL),(94,'oopert1564@naver.com','2d3726fa17d42da1612f2e607f8f79335f453e33254077ae04ebed5e2e2d9365','최싸피','2021-02-18 15:13:00',NULL,NULL),(95,'q@naver.com','739ec448edaf7f4d91eb443462ed320074862935d2c799b76c6ed42ec6edd78c','q','2021-02-18 15:15:28',NULL,NULL),(96,'w@naver.com','739ec448edaf7f4d91eb443462ed320074862935d2c799b76c6ed42ec6edd78c','w','2021-02-18 15:18:57',NULL,NULL),(97,'e@naver.com','739ec448edaf7f4d91eb443462ed320074862935d2c799b76c6ed42ec6edd78c','e','2021-02-18 15:19:57',NULL,NULL),(98,'r@naver.com','739ec448edaf7f4d91eb443462ed320074862935d2c799b76c6ed42ec6edd78c','r','2021-02-18 15:20:45',NULL,NULL),(99,'t@naver.com','739ec448edaf7f4d91eb443462ed320074862935d2c799b76c6ed42ec6edd78c','t','2021-02-18 15:21:53',NULL,NULL),(100,'suri@naver.com','415a00b7bb55e94b02b8bd6e6e6f76cb478d2a1303e60fa8894e010684d56ad6','수리','2021-02-18 15:23:32',NULL,NULL),(101,'y@naver.com','739ec448edaf7f4d91eb443462ed320074862935d2c799b76c6ed42ec6edd78c','y','2021-02-18 15:29:18',NULL,NULL);
/*!40000 ALTER TABLE `member` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `portfolio`
--

DROP TABLE IF EXISTS `portfolio`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `portfolio` (
  `fid` bigint(20) NOT NULL AUTO_INCREMENT,
  `email` varchar(100) NOT NULL,
  `content` varchar(20000) DEFAULT NULL,
  `create_date` datetime DEFAULT current_timestamp(),
  PRIMARY KEY (`fid`),
  KEY `email` (`email`),
  CONSTRAINT `portfolio_ibfk_1` FOREIGN KEY (`email`) REFERENCES `member` (`email`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=262 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `portfolio`
--

LOCK TABLES `portfolio` WRITE;
/*!40000 ALTER TABLE `portfolio` DISABLE KEYS */;
INSERT INTO `portfolio` VALUES (261,'frontend@gmail.com','','2021-02-18 13:47:13');
/*!40000 ALTER TABLE `portfolio` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `post`
--

DROP TABLE IF EXISTS `post`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `post` (
  `pid` bigint(20) NOT NULL AUTO_INCREMENT,
  `title` varchar(100) CHARACTER SET utf8 DEFAULT NULL,
  `email` varchar(100) CHARACTER SET utf8 NOT NULL,
  `content` varchar(16000) DEFAULT NULL,
  `likes` int(11) DEFAULT NULL,
  `create_date` datetime DEFAULT current_timestamp(),
  `postimage` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`pid`),
  KEY `email` (`email`),
  CONSTRAINT `post_ibfk_2` FOREIGN KEY (`email`) REFERENCES `member` (`email`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=304 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `post`
--

LOCK TABLES `post` WRITE;
/*!40000 ALTER TABLE `post` DISABLE KEYS */;
INSERT INTO `post` VALUES (246,'[알고리즘] DFS','easydeveloper1@naver.com','### DFS (Depth-First Search)\n\n> : **DFS**는 깊이 우선 탐색이다.\n> 그래프에서 \'깊은 부분\'을 우선적으로 탐색하는 알고리즘이다.\n\n![img](https://media.vlpt.us/images/suuhyeony/post/6608c782-a0b3-42cd-b573-7457bebd40ec/dfs%ED%81%AC%EA%B8%B0%EC%A1%B0%EC%A0%95.jpg)\n**A-B-D-E-F-C-G-H-I-J** 순으로 순회.\n(정점의 자식들을 먼저 탐색하는 방식)\n\n\n\n### 알고리즘 구현\n\n: **스택**(need_visit),(visited) 자료구조에 기초하며,\n재귀함수를 이용해 구현할 수도 있다.\n\n**1)** 탐색 시작 노드를 스택(need_visit)에 삽입하고,\n방문 처리(need_visit에서 꺼낸 후, visited에 삽입)한다.\n\n**2)** 해당 노드의 인접 노드가 있으면, 그 인접 노드를 스택(need_visit)에 넣는다.\n\n**3)** 스택(need_visit)에서 최상단 노드를 꺼낸 뒤, (visited에 있는지 확인하고 없으면) 방문처리 한다. 2)-3) 반복\n\n*****만약 방문한 적이 있다면(visited에 이미 있다면), 스택(need_visit)에서 다음 최상단 노드를 빼서 비교한다.\n\n\n\n- **스택만 활용**\n\n```python\ndef dfs(graph, start_node):\n    visited, need_visit = list(), list()\n    need_visit.append(start_node)\n    \n    while need_visit:\n    	cur_node = need_visit.pop()\n        if cur_node not in visited:\n            visited.append(cur_node)\n            need_visit.extend(graph[cur_node])\n            \n    return visited\n```\n\n\n\n- **재귀함수 활용**\n\n```python\ndef dfs(graph, cur_node, visited):\n    # 현재 노드 방문 처리\n    visited[cur_node] = True\n    print(cur_node, end= \' \')\n    # 현재 노드와 연결된 다른 노드를 재귀적으로 방문\n    for node in graph[cur_node]:\n    	if not visited[node]:\n           dfs(graph, node, visited)\n        \n# 각 노드가 방문된 정보를 리스트 자료형으로 표현\nvisited = [False] * len(graph)\n# 함수 호출\ndfs(graph, start_node, visited)\n```\n\n\n\n### 시간 복잡도\n\n> : O(V+E)\n> 노드 수(V)와 간선 수(E)를 더한 만큼 수행한다.\n\n\n\n*참고) Dave LEE 강의, <이것이 코딩 테스트다> 서적*',1,'2020-08-04 12:13:13','http://3.36.125.70/thumbimg/d913cbbd-116c-4010-a4bb-32a19793eb15_4.jpg'),(247,'Git 협업 가이드','easydeveloper1@naver.com','# Feature 브랜치\n\n------\n\n새로운 기능 개발을 위한 `feature` 브랜치를 생성할 때 브랜치 이름은 다음과 같은 규칙으로 생성합니다. `feature` 브랜치는 마지막 `develop` 브랜치로부터 생성합니다. 꼭 브랜치를 생성하기 전에 `develop` 브랜치를 `pull` 받습니다.\n\n```null\nfeature/{기능}\n```\n\n`feature` 브랜치는 작은 기능 단위로 쪼개어 최대 10개 미만의 커밋으로 구성되도록 합니다. `feature` 브랜치가 `develop` 브랜치에 성공적으로 병합되었다면 `feature` 브랜치는 로컬과 원격에서 삭제합니다.\n\n**feature 브랜치 생성하기**\n\n```bash\ngit checkout -b feature/feature1\n```\n\n# Commit\n\n------\n\n커밋은 기능, 타입 단위로 짧게 끊어서 커밋합니다. 한번에 작업한 내용이 많더라도 커밋은 여러번에 걸쳐 구분하여 커밋합니다. 그리고 커밋 타입에 따라 구분하여 커밋합니다. 예를 들어 리소스 추가는 리소스끼리 모아 커밋하고 버그 수정은 버그 수정만 따로 커밋하고 새로운 기능 추가는 추가된 기능만 따로 커밋합니다.\n\n커밋을 하였다면 원격 저장소에 `push` 하여 다른 멤버가 자신이 작업하고 있는 파일, 내용을 알 수 있도록 합니다.\n\n**commit 하기**\n\n```bash\ngit add Assets/something.cs\ngit commit -m \"feat : Change something\"\n```\n\n**원격 저장소에 작업중인 브랜치 원격 저장소에 push 하기**\n\n```bash\ngit push --set-upstream origin feature/feature1\n```\n\n# Commit message\n\n------\n\nhttps://doublesprogramming.tistory.com/256\n\n커밋 메세지를 작성할 때는 다음과 같은 규칙으로 일관성 있게 작성합니다.\n\n### 1. Commit Message Structure\n\n기본적으로 커밋 메세지는 아래와 같이 제목 / 본문 / 꼬리말로 구성합니다.\n\n```null\ntype : subject\n\nbody\n\nfooter\n```\n\n### 2. Commit Type\n\n- feat : 새로운 기능 추가\n- fix : 버그 수정, 기능 수정\n- docs : 문서 수정\n- refactor : 코드 리팩토링 (변수명 수정 등)\n- test : 테스트 코드, 리팩토링 테스트 코드 추가\n- style : 코드 스타일 변경, 코드 자체 변경이 없는 경우\n- remove : 파일 또는 코드, 리소스 제거\n- resource : 이미지 리소스, prefab 등의 코드와 상관없는 리소스 추가\n\n### 3. Subject\n\n- 제목은 50자를 넘기지 않고, 대문자로 작성하고 마침표를 붙이지 않습니다.\n- 과거시제를 사용하지 않고 명령어로 작성합니다.\n\n예시\n\n```null\nfeat : Add translation to missing strings\nfeat : Disable publishing\nfeat : Sort list context menu\nfeat : Resize minimize/delete handle icons so they take up the entire topbar\nfix : Fix typo in cleanup.sh file\n```\n\n### 4. Body\n\n- 선택사항이기 때문에 모든 커밋에 본문내용을 작성할 필요는 없습니다.\n- 부연설명이 필요하거나 커밋의 이유를 설명할 경우 작성합니다.\n- 제목과 구분되기 위해 한칸을 띄워 작성합니다.\n- 각 줄은 72자를 넘기지 않습니다.\n- **본문은 꼭 영어로 작성할 필요는 없습니다.**\n\n### 5. Footer\n\n- 선택사항이기 때문에 모든 커밋에 꼬리말을 작성할 필요는 없습니다.\n- 등록된 이슈 ID를 트래킹할 때 주로 사용합니다.\n\n### 6. Example Commit Message\n\n```null\nfeat: Summarize changes in around 50 characters or less\n\nMore detailed explanatory text, if necessary. Wrap it to about 72\ncharacters or so. In some contexts, the first line is treated as the\nsubject of the commit and the rest of the text as the body. The\nblank line separating the summary from the body is critical (unless\nyou omit the body entirely); various tools like `log`, `shortlog`\nand `rebase` can get confused if you run the two together.\n\nExplain the problem that this commit is solving. Focus on why you\nare making this change as opposed to how (the code explains that).\nAre there side effects or other unintuitive consequenses of this\nchange? Here\'s the place to explain them.\n\nFurther paragraphs come after blank lines.\n\n - Bullet points are okay, too\n\n - Typically a hyphen or asterisk is used for the bullet, preceded\n   by a single space, with blank lines in between, but conventions\n   vary here\n\nIf you use an issue tracker, put references to them at the bottom,\nlike this:\n\nResolves: #123\nSee also: #456, #789\n```\n\n# git stash\n\n------\n\n현재 작업중인 브랜치에서 다른 브랜치로 `checkout` 해야 할 경우 커밋하지 않은 작업 때문에 `checkout` 이 안될 수 있습니다. 이럴 때 커밋하지 않은 작업을 `stash` 명령어로 임시 보관하고 다른 브랜치로 `checkout` 할 수 있습니다. 스택에 임시 보관한 작업들은 나중에 다시 꺼내와 마무리할 수 있습니다.\n\n```bash\ngit stash\ngit checkout develop\n```\n\n**stash 목록 확인하기**\n\n```bash\ngit stash list\n```\n\n**stash 적용하기 (했던 작업을 다시 가져오기)**\n\n```bash\n// 가장 최근의 stash를 가져와 적용한다.\n$ git stash apply\n\n// stash 이름(ex. stash@{2})에 해당하는 stash를 적용한다.\n$ git stash apply [stash 이름]\n```\n\n# git rebase\n\n------\n\n여러 멤버가 동시에 각자의 `feature` 브랜치에서 기능 개발을 하며 커밋을 하고 `develop` 브랜치에 `merge` 로 만들어진 히스토리는 브랜치가 꼬여 프로젝트의 히스토리를 확인하는데 복잡하고 이해하기 어렵습니다. 그래서 다른 멤버에게 잘 보여지도록 `git rebase` 를 통해 원격 저장소에 Pull Request하기 전 프로젝트의 히스토리를 다듬습니다. 사실 `git rebase` 의 개념은 어려운 편이지만 편의를 위해 자주 사용하게 됩니다. rebase의 내용은 다음 두 링크를 참고하여 꼭 읽어보시기 바랍니다. 저희 팀은 rebase를 통해 원격 저장소 히스토리를 깔끔하게 정리합니다.\n\n- https://git-scm.com/book/ko/v2/Git-브랜치-Rebase-하기\n- https://velog.io/@godori/Git-Rebase\n\n`rebase` 를 시행하기 전 원격저장소에서 `develop` 브랜치를 `pull` 받아 원격 저장소에 그동안 반영된 커밋을 가져옵니다.\n\n```bash\ngit checkout develop\ngit pull\n```\n\n**현재 작업중인 feature 브랜치의 커밋을 develop 에 rebase 하기**\n\n```bash\ngit rebase develop feature/feature1\n```\n\n`git rebase` 를 통해서 미리 conflict를 알아채고 해결할 수 있습니다. 가장 최신의 `origin/develop` 브랜치 에서부터 자신이 작업한 커밋을 다시 배치하는 것이기 때문에 자신이 작업한 내용과 원격 저장소의 develop 브랜치가 충돌하면 conflict가 발생하게 됩니다. 따라서 Pull Request전에 conflict를 해결한 후 Pull Request를 요청할 수 있습니다.\n\n**주의**\n이미 원격 저장소에 push한 커밋은 절대 rebase하면 안됩니다.\nRebase는 기존의 커밋을 그대로 사용하는 것이 아니라 내용은 같지만 다른 커밋을 새로 만듭니다. 만약 누군가가 그 사이에 그 커밋을 Pull 받았었다면 커밋이 전혀 다르게되어 코드가 엉망이 될 것입니다.\n\n# Pull Request\n\n------\n\n하나의 `feature` 브랜치에서 기능 개발이 완료되었다면 바로 `develop` 브랜치에 `merge` 하여 원격 `develop` 브랜치에 `push` 하지 않고 작업중이던 브랜치를 `push` 한 후 원격 `develop` 브랜치에 Pull Request를 요청합니다. 만약 Pull Request전에 `rebase` 를 진행했다면 `push force` 명령어로 원격 저장소를 강제로 갱신합니다.\n\nPull Request는 GUI 도구를 사용하는 것이 편리하므로 GUI 도구를 주로 이용하거나 호스팅 서비스 홈페이지에서 진행합니다.\n\n```null\n<Pull Request>\n\norigin/feature/feature1 -> origin/develop\n\nTitle: Add feature1 to somthing\n\nbody : 부연설명과 참고사항 등\n```\n\nPR(Pull Request)이 요청되면 Bit bucket 에서 PR 피드백을 진행합니다. PR 코멘트는 PR, 파일, 라인 단위로 코멘트를 달 수 있습니다. 따라서 다른 멤버들이 원활하게 PR을 확인하고 피드백을 진행하기 위해서 PR 단위가 너무 크지 않도록 주의합니다.\n\nPR이 승인되어 `merge commit` 되었다면 merge된 feature 브랜치는 로컬과 원격 저장소에서 삭제합니다.\n\n# git squash (git rebase -i)\n\n------\n\n정확히 이야기해서 `git squash` 라는 명령어는 없습니다. `interactive reabse` 를 하는데 필요한 명령어 중 하나 입니다. squash는 이중 여러개의 커밋을 하나의 커밋으로 합치는 옵션입니다. 까먹고 같이 커밋하지 않은 파일이 있던가, 같은 커밋에 해당하는 작업인데 커밋 이후에 작업을 했던가, 커밋 로그가 지저분하여 정리를 한다던가 할 경우에 유용하게 사용할 수 있습니다.\n\nPR을 요청한 이후에 까먹고 같이 커밋하지 않은 작업이 있다던지, PR 피드백을 반영하여 파일을 수정하였는데 이를 추가적인 커밋으로 보기가 어렵다면 PR에 요청 했던 이전 커밋과 합쳐서 PR을 수정할 수 있습니다. 아래 두 링크를 참고하여 꼭 읽어보세요.\n\n- https://backlog.com/git-tutorial/kr/stepup/stepup6_5.html\n- https://meetup.toast.com/posts/39\n\n**만약 최근 3개의 커밋을 interacive rebase하고 싶을 때**\n\n```bash\ngit rebase -i HEAD~3\n```\n\n**위 명령어를 입력하면 rebase가 시작됩니다. vi 에디터가 뜨면서 다음과 같은 화면이 뜹니다.**\n\n```bash\npick 7c65355 Task 1/3\npick 2639543 Task 2/3\npick d442427 Task 3/3\n\n# Rebase 2260a88..d442427 onto 2260a88\n#\n# Commands:\n#  p, pick = use commit\n#  r, reword = use commit, but edit the commit message\n#  e, edit = use commit, but stop for amending\n#  s, squash = use commit, but meld into previous commit\n#  f, fixup = like \"squash\", but discard this commit\'s log message\n#  x, exec = run command (the rest of the line) using shell\n#\n# These lines can be re-ordered; they are executed from top to bottom.\n#\n# If you remove a line here THAT COMMIT WILL BE LOST.\n#\n# However, if you remove everything, the rebase will be aborted.\n#\n# Note that empty commits are commented out\n```\n\n**가장 위의 3줄을 원하는 옵션으로 변경하고 저장합니다. (:wq)**\n\n```bash\npick 7c65355 Task 1/3\nsquash 2639543 Task 2/3\nsquash d442427 Task 3/3\n```\n\n**위 rebase 작업이 끝나면 3개의 커밋은 하나로 합쳐져 다음과 같이 하나의 커밋으로 보이게 됩니다.**\n\n```bash\nTask 1/3 ~ 3/3\n```\n\ngit rebase 도중 `conflict`가 발생하면 rebase가 잠시 멈춥니다. 이 때 conflict를 해결 한 후 `git rebase --continue` 명령어로 진행중이던 rebase 작업을 계속 이어나갈 수 있습니다.\n\nGUI 도구에서는 여러개의 커밋을 선택한 후 오른쪽 클릭하여 git squash를 바로 할 수 있습니다.\n\n# git commit --amend\n\n------\n\ngit commit 메세지의 메세지를 변경할 경우 사용되는 명령어 입니다. 커밋 메세지를 잘못 입력했거나 수정해야 할 경우 주로 사용합니다. 커밋 메세지를 계속 수정하여 보기 좋은 히스토리를 남기는 습관을 가집시다.\n\nGUI 도구에서는 커밋을 선택한 후 오른쪽 클릭하여 커밋 메세지를 수정할 수 있습니다.\n\n# git push --force\n\n------\n\n원격 저장소에 이미 올라간 커밋이 있는데 로컬에서 커밋을 되돌리거나 변경한 것을 원격 저장소에 강제로 반영할 때 사용되는 명령어 입니다. 주로 PR을 수정하고 업데이트할 때 사용되거나 작업중인 `feature` 브랜치에서 이미 원격 저장소에 `push` 한 이후 로컬에서 커밋을 변경했을 경우 사용됩니다.\n\n**PR 수정 요청 사항 수정 후 commit > rebase > squash > push 할 때**\n\n```bash\ngit push -f origin feature/feature1\n```\n\n위 작업이 진행되면 자신이 요청했던 PR에 수정사항이 반영되어 업데이트 된 것을 확인할 수 있습니다.\n\n# git cherry-pick\n\n------\n\n다른 브랜치에 있는 커밋을 선택적으로 혹은 전부 현재 작업중인 브랜치에 적용시킬 때 사용하는 명령어입니다. 아래 두 링크를 참고하여 한번 읽어보세요.\n\n- https://imasoftwareengineer.tistory.com/7\n- https://backlog.com/git-tutorial/kr/stepup/stepup6_4.html\n\nPR요청 후 다른 멤버들이 PR 피드백과 코멘트를 작성하는 동안 작업하던 브랜치에서 다음 기능 개발을 계속 진행합니다. PR 수정이 모두 반영되고 `merge commit` 되면, PR이 병합된 `develop` 브랜치에서 새롭게 다음 기능 개발 `feature` 브랜치를 생성합니다. 새롭게 생성한 feature 브랜치에 PR이 진행되는 동안 이전 브랜치에 커밋했던 커밋들을 `git cherry-pick` 으로 가지고옵니다. 물론 이전에 작업한 feature 브랜치는 삭제합니다.\n\n**특정 커밋을 현재 작업중인 브랜치로 가져올 때**\n\n```bash\ngit cherry-pick [커밋해시]\n```\n\n**여러 개의 연속된 커밋을 현재 작업중인 브랜치로 가져올 때**\n\n```bash\ngit cherry-pick [시작커밋해시] [끝커밋해시]\n```\n\ngit cherry-pick 도중 `conflict` 가 발생하면 conflict를 해결한 후 `git cherry-pick --continue` 로 cherry-pick을 이어나갈 수 있습니다.\n\n# 실제 프로젝트에 적용하기\n\n------\n\n위의 지식을 갖추고 실제 프로젝트에 적용해봅시다.\n\n### 1. develop 브랜치에서 feature 브랜치를 생성합니다.\n\n```bash\ngit checkout develop\ngit pull\ngit checkout -b feature/feature1\n```\n\n### 2. feature 브랜치에서 기능을 개발하고 커밋합니다.\n\n```bash\ngit add files\ngit commit -m \"feat : Add something\"\n```\n\n### 3. rebase로 커밋 로그를 정리합니다.\n\n```bash\ngit chekcout devleop\ngit pull\ngit checkout feature/feature1\ngit rebase develop feature/feature1\n```\n\n### 4. Pull Request를 요청합니다.\n\n```bash\ngit push -f origin feature/feature1\n\n[PR]\norigin feature/feature1 -> origin develop\n```\n\n### 5. PR 수정 요청사항을 수정하고 squash하고 force push합니다.\n\n```bash\n// 수정 요청사항 수정후\n\ngit rebase -i HEAD~n\n\n// squash, 커밋 메세지 변경 등의 작업 진행\n\ngit push -f origin feature/feature1\n```\n\n### 6. PR 요청 후 작업 하던 커밋을 cherry-pick 으로 새로운 브랜치에 가져옵니다.\n\n```bash\ngit fetch  // 원격 저장소의 상황을 가져옵니다\ngit stash  // 작업중이던 내용을 임시 보관합니다.\ngit checkout develop\ngit develop pull\ngit checkout -b feature/feature2\ngit cherry-pick [작업했던 커밋해시]\ngit branch -d feature/feature1  // 이전에 작업한 브랜치는 삭제합니다.\n```',0,'2020-08-24 18:00:13','http://3.36.125.70/thumbimg/498a6395-038e-43ef-96d6-eb4804c153c4_12.png'),(249,'Docker #1','frontend@gmail.com','## 1. Docker 란?\n\n### 1-1. Docker란 무엇일까?\n\nDocker는 애플리케이션을 신속하게 구축, 테스트 및 배포할 수 있는 소프트웨어 플랫폼이다.\n\n개발자라면 개발 환경을 구성하는 일이 코딩하는 것보다 어렵다는 걸 알 것이다.\n온갖 복잡한 설정들을 다 신경써줘야 하고 만약 호환되지 않는 버전이 존재한다면\n다시 처음부터 다 갈아 엎어야 할 수도 있다.\n\n이걸 해결해 줄 수 있는 것이 바로 도커이다.\n\n### 1-2. Docker는 왜 사용할까?\n\n도커는 특정 프로젝트를 진행하거나 프로그램을 돌리기 위한 환경을 그대로 가져와 사용할 수 있다.\n이게 무슨 말일까?\n\n쉽게 말하면 우리가 새로운 컴퓨터를 구매했을 때를 생각해보자\n몇 년동안 가꿔 온 이전 PC의 환경을 새로운 PC에 구성하려고 생각하면\n어디서부터 시작해야 할 지도 막막하고 시간 낭비도 엄청날 것이다.\n\n도커를 사용하면 이전 PC 환경 전부를 새로운 PC에 단 몇 개의 명령어 만으로 구성이 가능하다.\n정말 대단한 기술이다.\n\n\n\n※ 참고자료\n위 설명이 잘 이해가 가지 않는다면 아래 영상을 보자!\n유튜버 분이 너무 쉽고 재밌게 도커에 대해 설명해주신다.\n\n- [도커가 뭐고 왜 쓰는건가요? - 얄팍한 코딩사전](https://www.youtube.com/watch?v=tPjpcsgxgWc)\n\n### 1-3. Docker의 기본 개념\n\n> **도커**\n> : 컨테이너를 사용하여 응용프로그램을 더 쉽게 만들고 배포하고 실행할 수 있도록\n> 설계된 도구이며 컨테이너 기반의 오픈 소스 가상화 플랫폼이며 생태계이다.\n\n컨테이너?? 항구에서 많이 볼 수 있는 그 컨테이너인가?\n\n비슷하다.\n\n실제 컨테이너는 물건들을 다른 나라에 수출하거나 수입해올 때 사용한다.\n컨테이너를 사용하면 운반이 편리해지고 물품 분류에도 용이해진다.\n\n도커에서의 컨테이너는 안에 다양한 프로그램, 실행 환경을 컨테이너로 추상화하고\n동일한 인터페이스를 제공하여 프로그램의 배포 및 관리를 용이하게 해준다.\n\n------\n\n## 2. 도커 이미지와 도커 컨테이너\n\n### 2-1. 도커 컨테이너\n\n도커 컨테이너는 위에서 살펴보았듯이 운송 수단이라 할 수 있다.\n\n정확한 정의는 아래와 같다.\n\n> 코드와 모든 종속성을 패키지화하여 응용 프로그램이 한 컴퓨터 환경에서 다른 컴퓨터 환경으로\n> 빠르고 안정적으로 실행되도록 하는 소프트웨어의 표준 단위이다.\n\n즉, 간단하고 편리하게 프로그램을 실행 시켜주는 것이다.\n\n### 2-2. 도커 (컨테이너)이미지\n\n그럼 이미지는 무엇일까?\n\n컨테이너 이미지의 정의는 아래와 같다.\n\n> 코드, 런타임, 시스템 도구, 시스템 라이브러리 및 설정과 같은 응용 프로그램을 실행하는 데\n> 필요한 모든 것을 포함하는 가볍고 독립적이며 실행 가능한 소프트웨어 패키지\n\n이미지가 프로그램에 관한 모든 것을 갖추고 있고 컨테이너는 이를 실행할 수 있는 것이라 이해하면 좋다.\n즉, 아래 그림과 같은 관계를 가지는 것이다.\n\n![img](https://media.vlpt.us/images/mactto3487/post/e653e4bf-cc78-4fb1-9d28-9ce9dad88e48/image.png)\n\n하나의 이미지를 가지고 여러 도커 컨테이너를 생성할 수 있다.\n저 이미지 하나만 있으면 개발환경을 구성해야할 컴퓨터가 수백대라도 무섭지 않을 것이다.\n(수백대는 좀 무서우려나..?)',0,'2021-02-17 20:46:00','http://3.36.125.70/thumbimg/dd930b60-9a59-4e0f-bc9d-a38ec4652d0b_docker.png'),(250,'React | 유지, 보수를 위한 API 통신은 어떻게 할까? (Axios 모듈화)','frontend@gmail.com','요즈음 Node.js 세션을 통해 배운 \'모듈화\'개념과, 기업 협업 프로젝트에서 피드백 받은 \'API 통신 방식\'에 대해 기록해보려고 한다.\n\n최근에 배웠던 Node.js 세션에서 가장 인상 깊었던 부분은 **`Why do we modularize our applications?`** 에 대한 내용이었다.\n\n## 왜 우린 모듈화를 해야할까?\n\n> - **확장성(extensibility)**\n>   확장성을 고려하지 않은 코드는 시스템의 규모가 커질수록 문제가 생길 확률이 높다.\n> - **재사용성(reusability)**\n>   반복되는 로직을 함수로 분리하는 코드상의 재사용성 뿐만 아니라, 우리가 설계한 구조가 재사용 되어야 한다.\n> - **유지-보수 가능성(maintability)**\n>   여러 로직이 뒤엉켜 있는 코드는 유지 보수가 안된다.\n> - **가독성(readability)**\n>   어려운 로직 일수록 더 가독성이 높아야 한다. 어려운 로직을 쉽고 간단하게 구현하는 것이 좋은 코드다.\n>   프로젝트의 구조 또한 한 눈에 그려져야 한다.\n> - **테스트 가능성(testability)**\n>   테스트를 하기 쉬운 코드는 모듈화가 잘 되어 있고, 한 가지 역할만 하는 함수 단위의 코드를 의미한다.\n>   프로젝트의 구조도 추상화가 잘 되어있고, 역할이 잘 나뉘어 있는 구조가 테스트하기 쉬운 구조다.\n>   *출처: 깔끔한 파이썬 탄탄한 백엔드 - 송은우 저*\n\n출처: 위코드 Node.js Notion (by 최 준 멘토님)\n\n\n\n\n이 수업을 들은 뒤부터는 보다 확장성을 위한, 재사용이 가능한, 유지와 보수에 쉬운 컴포넌트를 만드려고 노력하고 있다.\n하지만 정작 가장 자주 쓰이고, 똑같은 코드를 반복하는 \'API 통신\'에 있어서 모듈화를 하지 않았고 이에 대해 좋은 피드백을 받았다.\n\n\n\n## 기존에 사용하던 API 통신 방식은 다음과 같다.\n\n먼저 config.js에 server로 변수를 지정해 서버 IP 주소를 넣어준다. (이 또한 환경변수로 .env에 숨겨준다). 그리고 각각의 API 변수에 엔드포인트를 넣어서 export해서 사용하는 방식이었다.\n![img](https://media.vlpt.us/images/edie_ko/post/42d0a634-d75c-4abc-a6ac-678087ce1327/image.png)\n그리고 try catch에 async await으로 작성하거나 다음과 같이 then then으로 비동기 처리해주는 방식..*(코린이 티😇)*\n![img](https://media.vlpt.us/images/edie_ko/post/ea489cbb-8e82-4c6b-8d66-fc072ee6b178/image.png)\n\n\n\n## 자 일단, 받은 피드백을 정리해보자면\n\n### 1) {SERVER}로 export하지 않고 server 주소가 들어가있는 apiClient 함수를 만들어서 export하자!\n\n당시 query 검색을 위해서 그냥 서버주소를 통채로 가져와 query만 변수 처리를 해주는 리터럴 방식을 쓰고 있었다.\n*(url: `${SERVER}/map/search?search=${query}` 이런식으로..다가)*\n하지만 이렇게 쓰게 되면 백엔드와 통신할 일이 굉장히 많기 때문에 SERVER를 매번 넣어주는 것 보다 axios와 기본 세팅이 되어 있는 apiClient 훅을 만들어서 사용하는 것이 좋겠다는 아-아주 유용한 피드백을 받았다.\n\n### 2) async, await을 쓰자\n\n코드 가독성에는 async, await으로 간결하게 작성하는 것이 최고겠쥬..\nfetch then then으로 처음 api 통신을 배워서 아직까지도 then을 애용하던 나였다...\n\n\n\n## 적용해보자!\n\n### 1) apiClient.ts를 만들었다.\n\n**axios.create() 메소드**를 이용해서 axios 인스턴스를 생성하도록 만들어준다.\n[공식문서 참고](https://xn--xy1bk56a.run/axios/guide/api.html#동시성-concurrency)\n\n```null\nconst instance = axios.create({\n  baseURL: \'https://some-domain.com/api/\',\n  headers: { \'X-Custom-Header\': \'foobar\' },\n  timeout: 1000,\n});\n```\n\n저 **`axios.create()`**이 핵심..!!✨\n저렇게 axios의 .create() 내장 함수를 이용하면 통신할 때 필요한\n쿼리나, 헤더, 바디 등등 여러 데이터를 함께 보낼 수 있다.\n\n저렇게 baseURL에 SERVER 주소를 넣어주면 된다. instance에 넣을 수 있는 키값으로 params, data, responseType, xsrfHeaderName 같은 것들을 넣어줄 수 있어서 정말 편리하다!\n\n![img](https://media.vlpt.us/images/edie_ko/post/802504d7-3e11-48ad-9e50-46d333847118/image.png)\n\n(이제 이 ts 함수는 재사용성에 있어서 최고, 가장 많이 사용한 훅이 된다..)\n\n### 2) 사용할 때에는 다음과 같이 사용하면 된다.\n\n![img](https://media.vlpt.us/images/edie_ko/post/19f0cb22-00ff-459a-98c6-05ebf533ba78/image.png)\n\n이렇게 endpoint와 query만 변수로 넣어주면 된다.\n지금 보니 try catch문도 함께 넣어버리면 될 텐데 왜 저기서 그쳐버렸지..?하는 생각도 든다.. 🤭',0,'2021-02-17 20:48:05','http://3.36.125.70/thumbimg/405afac2-d5c2-4fd8-8b31-c68c63f26c4a_1_mv73TpGPVFXzJqu920m5Og.png'),(251,'Basic - Operators','frontend@gmail.com','## 시작\n\n이번은 Swift시리즈로 개발자로 회사에 입사하게 되어,\nSwift를 전체적으로 되돌아 보는 시간을 갖게되었다.\n\n전체적으로 Swift의 공식 사이트의 내용을 보며 리뷰하게 되었다.\n[공식언어 사이트](https://docs.swift.org/swift-book/LanguageGuide/TheBasics.html)\n\n이번 계기를 통해 Swift에서 몰랐거나 새롭게 추가된 기능, 좁았던 시야에서 보지 못했던 부분들을 많이 얻어갔던 내용들이 꽤 있다.\n\n먼저 Operators부터 시작한다.\n어려운 내용이 없어 예시정도로만 마무리한다.\n\n## 할당 연산\n\n타 언어들과 다른 선언 및 할당은 비슷한 문법 구조로 되어진다.\n\n```null\n//상수\nlet a = 10\n//변수\nvar b = 5\n//다중 선언\nlet (x, y) = (1, 2)\n```\n\n## 산술/비교 연산\n\n```null\n// 덧뺄셈\nprint(1 + 3) //equals 4\nprint(1 - 2) //equals -1\n\n//곱 and 나눗셈 and 나머지\nprint(1 * 3) //equals 3\nprint(10 / 2) //equals 5\nprint(10 % 2) //equals 0\n\n// 비교\nprint( 1 == 1) // equals true\nprint( 2 != 1) // equals false\nprint( 100 > 120) // equals false\n```\n\n## 삼항 연산\n\n개인적으로 삼항연산을 굉장히 좋아한다.\n사용이 가능한 환경에선 삼항 연산을 사용하는데, 누군 못생겼다고해서 싫어하시는분들도 봤는데...\n개취로 ㅇㅈ\n\n```null\n//기본 삼항연산자\nlet trueValue = true\nprint( trueValue ? \"참\" : \"거짓\") //print \"참\"\n\n//nil 삼항연산자\nlet nilValue: Int? = nil //nil인 value\nprint(nilValue ?? \"비었음\") //print \"비었음\"\n```\n\n## 논리 연산\n\n```null\n//Not\nlet trueValue = true\nprint(!trueValue) //print \"false\"\n\n//AND\nlet trueValue = true\nlet falseValue = false\nprint(trueValue && falseValue) // print \"false\"\n\n//OR\nprint(trueValue || falseValue) // print \"true\"\n```\n\n## 범위 연산\n\n특정 범위 내의 정수형 숫자들을 쉽게 범위를 만들어 사용할 수 있는 연산자\n범위의 구분은 ...(점 3개)로 이루어진다.\n\n```null\nlet oneToFive = [1, 2, 3, 4, 5]\n//닫힘 연산\nprint(oneToFive[1...5]) // print \"1, 2, 3, 4, 5\"\n\n//한쪽 범위 연산\nprint(oneToFive[...3]) // print \"1, 2, 3\"\nprint(oneToFive[3...]) // print \"3, 4, 5\"\n```\n\n',1,'2021-02-17 20:49:54','http://3.36.125.70/thumbimg/a92a8035-d07a-4f15-b322-1af5cf67ac2a_apple_swift.jpg'),(252,'Front-End 면접 질문 대비 Part5 (JavaScript 이벤트 루프, 비동기 처리)','frontend@gmail.com','이번 글에서는 자바스크립가 어떻게 동작을 하는지, 이벤트 루프 중심으로 살펴보겠습니다! 🧐\n\n------\n\n## 이벤트 루프\n\n➡️ 아래 그림을 통해 전체적인 자바스크립트 동작원리를 파악할 수 있습니다.\n\n![img](https://media.vlpt.us/images/holim0/post/f86088d3-3826-4f9b-8f4d-f2ad86e530de/image.png)\n\n출처: https://blog.sessionstack.com/how-does-javascript-actually-work-part-1-b0bacc073cf\n\n### JavaScript Engine\n\n✅ 자바스크립트 엔진은 위의 그림에서 확인할 수 있듯이 Memory Heap과 Call Stack으로 구성되어 있습니다.\n\n자바스크립트는 **싱글 스레드(Single Thread)** 프로그래밍 언어로 이는 Call Stack이 한 개임을 의미합니다. 가장 유명한 자바스크립트 엔진으로는 구글의 V8 엔진을 말할 수 있습니다.\n\n- Memory Heap: 메모리 할당이 이뤄지는 곳입니다.\n\n- Call Stack: 코드가 실행될 때 호출 스택이 쌓이는 곳입니다. (호출된 함수가 call stack에 push 됩니다.)\n\n\n\n### Web APIs\n\n✅ 자바스크립트 언어 자체가 비동기 동작을 지원하는 것은 아닙니다. 비동기로 동작하는 핵심 요소는 브라우저가 가지고 있습니다.\n\n브라우저는 `Web APIs, Event Table, Callback Queue, Event Loop` 등으로 구성되어 있습니다. 위의 그림에서 오른쪽에 해당하는 Web APIs가 브라우저가 제공하는 API입니다.\n\nWeb API에는 DOM, Ajax, Timeout(setTimeout) 등이 존재합니다.\n\n- Call Stack에서 실행된 비동기 함수는 Web API를 호출하게 됩니다.\n- Web API는 콜백함수를 Callback Queue에 밀어 넣습니다.\n\n\n\n### Callback Queue\n\n✅ 비동기적으로 이벤트 발생 시 실행해야 할 callback 함수가 Callback Queue에 추가됩니다.\n\n\n\n### Event Loop\n\n✅ **Event Loop**는 Call Stack과 Callback Queue의 상태를 체크하여, Call Stack이 빈 상태가 되면, Callback Queue의 첫번째 콜백을 Call Stack으로 밀어넣어 줍니다. 이러한 반복적인 행동을 ***틱(tick)*** 이라 부릅니다.\n\n> 💡 Event Loop와 Queue는 자바스크립트 엔진이 하나의 코드 조각을 하나씩 처리할 수 있도록 작업을 스케줄하는 동시에 자바스크립트에서 비동기 작업을 할 수 있도록 해줍니다.\n\n하나의 예시를 보고 가겠습니다.\n\n```js\nconsole.log(\'first\');\nsetTimeout(\n    function f2() { \n        console.log(\'second\'); \n    }\n, 0);\n\nf3();\nconsole.log(\'third\');\n\n  \nfunction f3() {\n    // do Something\n}\n```\n\n결과는 다음과 같습니다.\n\n```null\nfirst\nthird\nsecond\n```\n\n➡️ **`f2()`** 함수가 **`Callback Queue`**에 있는 시점에 **`Call Stack`**에는 **`f3()`**이 들어가 있기 때문에 **`Event Loop`** 는 **`Callback Queue`**를 체크하지 않습니다.\n\n**`f3()`**가 종료된 후에는 **`console.log(\'third\');`**가 **`Call Stack`**에 추가되어 먼저 출력이 되는 것입니다.\n\n------\n\n',1,'2021-02-17 20:52:49','http://3.36.125.70/thumbimg/ec1bbb1e-dbd8-41a5-ac8f-78482069946a_frontend-4342425_960_720.png'),(253,'[머신러닝] K-NN(K-Nearest Neighbor) 알고리즘','frontend@gmail.com','## 지도학습에 속하는 K-NN 알고리즘\n\nK-NN 알고리즘은 머신러닝 알고리즘 중 지도학습에 속한다. 지도학습이란 쉽게 말하여 레이블(정답)을 주고 학습을 시키는 것을 의미한다.\n\n예를 들어, 이미지를 주고 개와 고양이를 분류하는데 각각의 이미지가 어떤 레이블에 속하는지 즉, 개인지 고양이인지 꼬리표를 붙혀놓고 학습을 시킨 뒤 기계가 정답을 맞췄는지 확인하는 학습 방식이다.\n\n![img](https://media.vlpt.us/images/jhlee508/post/fe93573b-9739-4dbc-b539-619f10b3d025/image.png)\n\n지도학습은 크게 회귀(Regression)와 분류(Classification)로 나뉘는데 본 글에서 살펴볼 KNN 알고리즘은 지도학습 중 분류에 속한다.\n\n![img](https://media.vlpt.us/images/jhlee508/post/3f80764c-62a6-453e-b53d-d0c61c60a6e8/%EA%B8%B0%EA%B3%84%ED%95%99%EC%8A%B5%20%EA%B0%80%EA%B3%84%EB%8F%84%20(%EB%B6%84%EB%A5%98).jpg)\n이미지 출처 : https://opentutorials.org/course/4548/28942\n\n\n\n지도학습에 속하는 알고리즘은 다음과 같이 다양하다.\n\n- 나이브 베이즈(Naive Bayes)\n- 의사결정트리(Decision Trees)\n- 최근접 이웃(Nearest Neighbors)\n- 선형 회귀(Linear Regression)\n- 서포트 벡터 머신(Support Vector Machines)\n\n나머지는 다음에 살펴보고 오늘은 K-NN 알고리즘에 대해 알아보자.\n\n## K-NN 알고리즘이란?\n\nK-NN 알고리즘을 설명할 때 대부분 \"유유상종\"이라는 말을 많이 인용한다. 유유상종이란\n\n> \"같은 날개를 가진 새들끼리 함께 모인다\"\n\n라는 뜻의 속담이다. 즉, 비슷한 특성이나 속성을 가진 것들끼리 가깝게 모여있다는 것이다.\nK-NN 알고리즘은 이처럼 데이터를 가장 가까운 속성에 따라 분류하여 레이블링을 하는 알고리즘이다. K-NN은 K-Nearest Neighbor의 줄임말인데, 말 그대로 K개의 가까운 이웃의 속성에 따라 분류한다.\n\n### 거리기반 분류분석 모델\n\n앞서 가까운 속성에 따라 분류한다고 했는데 \'가깝다\'는 것에는 기준이 필요하다. K-NN 알고리즘은 거리기반 분류분석 모델로 거리를 기반으로 분류하는 알고리즘이며 따라서 상대적으로 거리가 더 짧은 이웃이 더 가까운 이웃으로 취급된다. 즉, K-NN 알고리즘은 어떤 새로운 데이터로부터 거리가 가까운 K개의 다른 데이터의 레이블(속성)을 참고하여 K개의 데이터 중 가장 빈도 수가 높게 나온 데이터의 레이블로 분류하는 알고리즘이다.\n\n### 거리 측정 방법\n\n#### 1. 유클리드 거리(Euclidean Distance)\n\n거리 측정 방식에는 여러 가지 방법들이 있겠지만 K-NN 알고리즘은 거리를 측정할 때 일반적으로 \'유클리드 거리(Euclidean Distance)\' 계산법을 사용한다. 2차원 평면에 서로 다른 두 점 A(x1, y1)와 B(x2, y2)가 있을 때 이 둘의 거리 d는 유클리드 거리 계산법에 의해 다음과 같이 나온다.\n\n*d*(*A*,*B*)=(*x*2−*x*1)2+(*y*2−*y*1)2\n\n![img](https://media.vlpt.us/images/jhlee508/post/fb5071e8-ada2-44df-9759-089e36a87c1d/image.png)\n\n이미지 출처 : https://needjarvis.tistory.com/454\n\n#### 2. 맨해튼 거리(Manhattan Distance)\n\n맨해튼 거리(Manhattan Distance) 혹은 맨하탄 거리는 유클리드 거리(Euclidean Distance)와 함께 매우 기초적인 좌표 간의 거리를 구하는 방식이다. 이 또한 K-NN 알고리즘 내부의 거리 측정 방법으로 흔히 사용된다.\n\n맨해튼 거리의 맨해튼은 실제 미국 뉴욕시의 행정구역 이름이다. 사각형 모양의 촘촘히 들어선 빌딩과 건물의 모습을 지니고 있는 맨해튼의 거리 모습에서 맨해튼 거리 공식이 유래되었다. 유클리드 공식처럼 직선으로 이동할 수 없는 건물들이 많은 체계적인 지역에서 거리를 재기 위해 탄생한 공식으로 보인다.\n\n아래의 그림은 맨해튼 거리를 설명하기에 매우 유용한 그림이다. **검은색** 두 점의 거리를 측정하려 한다. 초록색 직선이 바로 위에서 말한 유클리드 거리이다. 바로 **검은색** 두 점 사이의 최단거리이다. 그리고 나머지 빨간색, 파란색, 노란색 선이 맨해튼 거리를 의미한다. 이 세 선이 모두 맨해튼 거리라는 것은 모두 총 거리가 동일하다는 것이며 이는 실제로 자명한 사실이다.\n\n![img](https://media.vlpt.us/images/jhlee508/post/9d6d7865-dfec-4b42-a319-521ce830245f/image.png)\n\n이미지 출처 : [https://ko.wikipedia.org/wiki/%EB%A7%A8%ED%95%B4%ED%8A%BC_%EA%B1%B0%EB%A6%AC](https://ko.wikipedia.org/wiki/맨해튼_거리)\n\n위 그림 처럼 2차원 평면에 서로 다른 두 점 A(x1, y1)와 B(x2, y2)가 있을 때 이 둘의 맨해튼 거리(d) 공식은 다음과 같다.\n\n*d*(*A*,*B*)=∣*x*1−*x*2∣+∣*y*1−*y*2∣',1,'2021-02-17 20:54:05','http://3.36.125.70/thumbimg/a940c4dc-1698-46d0-af56-90c5b9ab3cce_Machine_Learning.png'),(254,'TIL 01. HTML Basic Tags','frontend@gmail.com','안 쓰면 자꾸 잊어버리게 되는 html & css.🤣🤣\n작업 때 마다 필요한 태그를 찾는 시간을 단축하기 위해 벨로그에 정리해보려 한다.\n\n# HTML과 CSS\n\nHTML, CSS, Javascript 이 세가지의 언어를 쓰면 하나의 웹사이트가 완성된다. 웹사이트에서 세 언어의 역할은 다르다.\n\nHTML은 \'내용\'을 담당하고, CSS는 \'스타일\'을 담당, Javascript는 \'인터랙션\'을 담당한다. 즉, **HTML은 \'명사\' CSS는 \'형용사\'나 \'부사\' Javascript는 \'동사\'라고 생각하면 된다.**\n\n\n\n# HTML 문법\n\n```null\n<시작태그> 내용 </종료태그>\n```\n\n\n\n# HTML 문서의 기본 구조\n\n```null\n<html>\n      <head>\n            <title></title> \n      </head>\n      \n      <body>\n      </body>\n</html>\n```\n\n\n\n# HTML 주석\n\n### - `<!-- 내용 -->`\n\n: 주석(코멘트)\n\n\n\n# HTML Basic Tag\n\n### - `<!DOCTYPE>` 선언\n\n: 최신 버전인 html5를 사용하기 위해 가장 먼저 쓰는 선언\n\n### - `<title>` 태그\n\n: 페이지의 제목을 의미. 브라우저의 탭이나 방문 기록에 나와있는 제목\n\n### - `<h1>~<h6>` 태그\n\n: 폰트 크기에 따라 크기가 달라짐 `<h1>`에서 `<h6>`으로 갈수록 폰트 크기가 작아진다.\n\n### - `<p>` 태그\n\n: 문단을 의미. \'paragraph\'의 줄임말\n\n### - `<b>` 태그\n\n: **텍스트를 굵게**. b는 \'bold\'의 줄임말\n\n### - `<i>` 태그\n\n: *텍스트 기울게(italic체)*. i는 \'italic\'의 줄임말\n\n### - `<div>` 태그\n\n: 레이아웃을 나누는데 주로 쓰인다. 블록 레벨 태그라 줄바꿈이 된다. \'Division\'의 줄임말\n\n### - `<br>` 태그\n\n: 강제 줄 바꿈 기능. \'line break\'의 줄임말.\n\n\n\n\n\n# HTML Phrase Tag\n\n> `<b>` 태그와 `<i>`태그는 **\'시각적인 특징\'**만 갖고 있는 것에 비해 `phrase tag`는 **\'시각적인 특징\'**과 **\'의미\'**까지 담고 있는 태그다.\n\n### - `<strong>` 태그\n\n: `<b>` 태그는 텍스트를 굵게 만드는 것이 목적이지만, `<strong>` 태그는 감싸고 있는 **텍스트가 중요하다고 표시하는 것**이 목적이다.\n\n### - `<em>` 태그\n\n: `<i>`태그는 텍스트를 단지 기울게 하는 것이 목적이지만, `<em>` 태그는 **강조하는 것**이 목적이다. em은 \'emphasized\'의 줄임말.\n\n\n\n\n\n# HTML Optional Tag\n\n> `<html>`,`<head>`,`<body>` 태그들은 쓰지 않아도 문제가 생기지 않는다.\n> 하지만 이 태그를 쓰면 html의 파일의 구조가 눈에 더 잘 들어오므로 **\'정리\'**를 목적으로 사용한다.\n\n### - `<html>` 태그\n\n: **웹페이지의 시작과 끝**을 의미한다. 웹페이지는 `<html>`로 시작해서 `</html>`로 끝난다.\n\n### - `<head>` 태그\n\n: 웹문서의 **제목**이나 **머리말**에 해당하는 정보를 나타내는 태그. 주로 `<meta>`태그 `<title>`태그, `<link>`태그 등이 들어간다.\n\n### - `<body>` 태그\n\n: 웹문서의 **메인 콘텐츠**를 나타내는 태그. 웹 브라우져 화면에 보이는 것들로 구성된다.',0,'2021-02-17 21:02:25','http://3.36.125.70/thumbimg/58d84485-3cf2-48cb-a6ac-8accf96e742f_til-HTMLCSS01.png'),(255,'Python 부트캠프','frontend@gmail.com','# **Python 부트캠프**\n\n\'Python 부트캠프\'는 비전공자도 쉽게 배울 수 있는 **얕은 물** 강의와,\n전공자를 위한 **깊은 물** 강의로 이루어져 있습니다.\n\n두 강의는 같은 문법을 설명하더라도 난이도에 따라 설명하는 방식이 다릅니다.\n\n얕은 물 강의는 라이캣의 여정이 담겨있는 하나의 스토리로 쉽고 재미있게 파이썬을 학습할 수 있습니다 :)\n깊은 물 강의는 얕은 물 강의에서 배운 개념들을 한 단계 난이도 높여 설명합니다.\n\n꼭 알아야할 개념들을 쏙쏙 담아, 쉽고 빠르게 익힐 수 있도록 준비했습니다.\n재미있는 라이캣의 스토리와 연습문제를 통해 기초 개념을 익히시면 Python에 금방 익숙해질 수 있습니다!\n\n얕은 물 강좌의 강의 내용과 스토리가 담긴 전자책(PDF)을 무료로 제공해 드립니다!\n\n지식공유자가 알려주는\n**강의 수강 꿀팁!**\n\n🎓\n이런 분들께\n추천드려요!\n\n코딩을 처음 접하는 분\n\nPython으로 입문하고 싶은 분\n\nPython의 p자도 모르는 분\n\nPython으로 개발을 시작하고 싶은 비전공자\n\n기초 개념을 확실하게 잡고 싶은 전공자\n\n------\n\n\n\n# 🧙‍♂ 안녕하세요. 제주 코딩베이스 캠프입니다.\n\n### **제주 코딩 베이스캠프란?**\n\n\n\n![jeju.png](https://cdn.inflearn.com/public/files/courses/324031/9da6a80d-0fbc-4221-a6d7-bb24648206a4/jeju.png)\n\n\n\n**제주에서 가장 핫한 개발자들이 모여 작당한 부트캠프!** 열정있는 청년들에게 열정만큼 성장할 수 있는 기회를 제공하는 부트캠프가 인프런에 런칭합니다!\n\n7기와 8기는 카카오와 함께 진행, 9기는 제주대학교 내부에서 진행, 10기는 카카오, 구름과 함께 진행하였습니다.\n\n**서비스 구축 성공** 경험을 통해 이 취업난 시대에 자신감, 자존감, 성취감, \n자립할 수 있는 능력을 배양해보세요!\n\n으라차차 청춘 화이팅입니다!\n\n',1,'2021-02-17 21:08:03','http://3.36.125.70/thumbimg/b5aee4d8-0253-480c-9af4-57da2678e550_9f2bb0a8-26c3-4520-aaf6-5a3ff4466b7d.png'),(256,'Django 시작하기','easydeveloper1@naver.com','![post-thumbnail](https://media.vlpt.us/images/hj8853/post/cc621240-cb6a-4fa7-9a8e-bcb420941e18/django.png)\n\n# 가상 환경 생성하기\n\n장고는 파이썬 가상환경(virtualenv)에서 설치를 할 것이다. 로컬환경이 아닌 가상환경에 설치하는 이유는 각각의 프로젝트에서의 독립적인 환경을 만들어주기 위함이다. 여러개의 프로젝트를 개발한다고 가정할 경우 각각의 프로젝트에 사용된 파이썬이나 라이브러리들의 버전이 다를 수 있다. 그럴 경우 각 프로젝트마다 환경을 다르게 설정하기는 너무 번거로운 작업이기 때문에 미리 가상환경을 경험해보려 한다.\n\n## virtualenv setup\n\n가상환경을 셋팅해주기 위해 먼저 `virtualenv`를 설치해준다.\n\n```null\npip3 install virtualenv\n```\n\n## 프로젝트 폴더 생성\n\n`virtualenv`설치가 완료되면 프로젝트 폴더를 생성하고 싶은 경로로 `cd`명령어를 통해 진입한 후 폴더를 생성해준다.\n\n```null\nmkdir my_web_site\n```\n\n위에 생성한 폴더의 경로로 진입한 후\n\n```null\npython -m venv mystie\n```\n\n명령어를 입력해주면 `mysite`라는 이름을 가진 가상환경이 만들어진다.\n여기서 `mysite`는 내가 만들 가상환경의 이름을 설정하는것이니 본인이 원하는 가상환경의 이름으로 설정해주면 된다.\n이제 이 프로젝트에서 사용할 프레임워크, 라이브러리등 설치와 파이썬 파일 실행을 하려고 할 때 이 가상환경에 진입 후 원하는 명령을 실행시켜줘야 한다. 가상환경에 진입하기 위해서는 가상환경을 설치 한 폴더(위 같은 경우에는 my_web_site)로 진입한 후\n\n```null\nsource mysite/bin/activate\n```\n\n라는 명령어를 통해 가상환경에 진입할 수 있다. 가상환경에 정상적으로 진입이 되면 터미널의 경로를 표시해주는 라인 가장 왼쪽 끝에 `(mysite)` 라는 표시가 추가될 것이다. 이 표시가 가상환경에 정상적으로 진입했다는 뜻이다.\n\n진입해있는 가상환경에서 다시 로컬환경으로 빠져나오고 싶다면 아래의 터미널창에 명령어를 입력해주면 된다.\n\n```null\ndeactivate\n```\n\n## Django 설치\n\n가상환경을 셋팅을 마쳤으니 django를 설치해야한다.\n먼저 가상환경에 진입이 되어있는지 확인 후 아래의 명령어를 입력해주면 설치가 완료된다.\n\n```null\npip3 install django\n```\n\n# 프로젝트 생성\n\n장고에서의 프로젝트는 하나의 웹 사이트다. 장고 프로젝트를 생성하면 한개의 웹 사이트가 만들어 지는 것과 같다. 그리고 프로젝트 안에는 여러개의 앱(App)들이 존재한다.\n\n따라서 웹 사이트 생성을 위해 가장먼저 해야 할일은 장고 프로젝트를 생성하는 것이다. 프로젝트 생성을 위해 `my_web_site` 경로로 진입 후 가상환경에 진입한다. 그 다음으로 다음 명령어를 입력해주면 된다.\n\n```null\ndjango-admin startproject config .\n```\n\n`.`은 현재의 디렉토리에 프로잭트를 생성하겠다는 의미이다. `config`와 `.`사이에 공백이 있음에 주의하자. `config` 명령어를 사용하지 않으면 `mysite`폴더 안에 `mysite`가 생겨서 구조를 이해하기 어려워서 `config`명령어를 사용했다.\n위와 같이 프로젝트를 생성해준 후 `ls`로 디렉토리에 있는 파일 목록을 확인해보면\n![img](https://media.vlpt.us/images/hj8853/post/a57d2686-0c31-4374-b839-abaecfaddf92/image.png)\n위와 같은 파일들이 생성되었을 것이다. 이제 `mysite`웹 사이트가 제대로 구동이 되는지 확인해보면 된다.\n\n```null\npython manage.py runserver\n```\n\n위의 명령어를 실행시켜주면 여러 문구가 뜰텐데 가장 주목해야할 부분은\n![img](https://media.vlpt.us/images/hj8853/post/1f236600-080c-41ea-bd6b-a1c1a5cb09ca/image.png)\n이런 문구가 떴다면 정상적으로 실행이 된 것이다.\n본인의 로컬환경 주소인 `http://127.0.0.1:8000/` 또는 `http://localhost:8000/`로 접속해보자.\n![img](https://media.vlpt.us/images/hj8853/post/f097d04c-bff0-4ff8-9f6e-56605f6d4df3/image.png)\n위와 같은 화면이 출력되었다면 정상적으로 구동이 된 것이다.\n\n------\n\n이제 장고를 시작하기 위한 준비단계는 마쳤으니 본격적으로 장고의 기본 개념과 사용법에 대해서 알아봐야겠다.',0,'2020-09-06 13:00:14','http://3.36.125.70/thumbimg/4f29754d-7628-43db-b90f-c46237a4ae7c_장고시작하기.png'),(257,'Django Framework 시작해보자','easydeveloper1@naver.com','# Django Framework\n\n- 라이브러리: 한 기능을 하기 위한 코드가 모여있는 곳\n- 프레임워크: 라이브러리보다 더 큰 개념. 나한테 필요한 모든 것들이 지원되는 환경. 대표적으로 DJango. (Python 기반의 프레임워크) e.g. expresser(자바스크립트 기반), 플라스크(python 기반), 스프링(자바 기반)\n- Django의 MVT: 웹프로그래밍 영역을 3가지 개념으로 나눠서 개발하는 방식\n  - Model: 데이터베이스 테이블 정의\n    - 실제 파이썬 클래스들이 모여서 데이터베이스의 테이블이 된다\n  - View: 로직 처리\n  - Template: 사용자가 보게 될 화면의 모습을 정의\n- 우리는 요청이 있어야 움직인다.Client ->\n- 요청이 무엇인지 알아보고 분류. -> URL.conf(urls.py) ->\n- 요청에 맞는 로직을 처리함 -> view(views.py) ->\n- 모델을 통해서 로직을 처리함. Create, Read, Update, Delete (C.R.U.D) 이렇게 네개의 작업만 수행한다 -> Model <->\n- Model은 Python 기반이고 Database는 MySQL기반이기 때문에 ORM이라는 통역사를 통해 번역함. <-> MySQL Database\n\n# Database Modelling\n\n- 일반적인 표인 연명부(table)에 있는 column들로 이루어진 새로운 표가 필요하다\n- 1:1\n- 1:many\n- many:many\n- 세로 : 꼭 필요함\n- 동그라미: optional\n- 삼지창: 많을 수 있다(?)',1,'2020-09-12 13:30:14','http://3.36.125.70/thumbimg/a1076366-79ed-4f68-9bbc-a7e366a78711_장고프레임워크.png'),(258,'Django 마이그레이션 초기화','easydeveloper1@naver.com','![img](https://media.vlpt.us/images/kho5420/post/cf8f57d6-ddc3-4236-af48-04d6cd81bb67/django_logo.jpeg)\n\n최근에 django 프로젝트를 진행하다 보니 models.py 부분에 추가로 수정을 할 일이 생겼습니다.\n\n새로 필드를 추가를 하려면 default 값을 설정해야 된다는 사실을 모르고 오류가 나서 이것 저것 하다가 데이터베이스를 드랍하기도 하는 등 과정을 겪으면서 마이그레이션 초기화하는 방법에 대해서 알아보았습니다.\n\n### 데이터베이스를 전부 날려도 되는 경우\n\n- 프로젝트가 개발 환경에 남아있고, 전부 초기화 하기를 바라는 경우\n\n#### 1. 프로젝트 안에 있는 모든 마이그레이션 파일을 삭제합니다.\n\n프로젝트 내의 앱들의 마이그레이션 폴더를 각각 열어 `__init__.py` 파일을 제외하고 모두 삭제합니다.\n\n#### 2. 현재 데이터베이스를 드랍합니다.\n\n#### 3. 첫 마이그레이션을 생성한 뒤 데이터베이스 스키마를 만듭니다.\n\n```py\npython manage.py makemigrations\npython manage.py migrate\n```\n\n### 마이그레이션 기록을 지우고 싶지만 데이터베이스는 유지하고 싶은 경우\n\n#### 1. 현재 데이터베이스 스키마에 맞는지 확인합니다.\n\n```py\npython manage.py makemigrations\n```\n\n대기 중인 마이그레이션이 있으면 먼저 적용시킵니다.\n\n```py\nNo changes detected\n```\n\n위의 메시지가 나타나면 다음 단계를 진행합니다.\n\n#### 2. 각각의 앱에서 마이그레이션 기록을 삭제합니다.\n\n앱에서 마이그레이션 기록을 삭제할텐데 현재 상황을 알 수 있도록\n\n```bash\npython manage.py showmigrations\n```\n\n![img](https://media.vlpt.us/images/kho5420/post/78a8bf85-4979-4c7c-9841-7f7a29a456c4/image.png)\n\n이제 마이그레이션 기록을 삭제합니다. (posting은 app 이름입니다.)\n\n```bash\npython manage.py migrate --fake posting zero\n```\n\n다음 다시 showmigration을 실행해서 확인해봅니다.\n\n```bash\nposting\n[ ] 0001_initial\n[ ] 0002_comment\n[ ] 0003_auto_20201012_1920\n```\n\n위와 같이 X 표시가 사라지고 초기화를 하고 싶은 모든 앱에 이 과정을 거쳐야 합니다.\n\n#### 3. 실제 마이그레이션 파일 삭제\n\n프로젝트 내 앱들의 마이그레이션 폴더를 열어 `__init__.py` 파일을 제외하고 모두 삭제합니다.\n\n이제 다시 showmigrations를 실행합니다.\n\n```bash\nposting\n (no migrations)\n```\n\n#### 4. 첫 마이그레이션을 생성합니다.\n\n```bash\npython manage.py makemigrations\n```\n\n#### 5. 첫 마이그레이션을 페이크합니다.\n\n데이터베이스가 이미 존재하는 상황이기 때문에 마이그레이션을 마이그레이트 하지 않습니다.\n그래서 가짜로 마이그레이트 합니다.\n\n```bash\npython manage.py migrate --fake-initial\n```\n\n마지막으로 showmigrations을 실행하여 확인합니다.',1,'2020-09-18 14:30:14','http://3.36.125.70/thumbimg/b59b4156-f220-4952-8f8f-76d8bfc72ecf_장고마이그레이션.jpeg'),(259,'프론트엔드 추천 자료 모음','easydeveloper1@naver.com','\n## 사이트\n\n[MDN](https://developer.mozilla.org/ko/) - 가장 유명한 MDN\n[모던 javascript 튜토리얼 ](https://ko.javascript.info/)- JS 튜토리얼로 정말 좋음.\n[타입스크립트 핸드북](https://typescript-kr.github.io/) - TS 공식문서 번역본\n[웹팩 핸드북](https://joshua1988.github.io/webpack-guide/) - 캡틴판교님의 웹팩 핸드북\n[fontawesome](https://fontawesome.com/) - 다양한 ICON을 가져올 수 있는 사이트\n[flatuicolors](https://flatuicolors.com/) - 다양한 색들을 가져오기 편한 사이트\n[CSS Dinner](https://flukeout.github.io/) - 다양한 css 선택자들을 게임을 통해 배울 수 있는 사이트\n[FLEXBOX FROGGY](https://flexboxfroggy.com/#ko) - css의 FLEXBOX를 게임을 통해 배울 수 있는 사이트\n[GRID GARDEN](https://cssgridgarden.com/#ko) CSS의 grid를 게임을 통해 배울 수 있는 사이트\n\n![img](https://media.vlpt.us/images/ansrjsdn/post/eaa4af70-f583-47ea-98cd-e4eb7e20fc63/image.png)\n\n## 블로그\n\n[Velopert velog](https://velog.io/@velopert) - velog를 만든 velopert님의 velog로 정말 좋은 글들이 많음.\n\n[제로초 블로그](https://www.zerocho.com/) - 다양한 JS 관련 지식들이 있음.\n\n[Jbee 블로그](https://jbee.io/) - 다양한 프론트엔드 관련 지식들\n\n[TOAST UI](https://ui.toast.com/fe-guide/ko/) - FE 관련 지식들과 여러 글들\n\n[캡틴판교 블로그](https://joshua1988.github.io/) - JS 및 VUE 관련 글들이 많음.\n\n[Evan moon 블로그](https://evan-moon.github.io/) - 다양한 프론트엔드 관련 글들\n\n[NAVER D2](https://d2.naver.com/home)\n[우아한형제들 기술 블로그](https://woowabros.github.io/)\n[라인 기술 블로그 - 프론트](https://engineering.linecorp.com/ko/blog/category/front-end-ko/)\n\n## 깃허브\n\n[주니어 개발자 채용 정보](https://github.com/jojoldu/junior-recruit-scheduler) - 주니어 개발자들이 지원 할만한 다양한 채용 정보 모음.\n\n[고퀄리티 개발 모음](https://github.com/Integerous/goQuality-dev-contents) - 다양한 개발에 대한 지식들을 모아 둔 곳.\n\n[Technical Interview Guidelines for Beginners](https://github.com/JaeYeopHan/Interview_Question_for_Beginner) - 다양한 면접 관련 질문들을 모아둔 곳.\n\n[취준생이 반드시 알아야 할 프론트엔드 지식들](https://github.com/baeharam/Must-Know-About-Frontend) - 프론트엔드 개발자들을 위한 지식들. 면접에 많이 나옴\n\n## 유튜브\n\n[노마드 코더 Nomad Coders ](https://www.youtube.com/channel/UCUpJs89fSBXNolQGOYKn0YQ)- 우리의 니꼴라스 선생님. React를 배울 수 있고 프로그래밍의 전반적인 내용들을 배울 수 있음.\n\n[드림코딩 by 엘리](https://www.youtube.com/channel/UC_4u-bXaba7yrRz_6x6kb_w) - 기초부터 자세하게 배울 수 있음. 일주일에 1강 정도 꾸준히 올라옴. 애청자입니다 ㅎㅎ\n\n[ZeroCho TV](https://www.youtube.com/channel/UCp-vBtwvBmDiGqjvLjChaJw) - 기초부터 React, ts까지 배울 수 있음. 무료 강좌들은 유튜브에 있고 유료 강좌들은 인프런에 있음. 유료 강좌는 유튜브에서 찍고 있을 때 들으면 무료입니다.\n\n[코드 스피츠](https://www.youtube.com/channel/UCKXBpFPbho1tp-Ntlfc25kA) - js의 깊은 부분까지 가르쳐 주는 곳인거 같습니다. 아직 들어보진 않았음. 좋아 보여서 들을 예정.\n\n[김버그 Kimbug](https://www.youtube.com/channel/UCFDbz39kFPvU0AUpgHx4ICw) - 프론트엔드 개발자 일상이라던지, 공부 추천 같은 영상들 올라옴. 요즘은 프린이들 코드 리뷰 영상 올라와서 매우 공감 됨.\n\n[DarkCode](https://www.youtube.com/channel/UCD3KVjbb7aq2OiOffuungzw) - 외국 유튜버인데 html, css만 가지고 많은 화면들을 만듦. 따라 치면서 html, css 공부하기 좋음.\n\n[Minjun Kim](https://www.youtube.com/channel/UCmMgRlN-3GKQ_CH7cOtLdvg) - velopert님 유튜브. 요즘은 방송 안 하시지만 velog 만들 때의 영상을 볼 수 있음.\n\n[Scalper Frontend](https://www.youtube.com/channel/UC1wWTimSew9rYzEZRVYVlbg) - Scalper Frontend, js 기초 실전 코스나 꿀팁들이 좋다.\n\n[Interactive Developer](https://www.youtube.com/channel/UCdeWxKJuvtUG2xyN6pOJEvA) - Interactive Developer, 애니메이션으로 구글에 입사하신 분, 물론 JS도 잘하신다!\n\n[개발자의 품격](https://www.youtube.com/channel/UCeyUnRL6sG_GQJRus89sZ8Q) - 개발자의 품격, 영상을 많이 올리신다. 상당히 괜찮은 영상들이 많은듯\n\n[프론트엔드 개발 환경의 이해 - 김정환](https://www.youtube.com/watch?v=MqK0W-fbQPc&list=PL9mhQYIlKEhcQStzo0dQiBThjwU8TroCt)\n[Vue.js 개발 입문 - 캡틴판교](https://www.youtube.com/watch?v=_t22zhXRvIY&list=PL9mhQYIlKEhfBqx304fEi7RTv9Y3alJdP)\n[javascript로 함수형 프로그래밍 배우기](https://www.youtube.com/watch?v=e-5obm1G_FY&t=413s)\n[함수형 프로그래밍과 ES6+ - 유인동](https://www.youtube.com/watch?v=4sO0aWTd3yc)\n[NAVER TECH CONCERT 2019 - FRONT END](https://www.youtube.com/watch?v=2hHqtB_usRo&list=PLsFtzQAC8dDfopv-URWpkGIRS47QoYodG)\n[FECONF 2020](https://www.youtube.com/channel/UCWEzfYIpFBIG5jh6laXC6hA)\n\n### 기타\n\n[벨로퍼트와 함께 하는 모던 자바스크립트](https://learnjs.vlpt.us/)\n[벨로퍼트와 함께 하는 모던 리액트](https://react.vlpt.us/)\n[리액트를 다루는 기술(개정판)](https://thebook.io/080203/)\n[실용주의 프런트엔드 개발](https://peter-cho.gitbook.io/book/)\n[TypeScript Cookbook](https://www.notion.so/TypeScript-Cookbook-727820ac0d4544498ebe732e940816f4)\n[DevFest WebTech CodeLab 2019](https://www.notion.so/DevFest-WebTech-CodeLab-fcc4ab44f4e34efe850a199dcb95ad01)\n[라인블로그 React 컴포넌트를 커스텀 훅으로 제공하기](https://engineering.linecorp.com/ko/blog/line-securities-frontend-3/)\n[NAVER TECH CONCERT 2020](https://tv.naver.com/v/15353556/list/629240)\n[NHN FORWARD](https://forward.nhn.com/session)\n\n제가 좋아하거나 봤던 것이나 볼 것이거나... 그런 자료들 모음입니다. 참고 하실분 참고하세요~ 다른 좋은 사이트 있으면 추천해주시면 감사하겠습니당.',6,'2020-09-22 09:17:30','http://3.36.125.70/thumbimg/6e214711-f2ca-494b-83d7-df90cf5bae40_18.png'),(260,'TIL) Python 스트링, 리스트, 딕셔너리 반복문','easydeveloper1@naver.com','> **MISSION**: 스트링, 리스트, 딕셔너리를 반복문으로 돌면서 인자를 출력하는 함수를 작성해보세요.\n\n### 스트링 반복문\n\n```null\nfor letter in \'coding\':\n	print(letter)\n>>>\nc\no\nd\ni\nn\ng\n\n#가로로 출력하고 싶다면 \nfor letter in \'coding\':\n	print(letter, end = \'\')\n>>> coding\n\n#가로출력+한칸씩 띄어쓰기\nfor letter in \'coding\':\n	print(letter, end=\' \')\n>>> c o d i n g \n```\n\n### 리스트 반복문\n\n```null\nanimals = [\'dog\', \'cat\', \'lion\', \'rabbit\']\nfor animal in animals:\n	print(animal)\n>>>\ndog\ncat\nlion\nrabbit\n```\n\n### 딕셔너리 반복문\n\n```null\nBTS = {\'JIN\': \'Vocal\', \'SUGA\': \'Rapper\', \'J HOPE\': \'Rapper\', \'RM\': \'Rapper\', \'JIMIN\': \'Vocal\', \'V\': \'Vocal\', \'JUNGKOOK\': \'Vocal\'}\n\nfor key, value in BTS.items():\n	print(key, value)	\n>>>\nJIN Vocal\nSUGA Rapper\nJ HOPE Rapper\nRM Rapper\nJIMIN Vocal\nV Vocal\nJUNGKOOK Vocal\n```\n\n',1,'2020-09-23 10:27:41','http://3.36.125.70/thumbimg/448c1d1d-fcb4-41dc-97bb-57d1efcb208e_16.png'),(261,'[ TIL02 ] 마크다운','easydeveloper1@naver.com','![post-thumbnail](https://media.vlpt.us/images/_dodo_hee/post/0a76ee9d-cb8d-4659-9d83-b272a99ad86a/%E1%84%80%E1%85%B5%E1%84%90%E1%85%A1.jpg)\n\n> 첫 블로그 글 작성하면서 오래걸리고 버벅였던 부분들이 있어서 😅\n> 블로그 작성할때 내가 자주 사용하는 마크다운을 정리하려고 한다 😇\n> 내가 처음 작성했을때 참고한 사이트 => [마크다운작성법](https://velog.io/@yuuuye/velog-마크다운MarkDown-작성법)\n\n## 제목 작성하기\n\nh1~h6까지 표현 가능.\n제목으로 할 문장앞에 #으로 표현\n\n```null\n# h1\n## h2\n### h3 \n#### h4\n##### h5\n###### h6\n```\n\n## 목록\n\n순서가 있는 목록을 만들고 싶을땐\n\\1. 2. 3. 이런식으로 작성하면 된다.\n\n```null\n1. 일번\n2. 이번\n3. 삼번\n```\n\n결과 ✍️\n\n1. 일번\n2. 이번\n3. 삼번\n\n순서가 없는 목록을 만들고 싶을땐\n`-`,`+`,`*` 셋 중 하나로 사용.\n\n```null\n+ 동물\n  + 강아지\n  + 고양이\n  + 너구리\n```\n\n결과 ✍️\n\n- 동물\n  - 강아지\n  - 고양이\n  - 너구리\n\n## 인용문\n\n`>`써주고 그 뒤에 문장 쓰면 인용문으로 묶어진다.\n아주 간단쓰.🤩\n\n## 폰트 스타일\n\n#### 1. 굵게\n\n`__`도희`__` 언더바 2개로 문장 감싸주면 폰트 굵게 표시\n\n결과 ✍️  **도희**\n\n#### 2. 색상\n\n```\n<span style=\"color:green\">green</span>\n```\n\n결과 ✍️  green\n\n## 인라인코드\n\n`백틱(``)`을 사용해서 작성하면\n\n결과 ✍️   `이렇게 회색 네모안에 들어있는 문장이 만들어진다`\n\n장문으로 만들고 싶을땐 `백틱(``` ```)`을 사용해서 작성해주면 된다.\n\n결과 ✍️\n\n```null\n이렇게 \n회색 네모안에 \n들어있는 문장이\n만들어진다\n```\n\n## 줄바꿈과 띄어쓰기\n\n벨로그에서 줄바꿈은 `<br/>` 로 작성한다.\n😅 참고로 HTML은 `</br>` 인거 헷갈리지 말기.\n\n벨로그에서 띄어쓰기는 ` `로 작성한다.\nHTML과 똑같다.\n\n## 링크넣기\n\n링크 넣는 방법은 다양한데 내가 자주넣는 링크방법은 인라인 링크이다.\n`[도희블로그](https://velog.io/@_dodo_hee)`\n대괄호안에 인라인 링크 자리에 넣고 싶은 링크를 넣고 () 괄호 안에 링크주소를 넣어준다.\n\n결과 ✍️   [도희블로그](https://velog.io/@_dodo_hee)\n\n\n\n\n\n> 벨로그 벨로퍼트님이..만드신거라고 들었는데\n> 세상에 똑똑한 사람들이 넘 많은 것 같다..\n> 마크다운 글 정리하면서 감탄하면서 정리했던 것 같다.. 신세계...🤪',0,'2020-10-04 13:21:59','http://3.36.125.70/thumbimg/70d3c7b6-8363-4754-9c33-170c93c5da1c_TIL 마크다운.jpg'),(262,'[백준] 1697번: 숨바꼭질','easydeveloper1@naver.com','오늘은 백준 문제풀이를 해볼게요!!\n1697번, BFS 문제인데요. 저는 PYTHON으로 풀어보았습니다!!\n\n함께 풀어볼까요??\n\n![post-thumbnail](https://media.vlpt.us/images/kyy00n/post/f51db785-c183-477a-a8d0-c785b292c17c/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98.png)\n\n![img](https://media.vlpt.us/images/kyy00n/post/ecad3fbd-fb24-4f00-9b12-a7421b470be2/%EC%88%A8%EB%B0%94%EA%BC%AD%EC%A7%88.jpg)\n\n수빈이와 동생 사이의 엣지의 개수를 세주면된다. (최단거리!)\n\n나는 처음에 그래프를 만들어서 하려고 했는데 사실 그럴 필요가 없었다.\n\n특정 노드에 어떤 노드가 연결되어있는지는 굳이 확인하지 않아도 알 수 있기 때문에 그래프를 만들 필요가 없다. 수빈이가 지금 있는 곳이 5라고 하면 갈 수 있는(연결된) 노드는 4, 6, 10 이라는 걸 그냥 구할 수 있다.\n\n그래서 bfs 함수를 만들 때 현재 번호의 범위에 따라 최대 3개까지의 수를 큐에 넣어주면 되는 간단한 문제였다.\n\n```python\nfrom _collections import deque\n\ndef bfs(N, K):\n    queue = deque([[N, 0]]) # [노드 번호, 최단거리]\n    visited = [False]*1000001\n    while queue:\n        curr = queue.popleft()\n        if curr[0] == K:\n            return curr[1]\n        if not visited[curr[0]]:\n            visited[curr[0]] = True\n            if curr[0] <= 999999:\n                queue.append([curr[0] + 1, curr[1] + 1])\n            if curr[0] > 0:\n                queue.append([curr[0] - 1, curr[1] + 1])\n            if curr[0] <= 500000:\n                queue.append([curr[0] * 2, curr[1] + 1])\n\nN, K = map(int, input().split())\nprint(bfs(N, K))\n```\n\n👇🏻 다 똑같은데 시간초과가 났던 코드 (visited 여부 확인 방법을 다르게 했음)\n\n```python\nfrom _collections import deque\n\ndef bfs(N, K):\n    queue = deque([[N, 0]])\n    visited = []\n    while queue:\n        curr = queue.popleft()\n        if curr[0] == K:\n            return curr[1]\n        if curr[0] not in visited: # O(len(visited))\n            visited.append(curr[0])\n            if curr[0] <= 500000:\n                queue.append([curr[0] * 2, curr[1] + 1])\n            if curr[0] <= 999999:\n                queue.append([curr[0] + 1, curr[1] + 1])\n            if curr[0] > 0:\n                queue.append([curr[0] - 1, curr[1] + 1])\n\n\nN, K = map(int, input().split())\nprint(bfs(N, K))\n```\n\n',0,'2020-11-03 15:41:22','http://3.36.125.70/thumbimg/0f182ad5-7f42-4db1-b70a-00422aff9b2a_21.png'),(263,'Express 라우터 분리하기','easydeveloper1@naver.com','`NodeJS`의 `Express프레임워크`는 라우터 분리 기능을 제공합니다.\n기본적으로는 라우터를 구성할 때 다음과 같이 코드를 작성합니다.\n\n```null\nconst express = require(\'express\');\nconst app = express();\n\napp.get(\'/\',(req,res,next) => {\n  res.send(\'Hello world!\');\n});\n```\n\n웹 페이지에서 \'/\' 로 접근했을때 \'Hello world!\'가 보여지는 코드입니다.\n하지만 프로젝트가 커지면, 라우터의 수가 늘어나게되고. 코드의 양도 많아짐에 따라 유지보수가 어려워지게 될 수 있습니다.\n\n```null\napp.get(\'/users\',(req,res,next) => {\n	// response...\n});\napp.get(\'/books\',(req,res,next) => {\n	// response...\n});\napp.get(\'/users/:id\',(req,res,next) => {\n	// response...\n});\napp.get(\'/books/:id\',(req,res,next) => {\n	// response...\n});\n```\n\n위의 코드는 user 와 book에 대한 리소스를 제공합니다.\n예를 들어 \'/users\' 라우터에 대한 비지니스로직을 수정해야하면,\n\'book\'에 대한 리소스를 제공하는 파일을 수정해야합니다.\n\nexpress에서 제공하는 express.Router API를 사용하여\n코드를 더 깔끔하게 수정을 해봅시다.\n\n디렉토리에 router 폴더를 생성하고 users.js 파일을 생성합니다.\n다음은 users.js 파일의 내용입니다.\n\n```null\nconst express = require(\'express\');\nconst router = express.Router(); // 새로 생겼어요!\n\n// router.get 으로 사용합니다\nrouter.get(\'/\', function(req, res) {\n  // 모든 유저를 가져오는 코드...\n  res.send(\'Users -> \',users);\n});\n\nmodule.exports = router // 새로 생겼어요!\n```\n\n\'router\' 라는 새로운 변수를 생성하였고,\n\'get\' 메소드는 기존의 \'app\' 객체에서 호출했다면, 이번엔\n새로 생성한 \'router\' 객체에서 호출했습니다.\n\n그리고 \'router\' 객체를 exports 해서 모듈화를 했습니다.\n\n이제 메인 서버 파일(app.js)을 열어 다음과 같이 수정합니다.\n\n```null\nconst usersRouter = require(\'./router/users\'); // 새로 추가!\napp.use(\'/users\',usersRouter); // 새로 추가!\n```\n\n기존 \'app.get\' 을 썼다면 , 이번엔 \'use\' 메소드를 사용하여 미들웨어를 등록했습니다.\n\n이렇게되면, 웹 페이지에서 \'/users\' 에 대한 요청을 할때\n위에서 정의한 라우터 코드대로 작동하게 됩니다.\n\n웹 브라우저에서 \'/users\' 로 접근하면\n\'users.js\' 에서 작성한 \'/\' 의 로직이 수행되는걸 볼 수 있습니다.\n\n이 뜻은 \'users.js\' 에서 작성한 라우터의 base한 url 은\n\'app.js\' 에서 작성한 \'app.use(\'/users\',usersRoute)의 1번째 아규먼트인 \'/users\' 가 됩니다.\n\n마찬가지로 \'router\' 폴더에 \'books.js\' 파일을 생성하고\n라우터를 등록한 다음 , \'app.js\'에 미들웨어로 등록한다면\n라우터를 분리하여 코드를 작성할 수 있을 것입니다.',1,'2020-11-05 09:17:32','http://3.36.125.70/thumbimg/a2734528-9587-4ef1-9fcf-eda23f07c032_vue 라우터.png'),(264,'[Node.js] 라우터 분리하기','easydeveloper2@naver.com','라우팅 작업이 늘어나다보면, 코드 양이 너무 많이 늘어나 관리하기 힘들어질 때가 있다. 이 때 연관이 있는 라우터끼리 파일을 만들어 분리해서 관리할 필요가 있다.\n\n예시를 들어 다음 코드에서 라우터를 분리해보자.\n\n```javascript\nconst express = require(\'express\');\nconst app = express();\n\napp.get(\'/auth/login\', (req, res) => {\n    res.send(\'This is login page\');\n})\napp.get(\'/auth/logout\', (req, res) => {\n    res.send(\'This is logout page\');\n});\napp.get(\'/auth/register\', (req, res) => {\n    res.send(\'This is register page\');\n});\n\napp.get(\'/topic/view\', (req, res) => {\n    res.send(\'This is view page\');\n});\napp.get(\'/topic/add\', (req, res) =>{\n    res.send(\'This is add page\');\n});\napp.get(\'/topic/edit\', (req, res) =>{\n    res.send(\'This is edit page\');\n});\napp.get(\'/topic/delete\', (req, res) =>{\n    res.send(\'This is delete page\');\n});\n\napp.listen(80, () => {\n    console.log(\'Connected 80 port\');\n});\n```\n\n### 1. 라우터를 모듈로 분할\n\n위의 예시를 보면, 대략 auth쪽을 담당하는 라우터와 topic쪽을 담당하는 라우터로 분리할 수 있을 것이다. 따라서 이를 auth.js, topic.js라는 모듈로 만들어 분리할 것이다.\n\n```javascript\nconst router = require(\'express\').Router();\n\nrouter.get(\'/login\', (req, res) => {\n    res.send(\'This is login page\');\n})\nrouter.get(\'/logout\', (req, res) => {\n    res.send(\'This is logout page\');\n});\nrouter.get(\'/register\', (req, res) => {\n    res.send(\'This is register page\');\n});\n\nmodule.exports = router;\n\nauth.js\n```\n\n------\n\n```javascript\nconst router = require(\'express\').Router();\n\nrouter.get(\'/view\', (req, res) => {\n    res.send(\'This is view page\');\n});\nrouter.get(\'/add\', (req, res) =>{\n    res.send(\'This is add page\');\n});\nrouter.get(\'/edit\', (req, res) =>{\n    res.send(\'This is edit page\');\n});\nrouter.get(\'/delete\', (req, res) =>{\n    res.send(\'This is delete page\');\n});\n\nmodule.exports = router;\n\ntopic.js\n```\n\nexpress.Router 클래스를 이용해서 분리하였다. 라우터를 정의하고 그 라우터에 대한 라우팅들을 정의해주었다. 그리고 module.exports = router; 로 require를 사용했을 때 해당 라우터를 가져올수록 하였다.\n자세한 내용은 [공식 문서](https://expressjs.com/ko/guide/routing.html)를 참고하면 된다.\n\n### 2. 라우터 모듈 사용하기\n\n```javascript\nconst express = require(\'express\');\nconst app = express();\n\nconst auth = require(\'./routes/auth\');\napp.use(\'/auth\', auth);\n\nconst topic = require(\'./routes/topic\');\napp.use(\'/topic\', topic);\n\napp.listen(80, () => {\n    console.log(\'Connected 80 port\');\n});\n```\n\n코드가 훨씬 간결해진 것을 확인할 수 있다. require(\'파일경로\'); 로 해당 라우터 모듈을 가져오고 app.use(\'/경로\', 라우터); 로 라우터를 사용 설정하면 된다. 이렇게 할 경우 \'/경로\'에 해당하는 작업을 해당 라우터가 처리하게 된다.\n\n**주의해야 될 사항**\n처음 예시처럼 경로를 \'auth/login\'으로 하고, app.use(\'/auth\', auth); 로 해당 라우터를 사용하게 되면, 해당 라우터에서는 auth/auth/login에 대한 요청을 받게 된다. 따라서 app.use에서 사용한 경로는 지워두도록 하자.\n\n### 3. 모듈에서 객체 전달받기\n\n모듈로 만들 경우, 파일들이 완전히 서로 고립되게 된다. 이 때, 만약 auth.js에서 app 객체를 필요로 한다면 어떻게 할까?\n\n```javascript\nmodule.exports = (app) => {\n    const router = require(\'express\').Router();\n    const application = app;\n\n    router.get(\'/login\', (req, res) => {\n        res.send(\'This is login page\');\n    })\n    router.get(\'/logout\', (req, res) => {\n        res.send(\'This is logout page\');\n    });\n    router.get(\'/register\', (req, res) => {\n        res.send(\'This is register page\');\n    });\n    \n    return router;\n}\n\nauth.js\n```\n\n바로 함수로 만들어서 해당 객체를 매개변수로 하도록 만들면 된다. 1번에서 했던 과정에서 결국 router를 리턴해주었으니, 해당 함수에서도 router를 리턴시켜주면 된다.\n\n```javascript\nconst express = require(\'express\');\nconst app = express();\n\nconst auth = require(\'./routes/auth\')(app);\napp.use(\'/auth\', auth);\n\nconst topic = require(\'./routes/topic\');\napp.use(\'/topic\', topic);\n\napp.listen(80, () => {\n    console.log(\'Connected 80 port\');\n});\n```\n\n라우터 모듈을 사용할 때도, 함수를 호출할 때처럼 뒤에 매개변수를 붙여주면 된다.\n\n### 4. 참조\n\nExpress - Node.js 웹 애플리케이션 프레임워크, \"Express 라우팅\", https://expressjs.com/ko/guide/routing.html\n생활코딩, \"라우트 분리하기\", https://opentutorials.org/module/2026/12445',0,'2021-02-17 22:08:08','http://3.36.125.70/thumbimg/18e884ff-969d-4dcd-9dd3-84775728d364_노드js 분리.png'),(265,'Redux 어떻게 써야 잘 썼다고 소문이 날까? - 1편','easydeveloper2@naver.com','리액트 생태계에는 다양한 상태 관리 관련 라이브러리들이 있습니다. 그 중에서, 리덕스(Redux)가 가장 많이 사용되고 있지요. [통계](https://tsh.io/state-of-frontend/)에 따르면 약 48%의 개발자들이 리액트 프로젝트에서 현재 리덕스를 사용하고 있습니다 [[1\\]](https://tsh.io/state-of-frontend/). 그런만큼, 현업에서 리덕스를 사용중인 분들이 많을 것이라고 예상합니다.\n\n리덕스의 사용방식에 있어서는 딱 정해진 규칙이 존재하지 않기 때문에 개발자들 모두 자신만의 방식으로 서로 다르게 사용을 하고 있습니다. 자신의 취향에 따라 사용할 수 있다는 것이 장점이기도 한데, 단점이기도 합니다. 제대로 쓰지 않으면 굉장히 불편할 수 있고, 유지 보수에 있어서 오히려 독이 될 수도 있거든요.\n\n이 글에서는 제가 생각하는 리덕스의 올바른 사용법에 대하여 다뤄보고자 합니다. 주관적인 의견이 다수 내재되어 있으니 이 포스트에서 제시하는 방향이 무조건 정답이라고만 받아들이지는 마시고, 여러분이 유용하다고 생각하는 부분들을 여러분들의 프로젝트에 적용해보세요. 그리고, 반대되는 의견이 있다면 댓글로 남겨주시면 감사하겠습니다!\n\n> 이 포스트는 리디의 [기술 블로그](https://ridicorp.com/story/how-to-use-redux-in-ridi/?utm_source=velog_post&utm_medium=banner_career&utm_campaign=how-to-use-redux-in-ridi)에도 게재되었습니다.\n\n## 정말 리덕스가 필요할까?\n\n리덕스가 필요한 프로젝트에서는 리덕스를 아주 유용하게 사용할 수 있지만, 그렇지 않은 프로젝트에선 그저 개발을 귀찮게 만드는 짐이 될 뿐입니다. 따라서, 리덕스를 사용하기 전에는 꼭 현재 여러분의 프로젝트에 리덕스가 정말 필요한지 고민을 하실 필요가 있습니다.\n\n리액트 개발의 초창기(2015-2018)때는 리액트 프로젝트에서 리덕스를 사용하는 것이 당연시되어 왔습니다. 하지만, 이제는 그럴 필요가 없습니다. 리액트 자체적인 기능만을 사용해도 리덕스 없이 프로젝트를 충분히 개발 할 수 있고, 다른 라이브러리의 도움을 받아 훨씬 편하게 개발할 수 있는 방법들이 존재합니다.\n\n### Context API\n\n단순히 글로벌 상태를 사용하고자 한다면 리액트의 Context API 만으로도 충분히 구현을 할 수 있습니다.\n\n여기서 잠깐, 오해할 만한 부분이 있는데 Context 는 리덕스와의 비교 대상이 아닙니다. Context는 수단일 뿐 사실상 상태관리 자체는 리액트 컴포넌트의 `useState`와 `useReducer` 로 하게 되는 것 입니다.\n\n리덕스와의 주요 차이는 성능 면에서 나타나게 됩니다. 리덕스에서는 컴포넌트에서 글로벌 상태의 특정 값을 의존하게 될 때 해당 값이 바뀔 때에만 리렌더링이 되도록 최적화가 되어있습니다. 따라서, 글로벌 상태 중 의존하지 않는 값이 바뀌게 될 때에는 컴포넌트에서 낭비 렌더링이 발생하지 않겠지요. 반면 Context에는 이러한 성능 최적화가 이뤄지지 않았습니다. 컴포넌트에서 만약 Context의 특정 값을 의존하는 경우, 해당 값 말고 다른 값이 변경 될 때에도 컴포넌트에서는 리렌더링이 발생하게 됩니다.\n\n따라서, Context 를 사용하게 될 때에는 관심사의 분리가 굉장히 중요합니다. 서로 관련이 없는 상태라면 같은 Context 에 있으면 안됩니다. Context를 따로 따로 만들어주어야하죠.\n\n추가적으로, Context에서 상태를 업데이트를 하는 상황에서도 성능적으로 고려해야 될 부분이 있습니다. 우리가 Provider 를 만들게 될 때 다음과 같이 상태와, 상태를 업데이트하는 함수를 `value` 에 넣는 상황이 발생하기도 합니다. 다음 코드를 한번 확인해보세요.\n\n```jsx\nimport React, { createContext, useState, useContext } from \"react\";\n\nconst UserContext = createContext(null);\n\nfunction UserProvider({ children }) {\n  const [user, setUser] = useState(null);\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      {children}\n    </UserContext.Provider>\n  );\n}\n\nfunction useUser() {\n  return useContext(UserContext);\n}\n\nfunction UserInfo() {\n  const { user } = useUser();\n  if (!user) return <div>사용자 정보가 없습니다.</div>;\n  return <div>{user.username}</div>;\n}\n\nfunction Authenticate() {\n  const { setUser } = useUser();\n  const onClick = () => {\n    setUser({ username: \"velopert\" });\n  };\n  return <button onClick={onClick}>사용자 인증</button>;\n}\n\nexport default function App() {\n  return (\n    <UserProvider>\n      <UserInfo />\n      <Authenticate />\n    </UserProvider>\n  );\n}\n```\n\n위 코드는 작동 측면에서 전혀 문제가 없습니다. 하지만, 성능적인 부분에서는 조금은 아쉬운 점이 있습니다.\n\n\n\n현재 `UserInfo` 컴포넌트에서는 Context에 담긴 사용자의 정보를 보여주고 있고, `Authenticate` 컴포넌트의 경우엔 사용자 상태를 업데이트하는 버튼을 보여주고 있습니다. 여기서, 사용자가 버튼을 누르게 됐을 때, `UserInfo` 컴포넌트가 리렌더링이 되는 것은 당연한데요, 문제는 `Authenticate` 도 함께 리렌더링이 된다는 것 입니다. `setUser` 함수가 바뀌지도 않았는데 말이죠.\n\n물론 위와 같은 상황에서는 워낙 소규모의 뷰가 담겨져있는 컴포넌트이고 업데이트도 1회성이기 때문에 실질적으로 성능적으로 큰 문제는 없습니다. 리액트는 충분히 괜찮은 성능을 갖추고 있기 때문이죠. 하지만, 상태도 다양해지고, 뷰도 다양해지게 되면 위와 같은 구조로 Context를 사용하게 되면 낭비되는 렌더링이 너무 많이 발생하게 되어 성능적으로 좋지 못합니다.\n\n따라서, 이를 해결하기 위해서는 다음과 같이 두개의 Context를 사용해야 합니다.\n\n```jsx\nimport React, { createContext, useState, useContext } from \"react\";\n\nconst UserContext = createContext(null);\nconst UserUpdateContext = createContext(null);\n\nfunction UserProvider({ children }) {\n  const [user, setUser] = useState(null);\n  return (\n    <UserContext.Provider value={user}>\n      <UserUpdateContext.Provider value={setUser}>\n        {children}\n      </UserUpdateContext.Provider>\n    </UserContext.Provider>\n  );\n}\n\nfunction useUser() {\n  return useContext(UserContext);\n}\n\nfunction useUserUpdate() {\n  return useContext(UserUpdateContext);\n}\n\nfunction UserInfo() {\n  const user = useUser();\n  if (!user) return <div>사용자 정보가 없습니다.</div>;\n  return <div>{user.username}</div>;\n}\n\nfunction Authenticate() {\n  const setUser = useUserUpdate();\n  const onClick = () => {\n    setUser({ username: \"velopert\" });\n  };\n  return <button onClick={onClick}>사용자 인증</button>;\n}\n\nexport default function App() {\n  return (\n    <UserProvider>\n      <UserInfo />\n      <Authenticate />\n    </UserProvider>\n  );\n}\n```\n\n[CodeSandbox에서 보기](https://codesandbox.io/s/lucid-taussig-lqofo?fontsize=14&hidenavigation=1&theme=dark)\n\n위 코드와 같이 `UserUpdateContext` 를 만들어서 상태를 위한 Context와 상태 업데이트를 위한 Context를 따로 사용하게 된다면 성능적인 부분이 많이 해소가 됩니다. 이제는 버튼을 눌러도 `Authenticate` 컴포넌트는 리렌더링을 하지 않게 됩니다.\n\n\n\nContext를 사용한다면 관심사를 분리하는것도 중요하고, 이렇게 업데이트용과 상태용 Context를 분리하는것도 중요합니다. 만약 전역적으로 관리해야 할 상태가 많아지는 경우에는 성능을 챙기기 위해선 그만큼 다양한 종류의 Context를 위한 코드를 준비해야 합니다. 저는 개인적으로 이는 손이 많이 가기 때문에 좀 번거롭다고 생각합니다. 따라서, 글로벌 상태가 다양해지는 경우는 Context 의 사용은 적합하지 않을 수 있다고 말씀을 드리고 싶습니다.\n\n### constate\n\n![img](https://media.vlpt.us/images/velopert/post/c1dc890e-be55-492c-8c7f-9bf34f852d9c/image.png)\n\n만약, Context를 사용하고 싶은데, 다뤄야하는 상태가 많아진 상황에서 성능도 챙겨가면서 개발도 편하게 하고 싶다면, [constate](https://github.com/diegohaz/constate) 라는 라이브러리를 적극 추천드립니다.\n\n이 라이브러리는 Context를 기반으로 작동하는데요, 우리가 아까 봤던 두번째 예시처럼 상태를 위한 Context와 상태 업데이트를 위한 Context를 따로 만들었던 작업을 하나의 함수로 간편하게 처리 할 수 있게 해줍니다.\n\n이 라이브러리를 사용하면 아까 작성했던 코드를 다음과 같이 구현할 수 있습니다.\n\n```jsx\nimport React, { useState  } from \"react\";\nimport constate from \'constate\';\n\n// Context를 따로 만들지 않고, 관리하고 싶은 상태를 위한 Hook 작성\nfunction useUser() {\n  const [user, setUser] = useState(null);\n  return { user, setUser };\n}\n\n// useUser Hook을 기반으로 종류별로 Context를 만들고, \n// 해당 Context를 사용하는 Provider와 Hook 생성\nconst [UserProvider, useUserValue, useUserUpdate] = constate(\n	useUser,\n  value => value.user,\n  value => value.setUser\n);\n\nfunction UserInfo() {\n  const user = useUserValue();\n  if (!user) return <div>사용자 정보가 없습니다.</div>;\n  return <div>{user.username}</div>;\n}\n\nfunction Authenticate() {\n  const setUser = useUserUpdate();\n  const onClick = () => {\n    setUser({ username: \"velopert\" });\n  };\n  return <button onClick={onClick}>사용자 인증</button>;\n}\n\nexport default function App() {\n  return (\n    <UserProvider>\n      <UserInfo />\n      <Authenticate />\n    </UserProvider>\n  );\n}\n```\n\n[CodeSandbox에서 보기](https://codesandbox.io/s/frosty-sky-e5i9w?file=/src/App.js:0-886)\n\n`constate` 함수에 넣는 selector들을 기반으로 Context들이 자동으로 만들어지고, 해당 Context를 사용하는 Hook도 자동으로 만들어집니다. 이 라이브러리를 사용하면 Context를 분리하는 작업이 엄청 쉬워지겠죠?\n\n상태 관리 측면에서 `useState`, `useReducer` 를 그냥 사용하면 되기 때문에 추가적으로 배울 것도 없답니다. 타입스크립트 지원도 잘 되고, Weekly 다운로드 수도 충분히 높고, 유지 보수도 잘 되고 있는 라이브러리이기 때문에 사용을 적극 추천합니다.\n\n### Recoil\n\nContext 만을 사용하여 글로벌 상태 관리를 하는 것이 어느정도 제한이 있다는 것은 페이스북 개발팀에서도 인지를 하고 있습니다 [[2\\]](https://recoiljs.org/docs/introduction/motivation):\n\n- 상태 업데이트를 하기 위해서는 공통 조상 컴포넌트로 상태를 끌어올려야 하는데, 이 과정에서 너무 큰 트리가 리렌더링 될 수 있습니다.\n- Context를 사용 할 때 Consumer는 다양하게 사용되는데 Context에는 하나의 값만 담을수 있습니다.\n- 위 두가지 방식 모두 상태가 만들어지는 곳과 상태가 사용되는 곳의 코드 분리가 어렵습니다.\n\n[Recoil](https://recoiljs.org/)은 페이스북 개발팀에서 위 문제들을 리액트 스러운 방법으로 개선하기 위하여 만든 상태 관리 라이브러리입니다.\n\n이 라이브러리는 현재 experimental 상태이긴 합니다. 이 라이브러리의 AtomEffect 기능은 아직 개발중이며 나중에 스펙이 바뀔 수 있으니 주의가 필요하지만, 나머지 기능은 많이 안정화가 되어있는 상태이기 때문에 나머지 기능은 프로덕션에서 사용해도 큰 문제가 없습니다. 리디에서도 일부 기능에서 해당 라이브러리를 사용하고 있고, 커뮤니티에서도 프로덕션에서 사용하고 있다는 사람들이 종종 보입니다. 하지만, 공식적으로는 experimental 단계이기 때문에 보수적으로 다가가고자 한다면 조금 더 지켜보는것도 좋습니다.\n\nRecoil을 사용해서 아까 작성했던 기능을 구현한다면 다음과 같이 사용 할 수 있습니다.\n\n```jsx\nimport React from \"react\";\nimport { RecoilRoot, atom, useSetRecoilState, useRecoilValue } from \"recoil\";\n\n// 특정 상태를 고유 key 값과 함께 선언합니다\nconst userState = atom({\n  key: \"userState\",\n  default: null\n});\n\nfunction UserInfo() {\n  // useRecoilValue를 사용하면 원하는 상태 값을 조회 할 수 있습니다.\n  const user = useRecoilValue(userState);\n  if (!user) return <div>사용자 정보가 없습니다.</div>;\n  return <div>{user.username}</div>;\n}\n\nfunction Authenticate() {\n  // useSetRecoilState를 사용하면 원하는 상태 업데이터 함수를 가져올 수 있습니다.\n  const setUser = useSetRecoilState(userState);\n  const onClick = () => {\n    setUser({ username: \"velopert\" });\n  };\n  return <button onClick={onClick}>사용자 인증</button>;\n}\n\nexport default function App() {\n  return (\n    <RecoilRoot>\n      <UserInfo />\n      <Authenticate />\n    </RecoilRoot>\n  );\n}\n```\n\n위 코드에서 나타난 기능들 외에도, 상태에서 특정 값만을 조회하는 `selector` 기능과, 상태와 업데이트를 한꺼번에 가져올 수 있는 `useRecoilState` 라는 기능도 있습니다.\n\n```jsx\nimport { atom, selector, useRecoilValue, useRecoilState } from \'recoil;\'\n\nconst messageState = atom({\n  key: \"messageState\",\n  default: \"\"\n});\n\nconst messageLengthState = selector({\n  key: \"messageLengthState\",\n  get: ({ get }) => get(messageState).length\n});\n\nfunction MessageInput() {\n  // 상태와 업데이터를 한번에 가져오기\n  const [message, setMessage] = useRecoilState(messageState);\n  return <input value={message} onChange={(e) => setMessage(e.target.value)} />;\n}\n\nfunction MessageLength() {\n  // selector를 통하여 상태의 특정 부분만을 조회\n  const length = useRecoilValue(messageLengthState);\n  return <div>Length: {length}</div>;\n}\n```\n\n[CodeSandbox에서 보기](https://codesandbox.io/s/optimistic-hawking-s78u7?file=/src/App.js:559-1100)\n\n### Jotai\n\n만약, Recoil 의 API가 참 마음에 드는데 Experimental인 부분이 걱정이라면, [Jotai](https://github.com/pmndrs/jotai) 를 추천드립니다. Jotai는 일본어 狀態 를 그대로 발음 한 것이라고 합니다. 또 다른 상태 관리 라이브러리중 [Zustand](https://github.com/pmndrs/zustand) 라는것도 있는데요, 이건 독일어로 상태라고 합니다 🤣 만약에 우리나라 사람이 만들면 Sangtae가 되겠네요.\n\n본론으로 넘어와서, Jotai 에서는 Minimalistic API 를 강조합니다. Recoil과 비슷하지만 훨씬 간단합니다. 다운로드 수는 높은 편이 아니지만, [react-spring](https://www.react-spring.io/)을 개발했던 [Poimandres](https://github.com/pmndrs) 의 개발자들이 만들었기 때문에 충분히 신뢰하고 사용 할 수 있다고 생각합니다.\n\nJotai는 다음과 같이 사용 할 수 있습니다.\n\n```jsx\nimport React from \"react\";\nimport { atom, Provider, useAtom } from \"jotai\";\n\n// Jotai에서는 모든걸 \'atom\' 이라고 부릅니다\n\n// null 을 기본 상태로 가지는 atom\nconst userAtom = atom(null);\n// 업데이트 함수만 사용 할 수 있게 해주는 atom\nconst updateUserAtom = atom(null, (get, set, arg) => set(userAtom, arg));\n// 문자열 상태를 지닌 atom\nconst messageAtom = atom(\"\");\n// 문자열의 length 를 조회하는 atom\nconst messageLengthAtom = atom((get) => get(messageAtom).length);\n\nfunction UserInfo() {\n  // 값을 조회 할 때는 useAtom 을 사용하며, 반환 값은 배열입니다\n  const [user] = useAtom(userAtom);\n  if (!user) return <div>사용자 정보가 없습니다.</div>;\n  return <div>{user.username}</div>;\n}\n\nfunction Authenticate() {\n  // 업데이트 함수만 사용하니까, 첫번째 배열 원소는 생략합니다\n  const [, setUser] = useAtom(updateUserAtom);\n  const onClick = () => {\n    setUser({ username: \"velopert\" });\n  };\n  return <button onClick={onClick}>사용자 인증</button>;\n}\n\nfunction MessageInput() {\n  // 상태와 업데이터를 한번에 가져오기\n  const [message, setMessage] = useAtom(messageAtom);\n  return <input value={message} onChange={(e) => setMessage(e.target.value)} />;\n}\n\nfunction MessageLength() {\n  // selector를 통하여 상태의 특정 부분만을 조회\n  const [length] = useAtom(messageLengthAtom);\n  return <div>Length: {length}</div>;\n}\n\nexport default function App() {\n  return (\n    <Provider>\n      <UserInfo />\n      <Authenticate />\n      <div>\n        <MessageInput />\n        <MessageLength />\n      </div>\n    </Provider>\n  );\n}\n```\n\n[CodeSandbox에서 보기](https://codesandbox.io/s/objective-rain-2slph?file=/src/App.js:0-1155)\n\n정말 간단하죠? `Provider`, `atom`, `useAtom` 이 3개로 모든 글로벌 상태 관리를 해버립니다. 이 라이브러리의 공식 홈페이지에 들어가면 꽤 공식 문서가 꽤 놀랍습니다.\n\n![img](https://media.vlpt.us/images/velopert/post/91399826-2602-4995-a950-4d94e2ec95c4/image.png)\n\n정말 이게 전부입니다 😲. 모든 기능이 위 예시로 설명됩니다. 물론 더 다양한 상황에 대한 가이드는 [GitHub Repo](https://github.com/pmndrs/jotai) 에서 확인 할 수 있으니 궁금하다면 읽어보세요.',1,'2021-02-17 22:11:19','http://3.36.125.70/thumbimg/f9c234b3-5d99-4173-a919-4f73271238d6_리덕스1.png'),(267,'React, 그게 뭔데?','easydeveloper3@naver.com','### 안녕하세요!🙋‍♂️\n\n가치있는 코딩 같이하자, 대니입니다.\n\n여러 언어나 라이브러리를 사용하면서 적어도 이게 무엇인지는 알고 써야한다고 생각하기 때문에 **그게 뭔데?** 시리즈에서 이러한 내용들을 다뤄보려고 합니다.\n\n### 이번 주제는?\n\n현 Javascript 생태계에 있어서 빠질 수 없는 가장 인기있고 가장 많이 사용하는\n**React**에 대해 알아보는 시간을 갖도록 하겠습니다.\n\n### React는 인기가 많다!\n\n![img](https://media.vlpt.us/images/skypedanny/post/96d21d5a-2ba4-4cd6-96b9-dc1b20cf7eb4/%E1%84%89%E1%85%B3%E1%84%8F%E1%85%B3%E1%84%85%E1%85%B5%E1%86%AB%E1%84%89%E1%85%A3%E1%86%BA%202021-01-27%20%E1%84%8B%E1%85%A9%E1%84%92%E1%85%AE%209.59.35.png)\n\n수많은 Front-End 개발자 및 Front-End 분야를 공부하는 사람들은 Javascript 라이브러리로 React를 사용합니다. The State Of JS 2020 설문조사에 참여한 80%는 React를 사용해보았고![img](https://media.vlpt.us/images/skypedanny/post/c101a1fb-2216-487f-a6e8-bfb4199f1d66/%E1%84%89%E1%85%B3%E1%84%8F%E1%85%B3%E1%84%85%E1%85%B5%E1%86%AB%E1%84%89%E1%85%A3%E1%86%BA%202021-01-28%20%E1%84%8B%E1%85%A9%E1%84%8C%E1%85%A5%E1%86%AB%2010.02.17.png)\n만족도 또한 매우 높은 것을 알 수 있습니다.\n\n그러나 React를 사용하면서 누군가가 *리액트가 뭐야?* 라고 물어본다면 이에 바로 대답할 수 있는 사람은 많지 않을 것 입니다.\n\n### 1. React의 정의\n\nReact의 정의를 가장 쉽게 알 수 있는 곳은 공식문서입니다. 가장 중요하지만 많은 분들이 놓치시는게 공식문서가 아닐까 싶습니다.\n\n> React는 사용자 인터페이스를 구축하기 위한 선언적이고 효율적이며 유연한 JavaScript 라이브러리입니다. “컴포넌트”라고 불리는 작고 고립된 코드의 파편을 이용하여 복잡한 UI를 구성하도록 돕습니다.\n\nReact 공식문서에 의하면 위와 같이 명시되어 있습니다.\n\n> 컴포넌트 단위로 UI를 구성하는 Javascript 라이브러리\n\n위와 같이 한줄로 요약할 수 있겠네요.\n\n### 2. 어디서 만든건데?\n\nReact는 **Facebook**에서 개발되었고 2013년 5월 JSConf US에서 오픈 소스화되었습니다.\n\nhttps://opensource.facebook.com/projects/#frontend\nFacebook에서는 굉장히 많은 오픈소스 프로젝트들이 있습니다.\nReact, ReactNative, GraphQL 여러분들이 알고 계시는 많은 오픈소스 프로젝트들이 Facebook으로부터 개발 되었습니다. 궁금하시면 위 링크를 통해 들어가셔서 다양한 프로젝트를 구경해보시는 것도 은근 재밌습니다 :)\n\n### 3. 그래서 얜 뭐하는 앤데?\n\nReact의 특징에 대해서 알아보겠습니다.\n많은 분들이 이미 알고 계시고 경험해보셨겠지만 그래도 우리 한번 짚고 넘어가보자구요 ;)\n\n![img](https://media.vlpt.us/images/skypedanny/post/d242b732-a3ee-402a-851a-a319d6e294ad/%E1%84%89%E1%85%B3%E1%84%8F%E1%85%B3%E1%84%85%E1%85%B5%E1%86%AB%E1%84%89%E1%85%A3%E1%86%BA%202021-01-28%20%E1%84%8B%E1%85%A9%E1%84%92%E1%85%AE%201.47.31.png)\n우리는 저 문장 속에서 힌트를 찾을 수 있습니다!\n\n### 3-1. Declarative(선언형)\n\n**어떤 방법으로 해야하는지 나타내는 것(명령형)**과는 달리\n**무엇이 나타나야하는지를 묘사하는 것이 선언형 프로그래밍**입니다.\n\n> *이 컴포넌트가 바뀌어서 어떤식으로 렌더링하고~~ 어떻게 띄워줘야해~~\n> ex) document.createElement*\n\n는 우리 React가 알아서 할게!\n\n> *너희 개발자들은 유저 인터페이스를 빌딩하는 것에 집중해!\n> ex)<></> JSX 문법*\n\n이런 느낌입니다. 이해가 좀 되시나요?\n\n어떠한 결과가 나오기위한 **목표를 명시**하는 **선언형 프로그래밍**이 React의 첫 번째 특징이라고 할 수 있겠습니다.\n\n### 3-2. Efficient(효율적인)\n\nReact는 효율적입니다. 왜 효율적일까요?\n\n\"효율적\"의 사전적 의미는\n**들인 노력에 비하여 얻는 결과가 큰 것** 입니다.\n\n엄청 극단적인 예시로 **Hello라는 페이지**를 구성하는 데에 2000줄의 코드가 필요합니다.\nHTML에서 **Hello페이지**와 똑같은 **Bye페이지**를 구성하려면 똑같이 2000줄의 코드를 작성해야할겁니다.\n\n그러나 React는 앞서 말씀드렸듯 \"컴포넌트 단위로 UI를 구성\"하기 때문에 Bye에 Hello를 import하고\n\n> < Hello />\n\n한줄만 적으면 Hello와 똑같은 페이지를 볼 수 있습니다.\n\n한마디로 컴포넌트 단위로 UI를 구성하게 되면 이를 재사용할 수 있기 때문에 중복이 없이 효율적으로 UI를 구성할 수 있습니다.\n\n### 3-3. State & Props\n\nState - 상태\nProps - 속성\n\n#### App.js\n\n```javascript\nimport React, { useState } from \"react\";\nimport Color from \"./Color\";\n\nfunction App() {\n  const [state, setState] = useState(\"red\");\n\n  return <Color color={state} />;\n}\n\nexport default App;\n```\n\n#### Color.js\n\n```javascript\nimport React, { useState } from \"react\";\n\nfunction Color(props) {\n  return <div>색깔은 {props.color}</div>;\n}\n\nexport default Color;\n```\n\n#### 결과화면\n\n![img](https://media.vlpt.us/images/skypedanny/post/fc0c8d2a-6458-439d-88d9-69e93ee6d199/%E1%84%89%E1%85%B3%E1%84%8F%E1%85%B3%E1%84%85%E1%85%B5%E1%86%AB%E1%84%89%E1%85%A3%E1%86%BA%202021-01-28%20%E1%84%8B%E1%85%A9%E1%84%92%E1%85%AE%203.08.52.png)\n\nState와 Props의 개념은 글로 표현하는 것 보다 코드가 훨씬 이해가 잘될 것 같아서 코드를 추가하였습니다.\n\n아마 state와 props를 동시에 이해하기에 가장 적합한 코드가 아닐까 싶습니다.\n\n#### 설명\n\n1. App.js에서 state를 red로 초기화하고 이를 Color 컴포넌트에 color라는 이름의 props를 통해 넘겨줍니다.\n2. Color 컴포넌트에서 파라미터를 통해 props를 받고 props.color를 통해 접근하여 red를 표시합니다.\n\n이해가 좀 되셨나요?\n\n이처럼 React는 State를 통해 컴포넌트의 상태값을 관리하고 Props를 통해 컴포넌트의 속성을 전달함으로써 체계적으로 UI를 구성할 수 있습니다.\n\n### 3-4. Virtual DOM\n\n앞서 설명드린 것들을 어떻게 화면에 띄우는 걸까요?\n\nVirtual DOM, 이 또한 많이 들어보셨지만 막상 설명하기엔 어려우시죠?\nVirtual DOM을 번역하면 가상의 돔 입니다.\n그렇다면 돔이 대체 뭐냐?\n\n#### 3-4-1. DOM이 뭐지?\n\n> The Document Object Model (DOM)\n> ➡ 문서 객체 모델\n\n웹 페이지는 일종의 문서인데, 웹 브라우저를 통해 문서의 내용이 해석되어 화면에 나타나는 것입니다. 그리고 DOM은 동일한 문서를 표현하고, 저장하고, 조작하는 방법을 제공합니다. Javascript와 같은 스크립팅 언어를 통해 DOM을 수정할 수 있는 것이죠.\n\n#### 3-4-2. 브라우저 동작 순서\n\n![img](https://media.vlpt.us/images/skypedanny/post/79bb45b3-aab9-4d97-8100-a3118466e33e/image.png)\n\\1. HTML을 전달받으면 렌더엔진이 이를 파싱하고 DOM Tree를 생성한다. (DOM Tree 생성) 동시에 외부 CSS파일과 각 Element의 inline style을 파싱한다.\n\\2. 노드의 attach 메소드가 스타일 정보를 처리해 객체형태로 반환한다. (Attachment)\n\\3. 스타일 정보에 따라 Render Tree를 생성한다. (Render Tree 생성)\n\\4. 어디에 나타나야할지 위치가 정해진다. (Layout)\n\\5. 렌더링 된 요소에 색을 입힌다. (Painting)\n\\6. 화면에 정보가 나타단다.\n\n#### 3-4-3. Virtual DOM이 왜 필요하냐?\n\n브라우저 동작 순서대로 화면에 보여진 이후에 DOM에 변화가 생기면 2번 과정부터 다시 반복합니다. 최근엔 복잡한 SPA(Single Page Application)들이 많이 생겨남에 따라서 DOM에 변화가 자주 일어나고 이를 위해 브라우저가 많은 연산을 해야합니다.\n\n이러한 비효율적인 과정들을 해결해줄 수 있는 것이 **Virtual DOM**입니다.\n\n**Virtual DOM 동작 순서**\n\\1. 사용자의 뷰에 변화가 생긴다.\n\\2. Virtual DOM에 모든 변화를 적용시킨다.\n\\3. 최종적인 결과물을 실제DOM에 전달한다.\n\nVirtual DOM은 렌더링이 되지 않기 때문에 연산 비용이 적고, 연산이 끝난 후 모든 변화를 묶어서 최종적으로 1번만 실제 DOM에 전달합니다.\n\n### 4. 아하 그래서 React란 (총정리)\n\n지금까지 React가 무엇인지에 대해 알아보았습니다. 총정리를 하자면\n\n#### 총정리\n\n아 React는 페이스북에서 만든 **컴포넌트 단위**로 **UI를 구성**하는 **Javascript 라이브러리**인데\n\nUI를 구성하고 결과를 보여줘야하기 때문에 **선언적**이고\n컴포넌트 단위로 UI를 구성하여 재사용성을 높이고 **효율적**이며\n**State**와 **Props**로 컴포넌트의 상태와 속성을 관리하고\n이들을 **Virtual DOM**을 사용하여 효율적으로 사용자에게 보여주는구나!\n\n### 마치며\n\n초보자들도 이해하기 쉽도록 최대한 쉽고 기본적인 내용들로 구성해보았습니다.\n\nReact에 대해 이해가 좀 되셨나요?\n\nReact에 대해 알아보았으니 다음엔 그럼 왜 다른 라이브러리가 아니고 React를 사용하는지에 대해 **왜?** 시리즈에서 다뤄보겠습니다.\n\n읽어주셔서 감사드리며 잘못된 내용이 있다면 댓글로 알려주시면 빠르게 수정하도록 하겠습니다.\n\n이상 가치있는 코딩 같이하자, 대니였습니다.\n**감사합니다!**\n\n#### 참고하였습니다\n\n[State Of JS 2020](https://2020.stateofjs.com/ko-KR/technologies/front-end-frameworks/)\n[React 공식문서](https://ko.reactjs.org/tutorial/tutorial.html#what-is-react)\n[선언형 프로그래밍](https://ko.wikipedia.org/wiki/선언형_프로그래밍)\n[DOM](https://developer.mozilla.org/ko/docs/Web/API/Document_Object_Model/소개)\n[Virtual DOM1](https://velopert.com/3236)\n[Virtual DOM2](https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/)',3,'2021-02-17 22:17:34','http://3.36.125.70/thumbimg/19a22f3d-45c7-49f5-8db4-b1325c782dfe_리액트 그게먼데.png'),(268,'페어와 함께하는 스터디','easydeveloper3@naver.com','안녕하세요! 코봉이입니다! 🥰\n\n여러분은 \'스터디\'하면 무슨 이미지가 떠오르시나요? 전 대략 아래와 같은\n장면이 생각이 나는데요??ㅎㅎ \n 이와 다르게 저희는 단 둘이서 스터디를 진행하고 있습니다. 두 명이 운영하는 스터디는 어떻게 생겨났고 어떤 방식으로 진행하는지 간단히 소개하고, 그동안의 회고를 작성해보려고 합니다!\n\n![img](https://media.vlpt.us/images/coveong/post/f3393acb-bbd9-4dbf-adf7-9770d82aa873/people-2557396_1920.jpg)\n\n\n\n# 👯‍♀️ 팀원 소개\n\nW : SpringBoot가 배우고 싶은, Kotlin을 좋아하는 **안드로이드 개발자**\n\nA : Kotlin을 배우고 싶은, Java를 좋아하는 **백엔드 개발자**\n\n\n\n# 🍻 스터디 소개\n\n## 만들게 된 계기\n\n평소에 각자 배우고 싶었던 분야를 이야기하다가 서로의 기술 스택이 각자 배우고 싶어하는 분야와 일치한다는 사실을 알게 되었고, 서로 가르쳐주고 배우며 윈윈할 수 있는 스터디를 만들게 되었습니다. 거창하게 스터디라고 말하긴 했지만 사실 스터디보다는 각자 사용하는 기술에 대한 지식 교환이라고 생각해도 전혀 무방할정도에요 🤣\n\n## 진행 방식\n\n스터디는 매 주 하루를 정해서 진행하고 진행 방식은 다음과 같습니다.\n\n1. 당일에 스터디 가능한 시간을 정한다. (보통 10시)\n2. 가능한 시간에 맞춰 행아웃을 연다.\n3. 약 20분간 근황(겸 잡담) 토크를 한다. (Ice🧊 breaking)\n4. 서로 준비한 자료로 숙제 검사 & 발표 & 실습을 진행한다. (인당 1시간정도!)\n5. 다음날에 복습 자료를 업로드하고 차주 수업시간 전까지 숙제를 완료한다.\n\n### Kotlin\n\n![img](https://media.vlpt.us/images/coveong/post/dd33faa4-1ec0-4008-9ce4-afa0e11fb6be/image.png)\n\n안드로이드 개발자 W는 A에게 **Kotlin 기본 문법 설명**과 **안드로이드 개발 실무에서 사용하는 방법** 등을 알려주었어요. 프로젝트를 직접 해보면서 Kotlin을 익히면 더 효과적으로 익힐 수 있다고 생각했기 때문에 Kotlin을 사용하는 안드로이드 프로젝트를 진행했습니다!\n\n> [회고록](https://velog.io/@coveong/코봉-계좌-스캐너-개발-회고록)도 있어요!\n\n### 스프링부트\n\n![img](https://media.vlpt.us/images/coveong/post/b79ed3dc-e05a-44b3-9b69-397dd8c0d998/image.png)\n\n백엔드 개발자 A는 W에게 SpringBoot를 알려주었어요. W는 Java와 Spring에 대한 기본 지식이 있었기 때문에 **기초**를 간단히 다지고, 예제 코드를 직접 따라 치면서 **실무에서 자주 사용하는 기술**을 익히는 방식으로 진행했습니다.\n\n\n\n# 💬 회고\n\n스터디원이 두 명이였기에 좋았던 점과 아쉬웠던 점을 위주로 기록해보려고해요!\n\n## 좋았던 점\n\n- 일정 맞추기가 편하고 의사소통이 빠르게 이루어진다.\n- 한 명만 이해하면 되기 때문에 맞춤형으로 가르쳐줄 수 있고 진도를 빠르게 나갈 수 있다.\n- 누군가를 방해한다는 걱정 없이 질의응답을 바로바로 할 수 있다.\n  - 다인 스터디의 단점 중 하나가 혼자 이해가 되지 않는 부분이 있더라도 다른 사람에게 방해될까봐 자세히 질문하거나 다시 복습할 시간을 요청하기가 어려운데 이에 비해 편하다는 장점이 있다.\n- 서로에게 맞춘 자료를 보기 때문에 더 효과적으로 지식을 얻을 수 있다.\n  - 자료를 만들 때에도 한 번 더 깊게 공부가 가능하다.\n\n## 아쉬웠던 점\n\n- 서로에게만 양해를 구하면 되기 때문에 부담감이 상대적으로 적어 조금 헤이해질 수 있다.\n- 궁금한 점이 생기면 대답해줄 사람이 한 명이기 때문에 답장을 기다려야 하고 상대방이 모르는 경우도 있다.\n\n## 차후 발전 계획\n\n- 숙제 난이도를 더 높여 개인적으로 공부할 수 있는 시간을 가질 수 있게 한다.\n- 각자 배우고 있는 언어를 활용하여 토이 프로젝트를 진행한다.\n  - 코드리뷰, 페어 프로그래밍을 적극 활용한다.\n\n\n\n# 🤪 맺으며\n\n스터디는 반드시 여러명이서 해야한다는 고정관념(저한테만 고정관념일 수도 .. ㅎㅎ)이 있는데, 두 명만 하는 것도 나름대로의 장점이 있고 저희는 굉장히 만족하고 있습니다. 여러분도 한 번쯤 경험해보시면 좋을 것 같아요!\n\n그렇다고 무조건 스터디 인원이 적을수록 좋다는 것은 절대절대 아니에요. 많은 사람들끼리 있으면 유익한 정보를 더 많이 얻을 수 있고, 다방면에서 도움을 더 많이 얻을 수 있기 때문에 두 명 끼리 하는 스터디도, 여러명이서 하는 스터디도 각자의 매력이 있다고 생각합니다.\n\n각각 스터디의 장단점을 비교해보고, 무슨 장점에 중점을 맞출건지 생각해서 스터디를 선택하거나 만드는 것이 가장 좋다고 생각합니다! :)\n\n뿅',1,'2021-02-17 22:22:08','http://3.36.125.70/thumbimg/8396508c-f012-4658-b1b3-de6b563f3177_페어스터디.jpg'),(270,'MATLAB 뿌셔뿌셔 01. 매트랩 간단한 사용법','easydeveloper2@naver.com','> MATLAB = MTRIX Laboratory 의 약자\n\n즉 행렬을 이용해서 다양한 수식을 작성하고 연산하기 위해 만들어진 소프트웨어!\n\n그 외 에 데이터 시각화(각 종 2D /3D 그래프 작성), GUI 디자인(유저 인터페이스 디자인) 등 도 가능하다.\n\n✔️ **매트랩 인터페이스와 명칭**\n\n커맨드 윈도우 : 메인 윈도우로, 변수들을 입력하고 스크립트를 실행시킨다.\n에디터 윈도우 : 스크립트와 함수파일을 만들고 디버깅할 수 있다.\n\n✔️ **자주 쓰이는 매트랩 커맨드 명령어 이해하기**\n\nhelp\ndoc\n\nclc : 명령창 초기화, 작업공간의 변수들은 그대로 남아 있음.\nclear: 명령창, 작업공간 모두 초기화.\nwhos: 지금까지 생성된 변수, 계산에 대한 정보 출력.\n\n✔️ **명령창 레이아웃 조작**\n\nformat loose // 행간 간격이 넓음\nformat compact // 행간 간격이 좁음\nformat rat\nformat short\nformat long\nformat bank\n\n✔️ **자주 사용하게 될 간단한 수학연산과 기능들**\n\n- 일반적으로 변수를 만들어 주고 연산을 시행한다.\n- 명령어 뒤에 ;을 붙이면 결과값을 프린트하지않고 내부에서만 생성/계산 된다.\n\n1. 행렬 만들기\n\n- [] 대괄호 안에 원소들을 나열해서 생성할 수 도 있고, 행벡터의 경우 : 으로 바로 생성할 수 있다.\n\n![img](https://media.vlpt.us/images/sunny_han/post/2f0f932d-da6c-4ac1-a254-da8812728116/Screen%20Shot%202020-09-15%20at%204.57.21%20PM.png)\n\n1. 간단한 2차원 그래프 그리기\n\n- x좌표와 y좌표의 값들을 하나씩 나타내는 것이므로, 하나의 함수와 적어도 한좌표의 범위가 주어져야한다 !\n\n![img](https://media.vlpt.us/images/sunny_han/post/4b852cb6-9691-4d0e-a364-482ae39b60db/Screen%20Shot%202020-09-15%20at%205.00.54%20PM.png)\n\n![img](https://media.vlpt.us/images/sunny_han/post/4adc5d5d-42f3-4f07-b737-19fb095bc235/Screen%20Shot%202020-09-15%20at%205.43.50%20PM.png)\n\n1. 복소수 표현하기\n\n![img](https://media.vlpt.us/images/sunny_han/post/67815d6a-3db0-4e14-811a-06b8ba56a1ab/Screen%20Shot%202020-09-15%20at%205.03.58%20PM.png)\n\n1. 랜덤 노이즈(값) 생성하기\n\n   rand(1,2) : 1 by 2의 0과 1사이의 랜덤한 값의 행렬을 생성\n   rand(5) : 5 by 5 의 0과 1사이의 랜덤한 값의 행렬을 생성\n\n   *정수로 이루어진 랜덤 행렬을 만들때는 rnad함수에 10을 곱한뒤 floor를 시켜준다.\n   *행렬을 plot시키면, 열벡터 별로 그래프를 그린다.\n\n   ![img](https://media.vlpt.us/images/sunny_han/post/1c2b69cb-8e67-4f56-a4c3-cf3569f8fbdb/Screen%20Shot%202020-09-15%20at%205.08.12%20PM.png)\n\n1. 역행렬 만들기\n\n   inv(A)\n\n   *간단한 확인은 원행렬과 행렬곱을 시행했을 때 I가 나오는지 확인해 볼 수 있다.\n   ![img](https://media.vlpt.us/images/sunny_han/post/ad0dc12d-dd3b-470a-ae80-7119ddc11c4a/Screen%20Shot%202020-09-15%20at%205.12.54%20PM.png)\n\n2. ',3,'2021-02-17 23:24:42','http://3.36.125.70/thumbimg/1571f655-fef5-4574-86b7-2b844ffdadbf_matlab.jpg'),(272,'[Java] Java 접근제어자','easydeveloper2@naver.com','## 접근제어자\n\n접근제어자는 멤버 또는 클래스에 붙어서 해당 멤버 또는 클래스에 대한 접근을 제어하는 역할을 한다.\n\nJava에서는 다음 4가지의 접근제어자를 제공한다.\n`1. public 2. protected 3. default 4. private`\n\n**클래스**의 접근제어자로는 **public, default**를 지원하고,\n**클래스 멤버**의 접근제어자로는 **public, protected, default, private**를 지원한다.\n\n### 클래스 접근제한자\n\n#### public\n\n프로그램 어디서든 접근 가능하다.\n패키지가 달라도 클래스를 import하여 사용할 수 있다.\n\n#### default\n\n같은 패키지에서만 접근 가능하다.\n아무 접근제어자도 입력하지 않았을때 기본적으로 적용되는 접근 제어자이다.\n\n### 클래스 멤버 접근제한자\n\n#### public\n\n프로그램 어디에서나 접근 가능하다.\n![img](https://media.vlpt.us/images/damiano1027/post/905cd78a-d787-41f6-9004-fdfe207a1600/image.png)\n출처: http://tcpschool.com/java/java_modifier_accessModifier\n\n#### protected\n\n같은 패키지 또는 자식 클래스에서 접근 가능하다.\n![img](https://media.vlpt.us/images/damiano1027/post/267dbb3a-f07e-4ab6-b845-7aa7e1a57021/image.png)\n출처: http://tcpschool.com/java/java_modifier_accessModifier\n\n#### default\n\n같은 패키지에서만 접근 가능하다.\n아무 접근제어자도 입력하지 않았을때 기본적으로 적용되는 접근 제어자이다.\n![img](https://media.vlpt.us/images/damiano1027/post/021c5308-d2e4-4236-b517-80fa84e7b9a0/image.png)\n출처: http://tcpschool.com/java/java_modifier_accessModifier\n\n#### private\n\n해당 클래스 내부에서만 접근 가능하다.\n![img](https://media.vlpt.us/images/damiano1027/post/831e89c0-1890-4d35-9b53-9ae3ff5c71e3/image.png)',0,'2021-02-17 23:37:25','http://3.36.125.70/thumbimg/fb9e6135-1815-4787-81fd-7c3d46b5fcb7_java.jpg'),(273,'[Java] this 키워드','easydeveloper2@naver.com','### Java의 this 키워드\n\nJava의 this 키워드는 클래스가 인스턴스화 되었을때의 자기자신의 메모리 주소를 담고있는 키워드이다.\n\n객체 자기자신의 메모리 주소를 담고있으므로 도트연산자(.)를 이용해 접근하여 멤버 변수와 메소드를 사용할 수 있다.\n\n#### 예시\n\n```java\npublic class User {\n    private Integer id;\n    protected String account;\n    public String password;\n\n    public void printId() {\n        System.out.println(this.id);\n    }\n    \n    public void printAll() {\n        this.printId();\n        System.out.println(this.account);\n        System.out.println(this.password);\n    }\n}\n```\n\n위 코드를 보면 this를 통해 멤버변수나 메소드에 접근하여 사용하는 것을 확인할 수 있다.\n\n### this()\n\n클래스 내부에서 this()를 호출하면 **생성자**를 호출한다.\n물론 매개변수가 있는 생성자라면 그에 맞게 인자를 넣어주어 호출하면 된다.\n\n#### 예시\n\n```java\npublic class User {\n    private Integer id;\n    protected String account;\n    public String password;\n\n    public User(Integer id, String account, String password) {\n        this.id = id;\n        this.account = account;\n        this.password = password;\n    }\n\n    public User(Integer id) {\n        this(id, \"a\", \"b\");\n    }\n}\n```\n\n위 코드를 보면 매개변수가 하나인 생성자에서 매개변수가 3개인 생성자를 호출하고 있는것을 알수있다.\n\nthis()를 통해 생성자를 호출할때는 다음의 2가지 제약이 있다.\n\\1. 생성자에서만 호출가능하다.\n\\2. 제일 첫 문장에서 호출해야한다.\n\\3. 생성자 자기 자신을 호출할 수 없다.(재귀호출이 불가능하다.)',0,'2021-02-17 23:39:06','http://3.36.125.70/thumbimg/d9676525-8c7a-4a1b-9e37-fbe6a759d70a_java.jpg'),(275,'[Java] 강한 결합과 약한 결합','easydeveloper2@naver.com','#### 들어가기에 앞서\n\n이번 게시물에서는 객체 간의 **강한 결합**과 **약한 결합**에 대해 알아보고, 이것이 **유지보수성**으로 어떻게 직결되는가를 알아보기로 하자.\n\n### 강한 결합\n\n객체의 의존 관계에서 **강한 결합**이란, 어떠한 객체가 다른 객체에 강한 의존성을 가지고 있음을 뜻한다.\n\n음..? 이게 무슨소리지?\n\n백문이 불여일견! 예시를 통해 알아보도록 하자.\n\n사람이 **치킨**을 먹는 모습을 클래스로 나타내면 다음과 같다.\n(~~갑자기 치킨먹고싶네~~)\n<Person.java>\n\n```java\npublic class Person {\n    private Chicken chicken;\n    \n    public Person() {\n        this.chicken = new Chicken();\n    }\n\n    public void startEat() {\n        chicken.eat();\n    }\n}\n\npublic class Chicken {\n    public void eat() {\n        System.out.println(\"치킨을 먹습니다.\");\n    }\n}\n```\n\nPerson 클래스의 멤버 변수 타입으로 Chicken 클래스가 존재하는 것을 확인할 수 있다.\n언뜻보면 문제 없는 코드같지만, 치명적인 단점이 있다.\n왜냐하면\n\n- 1. Chicken 클래스가 없으면 Person 클래스를 정의할 수 없게 되며\n- 1. Chicken 클래스를 다른 종류의 음식 클래스로 바꾸게 되면 Person 클래스의 코드 대부분이 변경되기 때문이다.\n\n즉, **Person 클래스가 Chicken 클래스에 의존하게 된다.**\n따라서 Person 클래스가 Chicken 클래스에 **의존성이 존재**한다고 하는 것이다.\n\n그렇다면 단점 2의 예시를 살펴보자.\nPerson 클래스 안의 Chicken 클래스를 Pizza 클래스로 변경한다고 하면 코드의 변경은 다음과 같을 것이다.\n![img](https://media.vlpt.us/images/damiano1027/post/f4f59f44-7f59-4df3-ae74-4b3bf1d288cf/image.png)\n\n위 변화를 보면, 멤버 변수 타입(클래스) 하나만 바꿨을 뿐인데 Person 클래스에 있는 대다수의 코드가 변경된다.\n\n그렇기 때문에 강한 결합(강한 의존성) 이라고 하는 것이며,\n이는 유지보수 측면에서 굉장히 좋지 않은 케이스라고 할 수 있다.\n\n### 약한 결합\n\n그렇다면 객체 간의 강한 결합을 약화시켜 **약한 결합**을 이룰 수 있게 하는 방법은 없을까?\n\n해결책은 **인터페이스(Interface)**에 있다.\n다음을 보자.\n\n<Food.java>\n\n```java\npublic interface Food {\n    void eat();\n}\n```\n\n<Chicken.java>\n\n```java\npublic class Chicken implements Food {\n    @Override\n    public void eat() {\n        System.out.println(\"치킨을 먹습니다.\");\n    }\n}\n```\n\n<Pizza.java>\n\n```java\npublic class Pizza implements Food {\n    @Override\n    public void eat() {\n        System.out.println(\"피자를 먹습니다.\");\n    }\n}\n```\n\n<Person.java>\n\n```java\npublic class Person {\n    private Food food;\n\n    public Person(Food food) {\n        this.food = food;\n    }\n\n    public void startEat() {\n        food.eat();\n    }\n}\n```\n\n위와 같이 Food 인터페이스를 만들어 eat() 추상 메소드를 선언하여 Chicken 클래스와 Pizza 클래스에서 eat()를 구현하게 하면,\nChicken 오브젝트와 Pizza 오브젝트는 모두 Food 타입에 대입될 수 있으므로 Person 클래스에서 멤버변수 타입을 Food로 할 수 있게 된다.\n\n이는 **Person 클래스 내부적으로 코드의 변경이 일어날 필요 없이, 생성자를 통해 객체를 받아 멤버변수에 대입하기만 하면 오브젝트를 변경 가능**하게 해준다.\n즉, 강한 결합에서 벗어나 약한 결합을 이루게 해준다.\n\n이는 유지보수를 짱짱맨으로 만들어주는 지름길이다.\n\n### 정리\n\n- 객체 간 강한 결합을 이루게 되면 멤버 변수에 대한 오브젝트 변경시 코드의 변경이 많이 일어나 유지보수에 좋지 않다.\n- 인터페이스를 통해 약한 결합을 이루게 하여 유지보수를 향상시킨다.\n\nJava에서 객체 간 강한 결합과 약한 결합에 대해 알아보았다. 이는 Java뿐만 아니라 오브젝트를 지원하는 프로그래밍 언어라면 반드시 알아야 할 내용인 것 같다.\n또한 이 개념은 Java 프레임워크인 Spring에서의 DI(의존성 주입), IoC(제어의 역전) 개념과 직결되는 내용이니, 확실히 짚고 넘어가는 것이 좋을 것 같다.',0,'2021-02-17 23:41:18','http://3.36.125.70/thumbimg/9162de37-29d1-4b1f-9433-3f3a3bc57d4e_java.jpg'),(276,'Django 용어 정리','easydeveloper1@naver.com','# 웹 프레임워크란?\n\n프레임 워크는 웹서비스를 만드는데 필요한 뼈대라고 할 수 있습니다 웹서비스에 필요한 전반적인 도구들이 있어 따로 만들지 않고 가져다가 사용하면 되는 것입니다. 그렇기에 프레임워크를 사용하면 웹서비스를 보다 쉽게 만들 수 있습니다.\n\n# MVC/MVT\n\nMVC는 일반적인 디자인 패턴입니다. 장고는 MVT 디자인 패턴을 사용합니다.\n\nModel / Model\n\n데이터베이스와 밀접하게 연관되어 이부분에서 작성한 것이 데이터베이스에 저장되게 됩니다\n\nView / Template\nhtml파일을 통해 사용자들에게 보여줍니다.\n\nCotrol / View\n중간에서 여러가지 로직을 처리합니다. 모델에게 데이터를 CRUD를 하고, 템플릿에게 데이터를 넘겨줍니다.\n\n# django\n\n### project\n\n서비스 자체를 말합니다. 프로젝트를 만들면 기본 폴더 및 파일이 생성됩니다 예를 들어 네이버 자체를 프로젝트라고 생각하시면 됩니다.\n\n### app\n\n웹 서비스에서 부가되는 기능입니다. 예를 들어 네이버가 프로젝트면 네이버 블로그, 게시판 등이 app이 되는 것입니다.',1,'2020-11-08 20:59:59','http://3.36.125.70/thumbimg/fed781d9-4948-4826-9628-dde1145e46cc_장고.png'),(277,'Django API로 마켓컬리 데이터 만들기 실습','easydeveloper1@naver.com','마켓컬리 클론 프로젝트를 하고 있는데, 일단 메인 카테고리부터 디비에 저장하기로 했다.\n\ndjango models.py\n\n```python\nfrom django.db import models\n\nclass MainCategory(models.Model):\n    name            = models.CharField(max_length = 50)\n    icon_black_url  = models.CharField(max_length = 2000)\n    icon_active_url = models.CharField(max_length = 2000)\n\n    class Meta : \n        db_table : \'main_categories\'\n\n\nclass SubCategory(models.Model):\n    maincategory = models.ForeignKey(\'MainCategory\', on_delete = models.CASCADE, related_name=\'subcategory\')\n    name            = models.CharField(max_length = 50)\n    thumbnail_url   = models.CharField(max_length = 2000, blank = True, null = True)\n\n    class Meta :\n        db_table : \'sub_categories\'\n```\n\n모델링\n\n![img](https://media.vlpt.us/images/anrun/post/e58d26be-6821-4a99-9e97-9aa704bad98d/image.png)\n\nmodels.py를 작성하고\n\n```python\npython manage.py makemigrations\npython manage.py migrate\n```\n\n마이그레이션을 하면 테이블이 생성된다\n\n<mysql 명령어>\nshow databases;\n데이터베이스 목록을 보여준다\n\nuse 데이터베이스 명;\n해당 데이터베이스에 진입한다. 이 명령어로 도출되는건 아무것도 없다.\n\nshow tables;\n위에서 선택한 데이터베이스의 테이블 목록을 보여준다\n테이블명은 \'장고에서 선언한 앱 이름_클래스 명\' 으로 생성된다.\n\nselect * from 테이블 명;\n표 형식으로 테이블을 보여준다.\n\nexplain categories_maincategory;\n테이블 각 column의 형식, 특징을 보여준다.\n\n이제 파이썬 쉘에서 직접 데이터베이스에 값을 입력할 수 있다.\n\n```python\npython manage.py shell  파이썬 쉘 오픈\nfrom categories.models import *\nMainCategory.objects.all()\n> <QuerySet []>\nMainCategory.objects.create(name = \'채소\',icon_black_url = \'naver.com\', icon_active_url=\'daum.net\')\n> <MainCategory: MainCategory object (1)>\n```\n\n완성한 api\n![img](https://media.vlpt.us/images/anrun/post/69d45fc4-05ab-4aec-ac8b-b67f74ad83c3/%E1%84%89%E1%85%B3%E1%84%8F%E1%85%B3%E1%84%85%E1%85%B5%E1%86%AB%E1%84%89%E1%85%A3%E1%86%BA%202020-03-01%20%E1%84%8B%E1%85%A9%E1%84%92%E1%85%AE%2011.04.23.png)',8,'2020-11-15 11:11:11','http://3.36.125.70/thumbimg/ae3476e3-572b-4d42-8f44-2065fa691b01_django api.png'),(278,'[Java] Array 와 List','easydeveloper2@naver.com','> \n\n면접을 준비하면서 array 와 list의 차이에 대해 묻는 질문을 많이 보았다. 어느정도 알고 있기는 하지만, 이번 글을 계기로 확실히 정리하면서 누가 나에게 `array와 list의 차이가 뭐야?`하고 묻는다면 망설임 없이 대답할 수 있도록 할 것이다.\n\n## Array를 왜 사용할까 ?\n\n앞의 글에서, 변수는 **한개의 데이터만 저장** 할 수 있다고 했다. 따라서 저장할 데이터의 수가 많아진다면, 그만큼 많은 변수가 필요하다.\n예를 들어 학생 50명의 성적을 저장하고 평균값을 구한다고 해보자. 그렇다면 먼저 학생 50명의 점수를 저장하기 위해 변수를 50개 선언하고, 평점을 구하기 위해 변수들을 모두 더해야 한다.\n\n위와 같은 방법은 매우 비효율적이고 지루하다. `같은 타입의 많은 양의 데이터`를 다루는 프로그램에서는 좀 더 효율적인 방법이 필요한데 , 그게 바로 `배열`이다.\n즉, 데이터가 많아지면 그룹 관리의 필요성이 생기고, 이럴 때 프로그래밍에서 사용하는 것이 배열이라고 할 수 있다.\n\n## Array\n\n- 여러 데이터를 하나의 이름으로 **그룹핑 해서 관리**하기 위한 자료구조\n- 하나의 변수에 여러 정보를 다음 수 있음\n- 같은 타입의 데이터를 연속된 공간에 나열시키고, 각 데이터에 `인덱스`를 부여해 놓은 자료구조.\n- 논리적 저장순서와 물리적 저장순서가 일치한다 => index를 이용해 해당 원소에 접근할 수 있다.\n- 인덱스를 이용해 데이터를 가져오려면 데이터에 대한 인덱스 값이 고정되어야 한다. 즉 , 삭제된 엘리먼트의 공간이 그대로 남기 때문에 `메모리가 낭비될 수 있다`\n- 정의와 동시에 길이를 지정하며, `길이를 바꿀 수 없다.`\n\n> array에서의 인덱스 : 값에 대한 `유일무이한 식별자.` (주민번호 같은 것).\n> 이걸 활용해서 데이터 조회를 빠르게 할 수 있다.\n>\n> ------\n>\n> List에서의 인덱스 : `몇번째 데이터인가?` 정도의 의미.\n\n```java\n// array 정의\nint[] arr = new int[4];\n\n// array에 값 저장\narr[0] = 10;\narr[1] = 20;\narr[2] = 30;\n\n// array의 길이 확인\nSystem.out.println(arr.length); // 출력결과 : 4\n```\n\n- 처음 정의할 때 크기를 4로 지정하였으므로, 3개의 값이 설정되었어도 결과는 4\n- 배열의 크기를 생성할 때 지정해야 하거나, 배열의 크기를 변경할 수 없는 것, 그리고 배열에서 설정된 엘리먼트의 개수를 알아낼 수 없다.\n- 이런 이유에서 자바에서는 ArrayList 나 LinkedList와 같은 `List`를 사용한다.\n\n```null\n배열은 인덱스에 따라서 값을 유지. 엘리먼트가 삭제되어도 빈자리(null)이 남게 되어 불필요한 메모리를 차지함.  \n삭제한 데이터를 뒤에 위치한 엘리먼트로 바꾸면, 데이터가 순서에 따라서 빈틈없이 위치하게 됨\n==> List\n```\n\n> **[참고]**\n> 가변 배열과 같이 길이가 변경 가능한 배열의 경우,\n> \\1. 기존의 배열은 그대로 두고\n> \\2. 새로운 길이로 지정된 배열을 따로 할당하고 (메모리가 있는지 탐색 필요하다.)\n> \\3. 데이터의 복사를 진행하고,\n> \\4. 기존의 배열을 삭제한다.\n> => 총 3번의 작업과 메모리 탐색이 필요하기 때문에 `리소스의 낭비가 크다`\n\n## List\n\n- 배열이 가지고 있는 `인덱스`라는 장점을 버리고, 대신 `빈틈없는 데이터의 적재`라는 장점을 취한 자료구조\n  (리스트 역시 인덱스를 가지고는 있지만, 리스트에서의 인덱스는 `몇번째 데이터인가` 정도의 의미!)\n- 리스트의 핵심은 **엘리먼트들 간의 순서**\n- 빈 엘리먼트는 허용하지 않는다.\n- List는 컬렉션 프레임워크의 인터페이스 중 하나이다. 컬렉션 프레임워크에 대한 설명은 아래를 참고하자.\n- Java에서는 `ArrayList`,`LinkedList` 의 2가지 형태를 지원한다.\n\n> **[참고2]**\n>\n> ### 컬렉션 프레임워크\n>\n> Java에서는 배열의 문제점을 해결하고, 널리 알려진 자료구조를 바탕으로 객체들을 효율적으로 추가/삭제/검색 할 수 있도로고 `java.util`패키지에 컬렉션과 관련된 인터페이스와 클래스들을 포함시켜 놓았다. 이를 `컬렉션 프레임워크`라고 부른다.\n> 몇 가지 인터페이스를 통해서 다양한 컬렉션 클래스를 이용할 수 있도록 하는데, 주요 인터페이스로는 `List`, `Set`, `Map` 이 있다.\n\n#### ArrayList와 LinkedList\n\n```\n1. ArrayList\n```\n\n- ArrayList에 객체를 추가하면 객체가 인덱스로 관리됨. (일반 배열과 유사)\n\n- 저장 용량을 초과한 객체들이 들어오면, 자동으로 저장 용량이 늘어난다.\n\n- 객체를 추가하면 인덱스 0부터 차례대로 저장되고, 특정 인덱스의 객체를 제거하면 바로 뒤 인덱스부터 마지막 인덱스까지 모두 앞으로 1씩 당겨진다.\n\n- **빈번한 객체의 삽입/삭제가 일어나는 곳에서는 ArrayList를 사용하는 것이 바람직하지 않다.**( 이때는 LinkedList를 사용하는 것이 좋다.)\n\n- 인덱스 검색\n\n  이나,\n\n   \n\n  맨 마지막에 객체를 추가\n\n  하는 경우에는 좋은 성능을 발휘한다.\n\n  > 고정된 객체들로 구성된 List의 생성 : `Arrays.asList` 를 이용하자.\n\n```java\npackage study.test;\n\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class ListExample {\n	public static void main(String[] args) {\n		List<String> list = Arrays.asList(\"박세진\",\"박세연\");\n		for (String name : list) {\n			System.out.println(name);\n		}\n	}\n}\n2. LinkedList\n```\n\n- ArrayList와 사용 방법은 똑같지만, 내부 구조는 완전 다르다.\n\n  > - ArrayList : 내부 배열에 객체를 저장해서 인덱스로 관리\n  > - LinkedList : 인접 참조를 링크해서 `체인처럼 관리한다.`\n  >   -> 특정 인덱스의 객체를 삭제/ 삽입하면 앞뒤 링크만 변경되고 나머지 링크는 변경되지 않는다.\n\n**[ArrayList, LinkedList 비교]**\n\n| 구분       | 순차적으로 추가/삭제 | 중간에 추가/삭제 | 검색   |\n| ---------- | -------------------- | ---------------- | ------ |\n| ArrayList  | 빠르다               | 느리다           | 빠르다 |\n| LinkedList | 느리다               | 빠르다           | 느리다 |\n\n- LinkedList는 중간에 추가/삭제 할 때 앞뒤 링크 정보만 변경하면 되므로 더 빠르다.\n- ArrayList는 뒤쪽 인덱스들을 모두 1씩 증가/감소 시키는 시간이 필요하므로 느리다.\n\n------\n\n배열(Array)과 리스트(List)의 차이, 그리고 ArrayList와 LinkedList에 대해 알아보았다.\n앞으로 헷갈리거나 까먹으면 이 글을 다시 복습하면서 잊어버리지 않도록 공부해야겠다.',1,'2021-02-17 23:45:35','http://3.36.125.70/thumbimg/79b036f4-f6dd-43ee-ac72-798bb94d44ad_Java_ (1).png'),(279,'JAVA :: String 클래스','easydeveloper2@naver.com','## 📝 String 클래스\n\n#### 💬 문자열을 나타내며, 스트링 리터럴은 String 객체로 처리된다.\n\n#### ⚠ 스트링 객체는 수정이 불가능하다.\n\n```null\nString str = \"abcd\"; // 스트링 리터럴로 스트링 객체 생성\nchar data[] = {\'a\', \'b\', \'c\', \'d\'};\nString str2 = new String(data);\nString str3 = new String(\"abcd\"); // str2와 str3는 모두 \"abcd\" 문자열\n```\n\n------\n\n### 💡 new String()\n\n#### 💬 String 객체를 생성\n\n```null\nString str = new String(byte[] bytes); // 배열 전체를 String 객체로 생성\nString str = new String(byte[] bytes, String charsetName); // 지정한 문자셋으로 디코딩\n\nString str = new String(byte[] bytes, int offset, int length); \n// 배열의 offset 인덱스 위치부터 length만큼 String 객체로 생성\nString str = new String(byte[] bytes, int offset, int length, String charsetName); \n// 지정한 문자셋으로 디코딩\n```\n\n------\n\n### 💡 new String과 스트링 리터럴 차이\n\n#### 💬 서로 다르게 관리한다.\n\n#### 💬 new String()에 의해 생성된 스트링은 힙 메모리에 별도로 생성한다.\n\n#### 💬 스트링 리터럴은 자바 내부에서 리터럴 테이블로 관리하여, 동일한 리터럴은 공유시킨다.\n\n##### 👉 예시\n\n```null\nString cpp = new String(\"C++\"); //new String()\nString java = \"Java\"; //스트링 리터럴\n```\n\n------\n\n### 💡 String 클래스 종류\n\n![img](https://media.vlpt.us/images/ro_sie/post/50697bef-c5fb-4d04-a435-654494342154/image.png)\n\n#### 💬 compareTo()\n\n##### 👉 예시\n\n```null\nString java = \"Java\";\nString cpp = \"C++\";\nint res = java.compareTo(cpp);\nif(res < 0) System.out.println(java + \"<\" + cpp);\nelse System.out.println(java + \">\" + cpp);\n```\n\n##### 👉 결과\n\n```\nJAVA > C++\n```\n\n#### 💬 indexOf()\n\n##### ⚠ 주어진 문자열이 포함되어 있지 않으면 -1 리턴\n\n##### 👉 예시\n\n```null\nString subject = \"자바 프로그래밍\";\nint index = subject.indexOf(\"C++\");\nSystem.out.println(index)\n```\n\n##### 👉 결과\n\n```\n-1\n```\n\n> Reference\n>\n> 명품 자바 에센셜 (2014, 신용권) / 혼자 공부하는 자바 (2019, 신용권)',1,'2021-02-17 23:47:16','http://3.36.125.70/thumbimg/7861daf5-fe7e-49da-81a8-8b7ae943d2d5_java썸네일.jpg'),(280,'[DB] SQLite 훑어보기!','easydeveloper1@naver.com','### 🟥 Intro\n\nSQLite : RDBMS의 데이터를 다루기 위해 사용하는 언어로 `DML`, `DDL` 두 종류를 사용한다.\n\n- DML(Data Manipulation Language) : 데이터의 추가, 삭제, 갱신, 조회 시에 사용.\n  \\- 예시 : `INSERT`, `DELETE`, `UPDATE`, `SELECT`\n- DDL(Data Definition Language) : 데이터의 테이블 등을 생성, 변경, 제거할 때에 사용.\n  \\- 예시 :`CREATE`,`ALTER`,`DROP`\n\n> RDBMS(Relational Database Management System)\n> : 데이터의 구성이 행(row)으로 구성된 테이블이며 각 행은 열(column)의 데이터로 이루어져 있다.\n\n### 🟧 실행 방법\n\nSQL 홈페이지에서 각자 컴퓨터 사양에 맞는 버전을 설치하자.\n나는 Visual Studio Code 2019 버전을 사용하므로 이 프로그램에 맞추어 글을 쓰겠당. 터미널에서 `sqlite3`을 입력하면 sqlite가 실행된다.\n\n```null\n# sqlite3 실행\n$ sqlite3\n# 종료\n$ .quit\n```\n\nVisual Studio Code에서는 Sqlite3 확장 프로그램(Extensions)을 제공하므로 다운로드받으면 사용이 가능하다!\n\n### 🟨 DB 생성 및 Table 생성/삭제\n\n> 데이터의 생성 및 조회가 가능하다는 점에서 CRUD의 **C**, **R**과 유사하다.\n\n#### ① DB 생성\n\n```null\nsqlite3 DB파일이름지정.sqlite3\nsqlite> .databases\nsqlite> .mode csv\nsqlite> .import csv파일이름.csv tbl이름01\nsqlite> .mode csv\nsqlite> .import hellodb.csv exm01\nsqlite> SELECT * FROM exm01 ;\n1,\"길동\",\"홍\",600,\"충청도\",010-2424-1232\n```\n\nCSV : Comma Seperated Value로 `comma(,)`로 값들이 구분된다는 뜻이다.\n\n#### 📍 추가 사항 : 출력 결과에 변화를 주자\n\n*출력 결과가 더 깔끔했으면 좋겠다!* 한다면\n\n```null\nsqlite> .headers on\nsqlite> .mode column\nsqlite> SELECT * FROM exm01 ;\nid  first_name  last_name  age  country  phone\n--  ----------  ---------  ---  -------  -------------\n1   길동          홍          600  충청도      010-2424-1232\n.headers on`\n`.mode column\n```\n\n#### ② Table 생성\n\n```null\nsqlite> CREATE TABLE 테이블이름(\n		데이터 내의 column 값들,\n        구분은 comma로 한다,\n        명령어 종료는 semicolon으로);\n# 생성된 table 목록을 조회(전부 보여줌)\nsqlite > .table\n```\n\nSQL문의 종료는 `;`로 인식하므로 마지막에 `;`가 없으면 종료되지 않는 것에 주의!\n\n#### ③ Table 삭제\n\n```null\nsqlite > DROP TABLE 삭제할테이블이름 ;\nsqlite> .tables\nexm01  ppls\nsqlite> DROP TABLE exm01 ;\nsqlite> .tables\nppls\nsqlite>\n```\n\n#### 📍 추가사항 - Schema 조회\n\n> Schema / 스키마 : 데이터베이스의 구조와 제약 조건을 정의하는 것 - 형식 정의\n\n```null\nsqlite> .schema 테이블이름\n```\n\n위의 코드를 쓰고 실행하면 해당 테이블의 데이터 구조 형태가 출력된다.\n\n```null\nsqlite> CREATE TABLE ppls (\n   ...> id INTEGER PRIMARY KEY,\n   ...> name TEXT );\nsqlite> .tables\nexm01  ppls\nsqlite> .schema ppls\nCREATE TABLE ppls (\nid INTEGER PRIMARY KEY,\nname TEXT );\n```\n\n[wikidocs-DB](https://wikidocs.net/12452)\n[wally-wally님의 github](https://github.com/wally-wally/TIL/blob/master/05_DB/[SSAFY]DB_%231.md)',1,'2020-11-17 13:15:17','http://3.36.125.70/thumbimg/9291ce2c-17f0-43d0-b565-c16244419ac7_SQLite.jfif'),(281,'Java Stack 개념과 구현','easydeveloper2@naver.com','# 학습 목표\n\n- Stack 개념과 ADT\n- Stack 구현\n  - Array\n  - LinkedList\n  - Java.util.Stack\n- 결론\n\n## Stack 개념과 ADT\n\n![img](https://media.vlpt.us/images/agugu95/post/cbdbb929-f088-4c63-ab6e-8998b66f368d/image.png)\n스택이란 어떠한 데이터들을 순차적으로 저장할 수 있으며 입구와 출구가 하나밖에 존재하지 않는 자료구조다.\n\n## 스택의 특징\n\n- LIFO(Last-In-First-Out)\n- 입구와 출구가 한 곳밖에 없기에 마지막으로 들어간 자료가 가장 먼저 나온다.\n  ![img](https://media.vlpt.us/images/agugu95/post/ba69c237-ac5f-4437-b2c6-db62f30f69b6/image.png)\n  접시를 한 곳에 쌓아두었을 때 맨위에 접시부터 꺼낼 수 박에 없는 것을 생각하면 된다.\n  데이터의 위치를 따로 지정할 수 없기에 데이터의 연산은 push(넣기)와 pop(꺼내기)밖에 존재하지 않는다.\n- top을 이용하여 스택의 위치를 파악한다.\n\n## Array Stack 구현\n\n```null\npublic class arrStack {\n    static class Stack {\n        private int top;\n        private int stackSize;\n        private int stackArr[];\n\n        public Stack(int stackSize) {\n            top = -1;\n            stackArr = new int[stackSize];\n            this.stackSize = stackSize;\n        }\n\n        public void push(int data) {\n            stackArr[++top] = data;\n        }\n\n        public int pop(){\n            if (top == -1) {\n                throw new ArrayIndexOutOfBoundsException();\n            }\n            return stackArr[top--];\n        }\n\n        public int peek() {\n            if (top == -1) {\n                throw new ArrayIndexOutOfBoundsException();\n            }\n            return stackArr[top];\n        }\n\n        public void printStack() {\n            System.out.println(\"stack list\");\n            for (int i = top; i >= 0; --i) {\n                System.out.println(stackArr[i]);\n            }\n        }\n\n    }\n    public static void main(String[] args) {\n        Stack st = new Stack(100);\n        st.push(1);\n        st.push(2);\n        st.push(3);\n        st.push(4);\n        st.push(5);\n        st.printStack(); // 5 4 3 2 1\n        System.out.println(\"peek: \" + st.peek()); // peek : 5\n        st.pop();\n        st.printStack(); // 4 3 2 1\n        st.pop();\n        st.pop();\n        st.pop();\n        st.pop();\n        st.printStack(); // 없음 \n    }\n}\n```\n\n배열을 통한 스택 구현의 경우 top의 초기값에 따라 top 연산이 달라진다.\n-1로 잡으면 스택의 top은 데이터의 위치와 동일하고, 0으로 잡으면 다음 데이터의 위치를 가리키게 된다.\n\n## Stack Singly Linked List 구현\n\n```null\npublic class implementStack {\n    static class Stack<T> {\n        static class Node<T> {\n            private T data;\n            private Node<T> next;\n\n            public Node(T data) {\n                this.data = data;\n            }\n        }\n\n        private Node<T> top;\n\n        public void push(T data) {\n            Node<T> node = new Node<>(data);\n            node.next = top;\n            top = node;\n        }\n\n        public T pop() {\n            if (top == null) {\n                throw new EmptyStackException();\n            }\n            T data = top.data;\n            top = top.next;\n            return data;\n        }\n\n        public T peek(){\n            if (top == null) {\n                throw new EmptyStackException();\n            }\n            return top.data;\n        }\n\n        boolean isEmpty(){\n            return top == null;\n        }\n    }\n    public static void main(String[] args) {\n        Stack<Integer> stack = new Stack<>();\n        stack.push(1);\n        stack.push(2);\n        System.out.println(stack.peek()); // 2\n        System.out.println(stack.pop()); // 2\n        System.out.println(stack.peek()); // 1\n        System.out.println(stack.pop()); // 1\n        System.out.println(stack.isEmpty()); // true\n    }\n}\n```\n\n리스트에 따른 스택 구현은 처음 생성 된 노드의 top\n\n## 결론\n\nStack의 특성상 마지막 데이터를 쉽게 빼낼 수 있다.\n마지막 기록, 최근 기록 등 데이터를 저장하고 제거할 경우만 사용한다.\n조회(검색)은 다른 자료구조에 비해 느려 데이터 조회가 필요할 경우 사용하지 않는다.\n--> 이로 인해 연결 리스트로 스택 구현 시 연결 리스트의 단점은 상관이 없어짐.\n\n결국 링크드스택의 단점은 사실상 없게 되며 연속된 메모리를 할당하는 배열보다 유동적으로 메모리를 할당할 수 있는 리스트를 통한 스택 구현이 보다 효율적이다.',0,'2021-02-17 23:48:41','http://3.36.125.70/thumbimg/1a9676df-4287-44b0-af60-2a4ca2f6fab6_java stack.png'),(282,'Django C.R.U.D - 게시판 만들기','easydeveloper1@naver.com','[Django 개념](https://velog.io/@mini_y/Django-개념정리)\n[프레임워크란?](https://velog.io/@mini_y/Framework)\n\nDjango web framework를 활용한 application 개발에 핵심이되는 URLconf, View, Model 중에 Model을 작성하고 ORM을 통해서 Database에 table을 만들고 데이터를 생성, 조회, 수정, 삭제하는 방법을 정리해보았다.\n\n![img](https://media.vlpt.us/images/mini_y/post/2b09313d-756a-46d5-8c2a-11765a25b9b9/%E1%84%89%E1%85%B3%E1%84%8F%E1%85%B3%E1%84%85%E1%85%B5%E1%86%AB%E1%84%89%E1%85%A3%E1%86%BA%202020-12-29%20%E1%84%8B%E1%85%A9%E1%84%92%E1%85%AE%207.38.44.png)\n\n> 전체적인 장고의 흐름\n\n# Django project & application 생성\n\nDjango는 가상환경에서 작업하는 것이 좋다.\n가상환경명을 프로젝트명으로 만든 후 새로운 django project 생성하기\n(장고프로젝트는 어떠한 디렉토리에 넣어도 무관함)\n\n```\ndjango-admin startproject westarbucks\n```\n\n<프로젝트이름>으로 들어와서 새로운 앱을 생성한다.(예시로 products라는 앱 생성)\n\n```\ncd westarbucks`\n`python manage.py startapp products\n```\n\n# Database 생성\n\n다른 터미널 창에서 Database를 생성해준다.\n\n```python\n$ mysql.server start\n\n$ mysql -u root -p\n\nmysql> create database \"NAME\" character set utf8mb4 collate utf8mb4_general_ci;\n```\n\n\"NAME\"안에 데이터베이스 이름\n\n# Django westarbucks에서 settings.py 설정\n\nIP허용하기 `ALLOWED_HOSTS = [\'*\']`\nINSTALLED_APPS/MIDDLEWARE에서 주석 처리하기 `admin, csrf, auth`\n생성한 앱이 있다면 INSTALLED_APPS에 추가하기 \'products\'\n\n## MySQL database와 연동\n\n```python\nDATABASES = {\n    \'default\' : {\n        \'ENGINE\': \'django.db.backends.mysql\',\n        \'NAME\': \'DATABASE 명\',\n        \'USER\': \'root\',\n        \'PASSWORD\': \'DB접속용 비밀번호\',\n        \'HOST\': \'127.0.0.1\',\n        \'PORT\': \'3306\',\n    }\n}\n```\n\n# products/models.py 작성\n\n생성한 앱의 models.py에 가서 class코드 입력\n\n```python\n# 예시\nfrom django.db import models\n\nclass Menu(models.Model):\n    name = models.CharField(max_length=20)\n\n    class Meta:\n        db_table = \"menu\"\n\n\nclass Category(models.Model):\n    name = models.CharField(max_length=20)\n    menu = models.ForeignKey(\'Menu\', on_delete=models.CASCADE)\n\n    class Meta:\n        db_table = \"category\"\n\nclass Drink(models.Model): \n    name = models.CharField(max_length=50)\n    category = models.ForeignKey(\'Category\', on_delete=models.SET_NULL, null=True)\n    allergy_drink = models.ManyToManyField(\"Allergy\", through = \"AllergyDrink\")\n\n    class Meta:\n        db_table = \"drinks\"\n\nclass Image(models.Model):\n    image_url = models.URLField(max_length = 2000)\n    drink = models.ForeignKey(\'Drink\', on_delete=models.CASCADE))\n\n    class Meta:\n        db_table = \"image\"\n```\n\n~~뭔지 정리하기~~\n`on_delete=models.CASCADE`\n`on_delete=models.SET_NULL, null=True`\n\n# migrate\n\nmodels.py입력이 끝나면 manage.py가 있는 디렉토리로 와서\n`$ python managy.py makemigrations`\n`$ python managy.py migrate` 입력하기\n(models.py가 수정될때마다 입력해야한다.)\n\n# mysql server start\n\n아까 mysql 데이터베이스 생성했던 터미널창으로 와서\n`$ mysql.server start`입력하기\n`$ mysql -u root -p`\n`mysql> show databases;`\n`mysql> use westarbucks;` use 데이터베이스 이름 입력\n`mysql> show tables;` 생성된 table목록 보기\n`mysql> select * from menu;`\n`mysql> select * from category;`\n`mysql> select * from <생성된 table이름>;`\n\n# python manage.py shell\n\nmanage.py가 있는 디렉토리로 가서 python manage.py shell 입력 후\n데이터 입력하기\n(models.py에 작성했던 class 꼭 import해주기!)\n\n```python\nfrom products.models import Menu, Category, Drink\n```\n\n`menu = Menu.objects.create.(name=\"\")`\n[queryset API](https://velog.io/@mini_y/DjangoQueryset)\n\n데이터 입력후 mysql에서 select * from 통해 확인하기',0,'2020-11-17 17:55:34','http://3.36.125.70/thumbimg/e1accac0-c388-4520-8f3a-b680a3172341_django crud.png'),(283,'Django ForeinKey 정리','easydeveloper1@naver.com','## ForeignKey\n\n[데이터 관계](https://velog.io/@wltjs10645/Django-데이터-관계) 에서 공부했던 foreighkey를 실제로 적용해서 model을 구현해보자. foreignkey field 는 테이블 간 연결을 위해서 사용하기 때문에 foreignkey 필드가 바라보고 있는 값, 즉 부모 테이블에서 해당 값에 변경이 생길 경우에 대한 처리를 미리 옵션으로 설정해야 한다.\n\n- `on_delete = models.CASCADE)`\n  FK 필드가 바라보는 값이 삭제되면 FK 를 가지고 있는 모델의 인스턴스도 삭제 (row)\n- `on_delete = models.PROTECT)`\n  FK 필드가 바라보는 값이 삭제되면 ProtectedError 발생\n- `on_delete = models.SET_NULL)`\n  FK 필드가 바라보는 값이 삭제되면 FK 필드 값을 null 변경. (FK 를 가지고 있는 필드를 null=True 로 설정해두어야 한다.)\n- `on_delete = models.SET_DEFAULT)`\n  FK 필드가 바라보는 값이 삭제되면 FK 필드 값을 default 값으로 변경. (default 값이 있어야 함)\n- `on_delete = models.SET())`\n  FK 필드가 바라보는 값이 삭제되면 FK 필드 값을\n- `on_delete = models.DO_NOTHING)`\n  FK 필드가 바라보는 값이 삭제되도 아무 조치를 하지 않는다.',1,'2020-11-24 19:17:00','http://3.36.125.70/thumbimg/acd46dbf-ca0e-4422-87be-c8c3454eb940_장고.png'),(284,'[Vue] Vuetify 사용하기 - 기본설정, 컴포넌트재사용, v-model','easydeveloper1@naver.com','Vue의 가장 많이 사용하는 디자인 템플릿 vuetify에 대한 포스팅이다.\n\n## 기본설정\n\nvue cli 버전이 3.0 이상인지 확인한다.\n\n```null\nvue --version\n```\n\nvue add로 플러그인을 추가한다.\n\n```null\nvue add vuetify\n```\n\n추가한 뒤에는 template내에서 `<v-card>` 처럼 v로 시작하는 prefix를 붙여서 바로 사용할 수 있게된다.\n\nvue-cli명령어 `vue add`로 추가해서 사용하는 경우 `vue.config.js`, plugin폴더, main.js가 자동으로 수정 되는 점을 인지하고있어야 한다.\n다른 플러그인 추가와 마찬가지로 저장소에 저장한 뒤 하는 것이 권장사항이다.\n\n------\n\n## 사용해보기 - 재사용과 v-model\n\n재사용하기위해 컴포넌트를 분리하는 것은 어렵지 않다. 그저 파일을 분리해 모듈화하고 모듈시스템을 이용해 사용하면 된다.\n\n하지만, props를 전달받아 자식컴포넌트에서 직접 수정하려고 한다면 에러가 발생한다.\nvuetify에서 model, alert처럼 컴포넌트 내에서 애니메이션 효과를 상태값으로 가지고 있는 경우, 부모 컴포넌트에서 전달한 props를 바로 v-model에 사용할 수 없다.\n\nv-model로 props를 직접 연결한 경우, `vue/no-mutating-props` 에러가 발생한다.\n이런 경우 computed속성으로 get, set 메서드까지 구현해주면 된다.\n\n### 재사용 가능한 Modal컴포넌트 만들어보기\n\n재사용가능한 Modal기능 컴포넌트를 만들어보려고 한다.\nslot을 이용해 내부 컨텐츠를 부모 컴포넌트에서 커스터마이징 할 수 있다.\n\n속성값으로 전달받는 데이터\n\n- open : Modal 컴포넌트를 보여줄 것인지 나타내는 상태\n- padding: 컨텐츠 패딩\n- closeModal: Modal창 닫는 함수\n\n#### 모달 컴포넌트\n\n```jsx\n<template>\n  <v-dialog v-model=\"openModal\" max-width=\"570px\" class=\"dialog\" :scrollable=\"true\">\n    <div class=\"modal-container\" :style=\"{ padding }\">\n      <slot name=\"content\"></slot>\n    </div>\n  </v-dialog>\n</template>\n\n<script>\nexport default {\n  name: \"Modal\",\n  data() {\n    return {};\n  },\n  props: [\"open\", \"padding\"],\n  methods: {},\n  computed: {\n    openModal: {\n      get() {\n        return this.open;\n      },\n      set(newValue) {\n        console.log(newValue);\n        this.$emit(\"closeModal\");\n      },\n    },\n  },\n};\n</script>\n```\n\ncomputed속성에 openModal이라는 데이터를 작성하고 get,set을 구현했다.\nset메서드는 newValue를 인자로 받는다.\n`this.$emit(\"closeModal\")` 로 부모에서 전달한 함수를 실행했다.\n필요하다면 `this.$emit(\"closeModal\", newValue)`로 newValue를 전달해도 된다.\n\n#### 부모컴포넌트\n\n```jsx\n      <modal :open=\"agreement.agreementOpenFirst\" padding=\"20px\" @closeModal=\"onClickCloseModal\">\n        <div slot=\"content\">\n          <div id=\"modal-slot-title-signin\">개인정보 이용약관 동의</div>\n          <div id=\"modal-slot-content-signin\">\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Et ut laborum dolores asperiores enim dignissimos eius ducimus vel nisi,\n            sint, velit eos voluptate deserunt tenetur excepturi nobis\n            doloribus veniam quia. Lorem ipsum dolor sit amet consectetur adipisicing elit. Et ut laborum dolores asperiores enim dignissimos\n            eius ducimus vel nisi, sint, velit eos voluptate deserunt\n            tenetur excepturi nobis doloribus veniam quia. Lorem ipsum dolor sit amet consectetur adipisicing elit. \n            Et ut laborum dolores asperiores enim dignissimos eius ducimus vel nisi, sint, velit\n          </div>\n          <div id=\"modal-slot-footer-signin\">\n            <v-btn class=\"btn prev-btn\" @click=\"onClickAgree1\"> 동의하기 </v-btn>\n            <v-btn class=\"btn next-btn\" @click=\"onClickCloseModal\"> 닫 기 </v-btn>\n          </div>\n        </div>\n      </modal>\n```\n\nslot으로 컨텐츠를 전달하고있다.\n일반적인 사이트에서 회원가입 중 자주 볼 수 있는 \"약관 보기\" 기능을 모달로 구현한 것이다.\n하단에는 동의하기, 닫기 버튼이 있다.\n부모컴포넌트의 데이터 `agreement.agreementOpenFirst`가 open속성으로 들어가고, padding값은 20px로 설정했다. closeModal이벤트 함수 도 전달해준다.\n\nv-model은 양방향으로 데이터 바인딩이 되기 때문에\n컴포넌트에서도 자유롭게 데이터를 변경할 수 있는 값을 넣어줘야 한다.\n\n------\n\n### 재사용 가능한 Alert컴포넌트 만들어보기\n\n![img](https://media.vlpt.us/images/kwonh/post/8bc02e21-10fd-4492-b66d-2af579dad89c/image.png)\n![img](https://media.vlpt.us/images/kwonh/post/ff91b65e-db86-4037-a6e8-38755755a22f/image.png)\n\n#### Alert 컴포넌트\n\n```jsx\n<template lang=\"html\">\n  <v-alert v-model=\"openAlert\" class=\"toast\" transition=\"fade\" :type=\"type\">\n    {{ description }}\n  </v-alert>\n</template>\n\n<script>\nexport default {\n  name: \"action\",\n  props: [\"open\", \"isSuccess\", \"description\"],\n  data() {\n    return {};\n  },\n  watch: {\n    open(newVal) {\n      if (newVal) {\n        setTimeout(() => {\n          this.$emit(\"closeAlert\");\n        }, 4000);\n      }\n    },\n  },\n  computed: {\n    type() {\n      return this.isSuccess ? \"success\" : \"error\";\n    },\n    openAlert: {\n      get() {\n        return this.open;\n      },\n      set() {\n        this.$emit(\"closeAlert\");\n      },\n    },\n  },\n};\n</script>\n```\n\nReact Material-ui에서 Snackbar라고 불리는 컴포넌트다. vuetify에서는 alert라고 하는 것 같다.\n회원가입 폼에서 유효성 검사에서 사용했다.\n\n부모컴포넌트에서 주는 open속성값을 watch한다. open이 true로 바뀌었을 경우 4초뒤 closeAlert를 실행시킨다.\n아까 Modal과 마찬가지로 closeAlert를 set내부에서 구현해줘야 닫기 버튼이 있는 Alert에서도 잘 동작한다.',1,'2020-12-01 00:00:00','http://3.36.125.70/thumbimg/aeec2bcd-a331-45aa-862c-cc6e99685f67_vuetify.png'),(285,'[프로그래머스] Level 2 다리를 지나는 트럭 (JAVA)','easydeveloper2@naver.com','## [문제](https://programmers.co.kr/learn/courses/30/lessons/42583)\n\n### 문제 설명\n\n트럭 여러 대가 강을 가로지르는 일 차선 다리를 정해진 순으로 건너려 합니다. 모든 트럭이 다리를 건너려면 최소 몇 초가 걸리는지 알아내야 합니다. 트럭은 1초에 1만큼 움직이며, 다리 길이는 bridge_length이고 다리는 무게 weight까지 견딥니다.\n※ 트럭이 다리에 완전히 오르지 않은 경우, 이 트럭의 무게는 고려하지 않습니다.\n\n예를 들어, 길이가 2이고 10kg 무게를 견디는 다리가 있습니다. 무게가 [7, 4, 5, 6]kg인 트럭이 순서대로 최단 시간 안에 다리를 건너려면 다음과 같이 건너야 합니다.\n\n| 경과 시간 | 다리를 지난 트럭 | 다리를 건너는 트럭 | 대기 트럭 |\n| --------- | ---------------- | ------------------ | --------- |\n| 0         | []               | []                 | [7,4,5,6] |\n| 1~2       | []               | [7]                | [4,5,6]   |\n| 3         | [7]              | [4]                | [5,6]     |\n| 4         | [7]              | [4,5]              | [6]       |\n| 5         | [7,4]            | [5]                | [6]       |\n| 6~7       | [7,4,5]          | [6]                | []        |\n| 8         | [7,4,5,6]        | []                 | []        |\n\n따라서, 모든 트럭이 다리를 지나려면 최소 8초가 걸립니다.\n\nsolution 함수의 매개변수로 다리 길이 bridge_length, 다리가 견딜 수 있는 무게 weight, 트럭별 무게 truck_weights가 주어집니다. 이때 모든 트럭이 다리를 건너려면 최소 몇 초가 걸리는지 return 하도록 solution 함수를 완성하세요.\n\n### 제한 조건\n\n- bridge_length는 1 이상 10,000 이하입니다.\n- weight는 1 이상 10,000 이하입니다.\n- truck_weights의 길이는 1 이상 10,000 이하입니다.\n- 모든 트럭의 무게는 1 이상 weight 이하입니다.\n\n### 입출력 예\n\n| bridge_length | weight | truck_weights                   | return |\n| ------------- | ------ | ------------------------------- | ------ |\n| 2             | 10     | [7,4,5,6]                       | 8      |\n| 100           | 100    | [10]                            | 101    |\n| 100           | 100    | [10,10,10,10,10,10,10,10,10,10] | 110    |\n\n------\n\n## 풀이\n\n일차선 도로에 트럭들이 순서대로 지난다는 조건에서 Queue를 써야겠다는 생각을 했다. 열심히 구현해봤는데 생각만큼 잘 되지 않아 검색해서 풀었다...!\n\n각 `truck`마다, `truck`을 다리에 올릴 때까지 아래 조건문을 반복해서 체크한다.\n\n> 1. `bridge`가 비어 있으면 현재 `truck`을 추가하고 다음 트럭으로 넘어간다.\n>\n> 2. `bridge`가 `bridge_length`만큼 꽉 차있으면 마지막 트럭을 `bridge`에서 제거한다.\n>\n> 3. ```\n>    bridge\n>    ```\n>\n>    의\n>\n>     \n>\n>    ```\n>    weightSum\n>    ```\n>\n>    을 고려하여\n>\n>    - `truck`을 추가할 수 있으면 추가하고 다음 트럭으로 넘어간다.\n>    - `truck`을 추가할 수 없으면 무게 0의 `EMPTY`를 추가한다.\n\n------\n\n## 코드\n\n```java\nimport java.util.*;\n\nclass Solution {\n    \n    private static final int EMPTY = 0;\n\n    private int weightSum;\n    private Queue<Integer> bridge;\n    private int answer;\n\n    public int solution(int bridge_length, int weight, int[] truck_weights) {\n        answer = 0;\n        weightSum = 0;\n        bridge = new LinkedList<>();\n\n        for (int truck : truck_weights) {\n            while (true) {\n                if (bridge.isEmpty()) {\n                    addTruckOnBridge(truck);\n                    break;\n                }\n\n                if (bridge.size() == bridge_length) {\n                    weightSum -= bridge.poll();\n                } else if (weightSum + truck <= weight) {\n                    addTruckOnBridge(truck);\n                    break;\n                } else {\n                    addTruckOnBridge(EMPTY);\n                }\n            }\n        }\n\n        return answer + bridge_length;\n    }\n\n    private void addTruckOnBridge(int truck) {\n        bridge.offer(truck);\n        weightSum += truck;\n        answer++;\n    }\n}\n```\n\n------\n\n#### 참고\n\n[[프로그래머스\\] 다리를 지나는 트럭 / Java (Queue, LinkedList)](https://rooted.tistory.com/22)',1,'2021-02-17 23:59:30','http://3.36.125.70/thumbimg/af417fa8-d87d-4d3e-86b0-e2b1849e9c14_algo.png'),(286,'[JPA] Spring Data JPA, JpaRepository','easydeveloper2@naver.com','## Spring Data Project\n\n- 다양한 데이터 저장소에 대한 접근을 추상화해서 데이터 접근 코드를 줄이고 개발 편의를 제공\n- ex) Spring DATA REDIS, Spring DATA MONGO, ...\n\n------\n\n## Spring Data JPA\n\n스프링 프레임워크 + JPA에 특화된 기능 제공\n\n- 데이터 접근 계층을 개발할 때 구현 클래스 없이 인터페이스만으로도 작동\n- 동적으로 구현 객체를 생성해서 주입\n\n### JpaRepository\n\n#### 설정\n\n- SomeRepository extends JpaRepository<{엔티티 타입}, {식별자 타입}>\n\n```java\npublic interface MemberRepository extends JpaRepository<Member, Long> {\n    List<Member> findByName(String name);\n}\n```\n\n#### 주요 메소드\n\n- `save(S)` : 새로운 엔티티는 저장하고 이미 있는 엔티티는 수정한다.\n- `delete(T)` : 엔티티 하나를 삭제한다. (em.remove())\n- `findOne(ID)` : 엔티티 하나를 조회한다. (em.find())\n- `getOne(ID)` : 엔티티 하나를 프록시로 조회한다. (em.getReference())\n- `findAll()` : 모든 엔티티를 조회한다. Sort나 Pageable을 파라미터로 제공할 수 있다.\n\n### 쿼리 메소드\n\n메소드 이름으로 쿼리 생성\n\n[Spring Data JPA - Reference Documentation](https://docs.spring.io/spring-data/jpa/docs/1.8.0.RELEASE/reference/html/#repositories)\n\n- 메소드 이름으로 JPA NamedQuery 호출\n- `@Query` 사용해서 Repository interface에 쿼리 직접 정의\n\n### Parameter Binding\n\n- 위치 기반 파라미터 바인딩 (디폴트)\n- 이름 기반 파라미터 바인딩\n\n```java\nMember findByUserName(@Param(\"name\") String username);\n```\n\n### 벌크성 수정 쿼리\n\n```java\n@Modifying\n@Query(\"update Product p set p.price = p.price * 1.1 where p.stockAmount < :stockAmount\")\nint bulkPriceUp(@Param(\"stockAmount\") String stockAmount);\n```\n\n- `@Modifying(clearAutomatically = true)` : 벌크성 쿼리 실행 후 Persistence Context 초기화\n\n### Return Type\n\n#### 단건\n\n- 리턴 타입 지정\n- 0건 조회 시 null 반환\n- 여러 건 조회 시 예외 발생\n\n#### 여러 건\n\n- 컬렉션 인터페이스 사용\n- 0건 조회 시 빈 컬렉션 반환\n\n### Paging & Sort\n\n```null\nPageRequest pageRequest = new PageRequest(0, 10, new Sort(Direction.DESC, \"name\"));\nPage<Member> result = memberRepository.findByNameStartingWith(\"김\", pageRequest);\n```\n\n- PageRequest Parameter : 현재 페이지, 조회할 데이터 수, Sort 조건\n\n### Specification\n\n```null\nPageRequest pageRequest = new PageRequest(0, 10, new Sort(Direction.DESC, \"name\"));\nPage<Member> result = memberRepository.findByNameStartingWith(\"김\", pageRequest);\n```\n\n- PageRequest Parameter : 현재 페이지, 조회할 데이터 수, Sort 조건\n\n------\n\n##### 본 포스팅은 [자바 ORM 표준 JPA 프로그래밍 (김영한 저)](https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=62681446)을 읽고 정리한 내용입니다. (2020.09.25)',1,'2021-02-18 00:00:59','http://3.36.125.70/thumbimg/c0530e2b-b268-4eb6-84ef-6494ae1137d6_그림1.png'),(287,'Vue.js 간단 채팅앱 만들기','easydeveloper1@naver.com','최근 Vuejs에 관심이 생겨서 공부것을 바탕으로 간단한 채팅앱을 만들어 보았습니다.\n이렇게 개발글 남기는건 처음이라... 어떻게 써야 잘쓰는건지 잘 모르겠지만...\n좋게봐주셨으면합니다~^^\n\n------\n\n```null\n$ yarn global add @vue/cli // vue cli를 설치합니다.\n$ vue create chat-front    // vue 프로젝트를 생성합니다.\n$ cd chat-front\n$ yarn serve               // 서버를 실행 시켜봅니다.\n```\n\n- Vue Component Framework - Vuetify를 설치하겠습니다.\n\n```null\n$ vue add vuetify\n  - 커맨드를 실행하면 main.js\n    import \'./plugins/vuetify\';\n    자동으로 추가 되는것을 확인 할 수 있습니다.\n```\n\n## 1. 로그인 페이지\n\n### ./src/views/Login.vue\n\n```null\n<template>\n  <div class=\"inner-wrap\" fluid fill-height>\n    Login Page\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \'Login\',\n  data() {\n    return {\n      msg: [],\n      name: \'\',\n    };\n  },\n};\n</script>\n```\n\n### ./src/App.vue\n\n```null\n<template>\n  <v-app>\n    <v-content>\n      <!-- 라우터 -->\n      <v-container fluid fill-height aacontainer>\n        <router-view></router-view>\n      </v-container>\n      <!-- 라우터 -->\n    </v-content>\n  </v-app>\n</template>\n\n<script>\nexport default {\n  name: \'App\',\n  components: {\n  },\n  data() {\n    return {\n    };\n  },\n};\n</script>\n```\n\n### ./src/router.js\n\n```null\nimport Vue from \'vue\';\nimport Router from \'vue-router\';\nimport Login from \'./views/Login.vue\';\n\nVue.use(Router);\n\nexport default new Router({\n  mode: \'history\',\n  base: process.env.BASE_URL,\n  routes: [\n    {\n      path: \'/\',\n      name: \'Login\',\n      component: Login,\n    },\n  ],\n});\n```\n\n### - 로그인 페이지가 나오는것을 확인하실수 있습니다.\n\n- 다음은 vuetify를 활용하여 Login page를 꾸며보겠습니다.\n  ![img](https://media.vlpt.us/post-images/kay/8edc5790-d7a9-11e8-a5de-b3b832d5e5fe/-2018-10-25-1.17.19.png)\n\n### ./src/components/Login/LoginForm.vue\n\n```null\n<template>\n  <v-layout align-center justify-center>\n    <v-flex xs12 sm6>\n      <v-text-field\n        v-model=\"userName\"\n        label=\"대화명\"\n        required\n        v-on:keyup.enter=\"joinSubmit\"\n      ></v-text-field>\n      <div class=\"text-xs-center\">\n        <v-btn @click=\"joinSubmit\" round color=\"primary\" dark>JOIN</v-btn>\n      </div>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nexport default {\n  name: \'LoginForm\',\n  props: [\'join\'],\n  data() {\n    return {\n      userName: \'\',\n    };\n  },\n  methods: {\n    joinSubmit() {\n      this.$emit(\'joinSubmit\', this.userName);\n    },\n  },\n};\n</script>\n```\n\n### ./src/view/Login.vue\n\n- 로그인 페이지에 컴포넌트를 추가 수정 해줍니다.\n\n```null\n<template>\n  <div class=\"inner-wrap\" fluid fill-height>\n    <Loginform-component v-on:joinSubmit=\"joinSubmit\"></Loginform-component>\n  </div>\n</template>\n\n<script>\nimport LoginForm from \'@/components/Login/LoginForm.vue\';\n\nexport default {\n  name: \'Login\',\n  data() {\n    return {\n    };\n  },\n  components: {\n    \'Loginform-component\': LoginForm,\n  },\n  created() {\n  },\n  methods: {\n    joinSubmit(userName) {\n      this.$router.push(`/char-room/${userName}`);\n    },\n  },\n};\n</script>\n```\n\n### ./assets/_common.scss\n\n- 공통 css를 만들어 보겠습니다.\n- SCSS사용을 위해 yarn add sass-loader node-sass 모듈을 추가합니다.\n\n```null\n/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n	margin: 0;\n	padding: 0;\n	border: 0;\n	font-size: 100%;\n	font: inherit;\n	vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n	display: block;\n}\nbody {\n	line-height: 1;\n}\nol, ul {\n	list-style: none;\n}\nblockquote, q {\n	quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n	content: \'\';\n	content: none;\n}\ntable {\n	border-collapse: collapse;\n	border-spacing: 0;\n}\nhtml,body{\n	overflow: hidden;\n}\n.inner-wrap {\n  width: 100%;\n}\n```\n\n![img](https://media.vlpt.us/post-images/kay/39c98950-d743-11e8-903b-8bd134fd6885/-2018-10-22-2.14.40.png)\n\n## 2. 채팅방을 만들어 보겠습니다.\n\n> ./src/components/Chat/MessageList.vue\n> ./src/components/Chat/MessageForm.vue\n\n- 채팅방에 사용할 두개 컴포넌트 파일을 생성해줍니다.\n\n### socket.io를 활용해야 하므로 plugin을 만들어 주겠습니다.\n\n#### ./plugins/socketPlugin.js\n\n```null\nimport Vue from \'vue\';\nimport io from \'socket.io-client\';\n\nconst socket = io(\'http://localhost:3000\');\n\n\nconst SocketPlugin = {\n  install(vue) {\n    vue.mixin({\n    });\n\n    vue.prototype.$sendMessage = ($payload) => {\n      socket.emit(\'chat\', {\n        msg: $payload.msg,\n        name: $payload.name,\n      });\n    };\n\n    // 인스턴스 메소드 추가\n    vue.prototype.$socket = socket;\n  },\n};\n\nVue.use(SocketPlugin);\n```\n\n#### 그리고 main.js에 추가해줍니다.\n\n```null\nimport \'./plugins/socketPlugin\';\n```\n\n### 그리고 ./src/Constant.js를 만들어줍니다. 상수선언에 활용합니다.\n\n#### ./src/Constant.js\n\n```null\nexport default {\n  PUSH_MSG_DATA: \'pushMsgData\',\n};\n```\n\n### 채팅 내용을 담을 vuex store를 만들어보겠습니다.\n\n> ./src/store.js는 삭제하겠습니다.\n> ![img](https://media.vlpt.us/post-images/kay/72cda000-d84d-11e8-930f-2904a08c1758/-2018-10-25-8.58.15.png)\n>\n> #### 이런 구조로 만들어줍니다..ㅋ\n\n#### ./src/store/modules/socket.js\n\n```null\nimport Constant from \'../../Constant\';\n\nconst state = {\n  msgDatas: [],\n};\n\n// getters\nconst getters = {\n};\n\n// actions\nconst actions = {\n};\n\n// mutations\nconst mutations = {\n  [Constant.PUSH_MSG_DATA]: ($state, $payload) => {\n    $state.msgDatas.push($payload);\n  },\n};\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations,\n};\n```\n\n#### ./src/store/index.js\n\n```null\nimport Vue from \'vue\';\nimport Vuex from \'vuex\';\nimport socket from \'./modules/socket\';\n\nVue.use(Vuex);\n\nconst debug = process.env.NODE_ENV !== \'production\';\n\nexport default new Vuex.Store({\n  modules: {\n    socket,\n  },\n  strict: debug,\n  // plugins: debug ? [createLogger()] : []\n});\n```\n\n### ./src/components/Chat/MessageList.vue\n\n```null\n<template>\n  <v-list v-auto-bottom=\"msgs\">\n    <transition-group name=\"list\" >\n      <div v-for=\"(msg,index) in msgs\" v-bind:key=\"index\">\n        <v-list-tile>\n          <v-list-tile-action>\n            <span>{{msg.from.name}}</span>\n          </v-list-tile-action>\n          <v-list-tile-content>\n            <v-list-tile-title>{{msg.msg}}</v-list-tile-title>\n          </v-list-tile-content>\n        </v-list-tile>\n        <v-divider inset></v-divider>\n      </div>\n    </transition-group>\n  </v-list>\n</template>\n\n<script>\nexport default {\n  name: \'MessageList\',\n  props: [\'msgs\'],\n};\n</script>\n\n<style>\n.list-item {\n  display: inline-block;\n  margin-right: 10px;\n}\n.list-enter-active, .list-leave-active {\n  transition: all 1s;\n}\n.list-enter, .list-leave-to /* .list-leave-active below version 2.1.8 */ {\n  opacity: 0;\n  transform: translateX(30px);\n}\n</style>\n```\n\n### ./src/components/Chat/MessageForm.vue\n\n```null\n<template>\n  <div class=\"inner-wrap\">\n    <v-text-field\n      v-model=\"msg\"\n      label=\"chat\"\n      placeholder=\"보낼 메세지를 입력하세요.\"\n      solo\n      @keyup.13=\"submitMessageFunc\"\n    ></v-text-field>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \'MessageForm\',\n  data() {\n    return {\n      msg: \'\',\n    };\n  },\n  methods: {\n    submitMessageFunc() {\n      if (this.msg.length === 0) return false;\n      this.$emit(\'submitMessage\', this.msg);\n      this.msg = \'\';\n      return true;\n    },\n  },\n};\n</script>\n```\n\n## views폴더에 ChatRoom.vue을 만들어줍니다.\n\n### .src/views/ChatRoom.vue\n\n```null\n<template>\n  <div class=\"inner-wrap\" fluid fill-height inner-wrap>\n    <Message-List :msgs=\"msgDatas\" class=\"msg-list\"></Message-List>\n    <Message-From v-on:submitMessage=\"sendMessage\" class=\"msg-form\" ></Message-From>\n  </div>\n</template>\n\n<script>\nimport { mapMutations, mapState } from \'vuex\';\nimport MessageList from \'@/components/Chat/MessageList.vue\';\nimport MessageForm from \'@/components/Chat/MessageForm.vue\';\nimport Constant from \'@/Constant\';\n\nexport default {\n  name: \'ChatRoom\',\n  data() {\n    return {\n      datas: [],\n    };\n  },\n  components: {\n    \'Message-List\': MessageList,\n    \'Message-From\': MessageForm,\n  },\n  computed: {\n    ...mapState({\n      \'msgDatas\': state => state.socket.msgDatas,\n    }),\n  },\n  created() {\n    const $ths = this;\n    this.$socket.on(\'chat\', (data) => {\n      this.pushMsgData(data);\n      $ths.datas.push(data);\n    });\n  },\n  methods: {\n    ...mapMutations({\n      \'pushMsgData\': Constant.PUSH_MSG_DATA,\n    }),\n    sendMessage(msg) {\n      this.pushMsgData({\n        from: {\n          name: \'나\',\n        },\n        msg,\n      });\n      this.$sendMessage({\n        name: this.$route.params.username,\n        msg,\n      });\n    },\n  },\n};\n</script>\n\n<style>\n.msg-form {\n  bottom: -28px;\n  position: absolute;\n  left: 0;\n  right: 0;\n}\n.msg-list {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 60px;\n  overflow-x: scroll;\n}\n</style>\n```\n\n### 라우터에 Path를 추가해줍니다.\n\n#### ./src/router.js\n\n```null\nimport Vue from \'vue\';\nimport Router from \'vue-router\';\nimport Login from \'./views/Login.vue\';\nimport ChatRoom from \'./views/ChatRoom.vue\';\n\nVue.use(Router);\n\nexport default new Router({\n  mode: \'history\',\n  base: process.env.BASE_URL,\n  routes: [\n    {\n      path: \'/\',\n      name: \'Login\',\n      component: Login,\n    },\n    {\n      path: \'/char-room/:username\',\n      name: \'ChatRoom\',\n      component: ChatRoom,\n    },\n  ],\n});\n```\n\n> 채팅시 자동 스크롤 이동을 위해\n> directive를 만들어 보겠습니다.\n\n### ./plugin/directives.vue\n\n```null\nmodule.exports = (Vue) => {\n  // dom 업데이트시 스크롤을 최하단으로 이동시킵니다.\n  Vue.directive(\'auto-bottom\', {\n    update: (el) => {\n      setTimeout(() => {\n        el.scrollTop = el.scrollHeight;\n      }, 0);\n    },\n  });\n};\n```\n\n> main.js에 import해줍니다.\n>\n> ```null\n> import Directives from \'./plugins/directives\';\n> Vue.use(Directives);\n> ```\n\n## 3. 서버 작업\n\n> ```null\n> $ mkdir chat-server 폴더를 생성합니다.\n> $ yarn init\n> $ yarn add express\n> $ yarn add socket.io\n> ```\n>\n> 모듈을 설치합니다.\n\n### chat-server/app.js\n\n```null\nvar app = require(\'express\')();\nvar server = require(\'http\').createServer(app);\nvar io = require(\'socket.io\')(server,{\n  pingTimeout: 1000,\n});\n\napp.all(\'/*\', function(req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Headers\", \"X-Requested-With\");\n  next();\n});\n\n// localhost:3000서버에 접속하면 클라이언트로 메세지을 전송한다\napp.get(\'/\', function(req, res) {\n  res.sendFile(\'Hellow Chating App Server\');\n});\n\nio.on(\'connection\', function(socket){\n  \n  // 클라이언트로부터의 메시지가 수신되면\n  socket.on(\'chat\', function(data) {\n    console.log(\'Message from %s: %s\', data.name, data.msg);\n\n    var msg = {\n      from: {\n        name: data.name,\n      },\n      msg: data.msg\n    };\n\n    // 메시지를 전송한 클라이언트를 제외한 모든 클라이언트에게 메시지를 전송한다\n    socket.broadcast.emit(\'chat\', msg);\n  });\n  \n  socket.on(\'disconnect\', function() {\n    console.log(\'user disconnected: \' + socket.name);\n  });\n\n\n});\n\nserver.listen(3000);\n```\n\n## 결과물\n\n![img](https://media.vlpt.us/post-images/kay/65302f00-d850-11e8-b4f2-6bf6261a2eeb/-2018-10-25-9.19.26.png)',1,'2020-12-12 12:11:59','http://3.36.125.70/thumbimg/c0194a2b-85bb-49f6-bbd0-fd1c5cb025f1_vuejs 간단한 채팅앱.png'),(288,'[Spring] Spring Security란?','easydeveloper2@naver.com','### 1) Spring Security란?\n\n- Spring Security는 Spring 기반의 애플리케이션의 보안(인증과 권한, 인가 등)을 담당하는 Spring 하위 프레임워크입니다.\n- Spring Security는 \"인증\" 과 \"권한\" 에 대한 부분을 Filter의 흐름에 따라 처리합니다.\n- Spring Security는 보안과 관련해서 체계적으로 많은 옵션을 제공해주기 때문에 개발자 입장에서는 일일이 보안 관련 로직을 작성하지 않아도 된다는 장점이 있습니다.\n\n![img](https://media.vlpt.us/images/dnjscksdn98/post/f88ab8d8-9580-4f06-bd73-839c61362ae8/ss.png)\n\n### 2) 인증과 인가란?\n\n**인증(Authentication)**\n\n- 해당 사용자가 본인이 맞는지를 확인하는 절차\n\n**인가(Authorization)**\n\n- 인증된 사용자가 요청한 자원에 접근 가능한지를 결정하는 절차\n\n![img](https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FoMnop%2FbtqEJh4jxCX%2FPhClhzrEpVOCRK7wYM5R4k%2Fimg.png)\n\n- Spring Security는 기본적으로 인증 절차를 거친 후에 인가 절차를 진행하게 되며, 인가 과정에서 해당 리소스에 대한 접근 권한이 있는지 확인을 하게 됩니다.\n- 이러한 인증과 인가를 위해 `Principal` 을 아이디로, `Credential` 을 비밀번호로 사용하는 **Credential 기반의 인증 방식** 을 사용합니다.\n\n> - Principal(접근 주체) : 보호 받는 리소스에 접근하는 대상\n> - Credential(비밀번호) : 리소스에 접근하는 대상의 비밀번호\n\n### 3) Spring Security의 주요 모듈\n\n![img](https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FAbFLx%2FbtqEJC1tYaJ%2FBDq9cRTqiDarlBa3Z05FoK%2Fimg.png)\n\n**Authentication**\n\n- `Authentication` 은 현재 접근하는 주체의 정보와 권한을 담는 인터페이스입니다.\n- `SecurityContext`에 저장되며, `SecurityContextHolder` 를 통해 `SecurityContext`에 접근하고, `SecurityContext` 를 통해 `Authentication` 에 접근할 수 있습니다.\n\n**SecurityContext**\n\n- `Authentication`을 보관하는 역할을 하며, `SecurityContext`를 통해 `Authentication` 객체를 꺼내올 수 있습니다.\n\n**SecurityContextHolder**\n\n- `SecurityContextHolder`는 보안 주체의 세부 정보를 포함하여 응용 프로그램의 현재 보안 컨텍스트에 대한 세부 정보가 저장됩니다.\n\n**Spring Security에서의 인증 처리 과정**\n\n- `username`과 `password`를 조합해서 `UsernamePasswordAuthenticationToken` 인스턴스를 만듭니다.\n- 이 토큰은 검증을 위해 `AuthenticationManager`의 인스턴스로 전달됩니다.\n- `AuthenticationManager`는 인증에 성공하면 `Authentication` 인스턴스를 리턴합니다.\n- 이 `Authentication` 인스턴스는 `SecurityContextHolder`에 저장됩니다.\n\n**UsernamePasswordAuthenticationToken**\n\n- `Authentication`을 `implements`한 `AbstractAuthenticationToken`의 하위 클래스로 `username`이 `Principal`의 역할을 하고, `password`가 `Credential`의 역할을 합니다.\n- 첫번째 생성자는 인증 전의 객체를 생성하고, 두번째 생성자는 인증이 완료된 객체를 생성해줍니다.\n\n```java\npublic class UsernamePasswordAuthenticationToken extends AbstractAuthenticationToken {\n    // 주로 사용자의 username에 해당함\n    private final Object principal;\n    // 주로 사용자의 password에 해당함\n    private Object credentials;\n    \n    // 인증 완료 전의 객체 생성\n    public UsernamePasswordAuthenticationToken(Object principal, Object credentials) {\n		super(null);\n		this.principal = principal;\n		this.credentials = credentials;\n		setAuthenticated(false);\n	}\n    \n    // 인증 완료 후의 객체 생성\n    public UsernamePasswordAuthenticationToken(Object principal, Object credentials,\n			Collection<? extends GrantedAuthority> authorities) {\n		super(authorities);\n		this.principal = principal;\n		this.credentials = credentials;\n		super.setAuthenticated(true); // must use super, as we override\n	}\n}\n```\n\n**AuthenticationProvider**\n\n- 실제 인증에 대한 부분을 처리하는데, 인증 전의 `Authentication` 객체를 받아서 인증이 완료된 객체를 반환하는 역할을 합니다.\n\n**AuthenticationManager**\n\n- 인증에 대한 부분은 `AuthenticationManager`를 통해서 처리하게 되는데, 실질적으로는 `AuthenticationManager`에 등록된 `AuthenticationProvider`에 의해 처리됩니다.\n- 인증이 성공하면 `isAuthenticated=true` 인 객체를 생성하여 `SecurityContext`에 저장합니다.\n- 실패할 경우에는 `AuthenticationException`을 발생시킵니다.\n- `DaoAuthenticationProvider`는 `AbstractUserDetailsAuthenticationProvider`를 상속받아 실제 인증 과정에 대한 로직을 처리합니다.\n- `AuthenticationManager`에 `DaoAuthenticationProvider`를 등록하는 방법은 `WebSecurityConfigurerAdapter`를 상속해 만든 `ApplicationSecurityConfig`에서 할수 있습니다.\n\n```java\n@Configuration\n@EnableWebSecurity\npublic class ApplicationSecurityConfig extends WebSecurityConfigurerAdapter {\n\n  private final PasswordEncoder passwordEncoder;\n\n  @Autowired\n  public ApplicationSecurityConfig(PasswordEncoder passwordEncoder,) {\n    this.passwordEncoder = passwordEncoder;\n  }\n\n  @Override\n  protected void configure(AuthenticationManagerBuilder auth) throws Exception {\n    auth.authenticationProvider(daoAuthenticationProvider());\n  }\n\n  @Bean\n  public DaoAuthenticationProvider daoAuthenticationProvider() {\n    DaoAuthenticationProvider provider = new DaoAuthenticationProvider();\n    provider.setPasswordEncoder(passwordEncoder);\n    provider.setUserDetailsService(applicationUserService);\n\n    return provider;\n  }\n}\n```\n\n**UserDetails**\n\n- 인증에 성공하여 생성된 `UserDetails` 객체는 `UsernamePasswordAuthenticationToken`을 생성하기 위해 사용됩니다.\n- `UserDetails` 인터페이스의 경우 직접 개발한 `ApplicationUser`에 `UserDetails`를 implements하여 사용하면 됩니다\n\n**UserDetailsService**\n\n- `UserDetails` 객체를 반환하는 단 하나의 메소드를 가지고 있는데, 일반적으로 이를 구현한 클래스의 내부에 `UserRepository`를 주입받아 DB에 연결하여 처리합니다.\n\n**GrantedAuthority**\n\n- 현재 사용자(Principal)가 가지고 있는 권한들입니다.\n- 보통 `ROLE_ADMIN`, `ROLE_USER`와 같이 `ROLE_`의 형태로 사용됩니다.',3,'2021-02-18 00:03:27','http://3.36.125.70/thumbimg/ed61bb71-0bd7-46f7-a4a4-8933f8d65970_springboot.png'),(289,'Vue에서 모달 컴포넌트 만들기','easydeveloper1@naver.com','## Vue.js 모달 컴포넌트 만들기\n\nVue 프로젝트 진행 중 모달 창을 구현해야할 일이 생겼다. 지난 번 프로젝트에서는 급히 기능을 구현하기 위해 `Vuetify` 를 사용했는데, 이번에는 직접 구현해봐야 겠다는 생각이 들어 이것저것 리서치를 해보다 Vue로 구현된 모달 창에서 `<template>` 이나 `<slot>` 혹은 `<transition>` 과 `enter/leave` 같은 생소한 태그나 개념을 접하게 되어서 공부해보고, 이를 컴포넌트화 해서 제작해 보았다.\n\n구체적인 개념 설명 없이 바로 예제 코드로 들어갈 것이므로, 예제 코드에서 처음 보는 개념이나 태그에 관해서는 아래 공식 문서를 참조하길 바란다.\n\n1. [transition 태그와enter/leave 개념](https://kr.vuejs.org/v2/guide/transitions.html)\n2. [slot 과 template 태그](https://kr.vuejs.org/v2/guide/components-slots.html)\n\n### 예제 코드\n\n*주의 : 프로젝트에서 Vue 2.6.11, composition API + Typescript + SCSS 조합을 사용했고, 이에 관해서 별도로 설명하지 않음, 예제 코드는 각자 상황에 맞게 변형하여 이용*\n\n상황 : `회원가입 페이지`에서 `광고 동의 버튼`을 누를 시에 약관 규정을 보여주는 모달 창을 구현\n\n#### 구현 모습\n\n![img](https://media.vlpt.us/images/harrycod/post/5c1dd2bc-8647-4197-b9c4-ee13121bfd16/%E1%84%86%E1%85%A9%E1%84%83%E1%85%A1%E1%86%AF%E1%84%8E%E1%85%A1%E1%86%BC%E1%84%80%E1%85%AE%E1%84%92%E1%85%A7%E1%86%AB.gif)\n\n#### 자식 컴포넌트(Modal.vue)\n\n```vue\n//Modal.vue\n<template>\n	// transition 문법은 상단 문서 참고\n  <transition name=\"modal\" appear>\n    <section class=\"modal\">\n      <div class=\"modal__window\">\n        <div class=\"modal__title\">\n          <slot name=\"title\" />\n        </div>\n        <div class=\"modal__content\">\n          <slot name=\"content\" />\n        </div>\n        <div class=\"modal__footer\">\n          <slot name=\"footer\" />\n        </div>\n      </div>\n      <div class=\"modal__overlay\" @click.self=\"$emit(\'close\')\"></div>\n    </section>\n  </transition>\n</template>\n\n<style lang=\"scss\">\n.modal {\n  position: absolute;\n  display: flex;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n  \n  &__overlay {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n\n    background-color: black;\n    opacity: 0.8;\n  }\n\n  &__window {\n    width: 30rem;\n    height: 40rem;\n    border-radius: 0.4rem;\n    overflow: hidden;\n    padding: 1rem;\n    z-index: 1;\n\n    background-color: white;\n  }\n\n  &__title {\n  }\n\n  &__content {\n  }\n\n  &__footer {\n  }\n\n	// 상황에 따라 transition 변경가능 enter,leave class는 상단 문서 참고\n  &-enter,\n  &-leave-to {\n    opacity: 0;\n    transition: opacity 0.4s ease;\n  }\n\n  &-enter-to,\n  &-leave {\n    transition: opacity 0.4s ease;\n  }\n}\n</style>\n```\n\n#### 부모 컴포넌트(Signup.vue)\n\n```vue\n// Signup.vue\n<template>\n	<section>\n    <!-- \n			광고수신 동의 체크박스\n			BoxAgreement는 커스텀 컴포넌트로 동의 여부를 묻는 버튼 정도로 생각\n		-->\n    <BoxAgreement\n      @click.native=\"controlModal(true)\"\n    />\n    <!-- \n			광고 동의 모달 starts \n			상황에 따라 내용 변경가능, template 태그는 상단 문서 참고\n		-->\n    <Modal @close=\"controlModal(false)\" v-if=\"isModalOpen\">\n      <!-- header slot starts -->\n      <template #title>\n        <div>타이틀</div>\n      </template>\n\n      <!-- content slot starts -->\n      <template #content>\n        <p>콘텐츠 내용</p>\n      </template>\n\n      <!-- footer slot starts -->\n      <template #footer>\n        <button @click=\"controlModal(false)\">동의</button>\n      </template>\n    </Modal>\n\n  </section>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from \"@vue/composition-api\";\nimport BoxAgreement from \"@/components/Elements/Agreement-Box.vue\";\nimport Modal from \"@/components/Elements/Modal.vue\";\nexport default defineComponent({\n  components: {\n    BoxAgreement,\n    Modal,\n  },\n  setup() {\n    const marketingAgree = ref(false);\n    const isModalOpen = ref(false);\n\n    const controlModal = (state: boolean) => {\n      isModalOpen.value = state;\n    };\n\n    return {\n      marketingAgree,\n      isModalOpen,\n      controlModal,\n    };\n  },\n});\n</script>\n```\n\n',8,'2020-12-24 23:59:59','http://3.36.125.70/thumbimg/03851aa3-431c-4cac-9429-f8db491ed50b_vue 모달.gif'),(290,'Heroku 서버로 배포하기','easydeveloper1@naver.com','> ### Heroku\n>\n> Heroku 는 간단히 git을 통해 무료로 웹사이트를 호스팅할 수 있게 해주는 서비스\n>\n> > 무료인 이유\n> > 해당 도메인으로 30분간 요청이 없을 경우, sleep으로 전환해 초기 접속이 늦어짐(10~30초)\n> > 웹사이트가 하루에 6시간동안 꺼져있어야 함(18시간이 작동하고 있었으면, 6시간은 접속되지 않음)\n> > 한 계정당 한달의 550시간만 사용 가능\n>\n> 한 아이디로 5개까지 웹사이트 등록 가능\n> heroku는 git을 사용 -> 로컬의 git 저장소 코드를 서버에 올리게 됨\n\napp name을 등록하게 되면 `https://[appname].herokuapp.com/` 도메인 이름으로 사이트가 배포됨\n[Heroku CLI INSTALL](https://devcenter.heroku.com/articles/getting-started-with-nodejs#set-up)\n\nHeroku CLI가 설치되면 `heroku`로 시작하는 명령어를 사용할 수 있게 됨\n\n> **명령어**\n>\n> ```shell\n> $ heroku login\n> $ heroku git:remote -a [appname]\n> $ git push heroku master # 서버 배포\n> $ heroku logs # 로그 보기\n> ```\n\n> ### ClearDB MySQL 연동\n>\n> 먼저 addons를 이용해 install을 진행해야 한다(이때 카드 등록을 해야 가능)\n> 그 후 `heroku config` 명령어를 통해, 해당 정보를 알아내자\n> 출력내용\n>\n> ```null\n> CLEARDB_DATABASE_URL: mysql://username:password@hostname/database_name?reconnect=true\n> ```\n>\n> 그 후, 명령어를 입력하자\n>\n> ```null\n> heroku config:set DATABASE_URL=\'mysql://username:password@hostname/database_name?reconnect=true\'\n> ```\n>\n> 다시 `heroku config` 명령하면,\n>\n> ```null\n> === AppName Config Vars\n> CLEARDB_DATABASE_URL: mysql://username:password@hostname/database_name?reconnect=true\n> DATABASE_URL:         \'mysql://username:password@hostname/database_name?reconnect=true\'\n> ```\n>\n> **스프링부트** application.yml\n>\n> ```null\n> spring:\n>   datasource:\n>     driver-class-name: com.mysql.jdbc.Driver\n>     url: \n>     username:  	\n>     password: \n> ```\n>\n> 위의 정보를 대입하면 된다\n\n#### Timezone 설정\n\n```null\nheroku config:add TZ=\"Asia/Seoul\" --app slack-clone-0\n```\n\n',3,'2020-12-25 17:30:12','http://3.36.125.70/thumbimg/8d4f2e48-4a87-42d1-8081-d7a865d4cc86_heroku.png'),(291,'프론트엔드 면접 질문 - HTML','easydeveloper2@naver.com','![post-thumbnail](https://media.vlpt.us/post-images/chris/98190dc0-4e5b-11e9-a8b9-b34a3b0dfaf4/ogimage.png)\n\n이 글은 프론트엔드 직무 면접 질문과 관련된 Github 저장소 [front-end-interview-handbook](https://github.com/yangshun/front-end-interview-handbook) 번역본으로, 저장소에 [Translations](https://github.com/yangshun/front-end-interview-handbook/tree/master/Translations/Korean) 폴더의 내용과 동일합니다.\n\n------\n\n# HTML 질문\n\n[프론트엔드 면접 질문 - HTML 질문](https://github.com/h5bp/Front-end-Developer-Interview-Questions/blob/master/questions/html-questions.md)에 대한 해설입니다.\nPull Request를 통한 제안, 수정 요청 환영합니다.\n\n- [`DOCTYPE`은 무엇을 하나요?](https://velog.io/@chris/front-end-interview-handbook-html#doctype은-무엇을-하나요)\n- [여러 언어로 되어 있는 콘텐츠의 페이지를 어떻게 제공하나요?](https://velog.io/@chris/front-end-interview-handbook-html#여러-언어로-되어-있는-콘텐츠의-페이지를-어떻게-제공하나요)\n- [다국어 사이트를 디자인하거나 개발할 때 주의해야할 사항은 무엇인가요?](https://velog.io/@chris/front-end-interview-handbook-html#다국어-사이트를-디자인하거나-개발할-때-주의해야할-사항은-무엇인가요)\n- [`data-`속성은 무엇에 좋은가요?](https://velog.io/@chris/front-end-interview-handbook-html#data--속성은-무엇에-좋은가요)\n- [HTML5를 개방형 웹 플랫폼으로 간주할 때, HTML5의 구성 요소는 무엇인가요?](https://velog.io/@chris/front-end-interview-handbook-html#html5를-개방형-웹-플랫폼으로-간주할-때-html5의-구성-요소는-무엇인가요)\n- [`cookie`, `sessionStorage`, `localStorage` 사이의 차이점을 설명하세요.](https://velog.io/@chris/front-end-interview-handbook-html#cookie-sessionstorage-localstorage-사이의-차이점을-설명하세요)\n- [``, `<script async>`, `<script defer>` 사이의 차이점을 설명하세요.](https://velog.io/@chris/front-end-interview-handbook-html#script-script-async-script-defer-사이의-차이점을-설명하세요)\n- [왜 일반적으로 CSS `` 태그를 `` 태그 사이에 위치시키고, JS `` 태그를 `</body>` 직전에 위치시키는 것이 좋은 방법인가요? 다른 예외적인 상황을 알고있나요?](https://velog.io/@chris/front-end-interview-handbook-html#왜-일반적으로-css-link-태그를-headhead-태그-사이에-위치시키고-js-script-태그를-body-직전에-위치시키는-것이-좋은-방법인가요-다른-예외적인-상황을-알고있나요)\n- [프로그레시브 렌더링이 무엇인가요?](https://velog.io/@chris/front-end-interview-handbook-html#프로그레시브-렌더링이-무엇인가요)\n- [이미지 태그에 `srcset` 속성을 사용하는 이유는 무엇인가요? 이 속성의 컨텐츠를 실행할 때 브라우저의 프로세스를 설명하세요.](https://velog.io/@chris/front-end-interview-handbook-html#이미지-태그에-srcset-속성을-사용하는-이유는-무엇인가요-이-속성의-컨텐츠를-실행할-때-브라우저의-프로세스를-설명하세요)\n- [다른 HTML 템플릿 언어를 사용해본 적이 있나요?](https://velog.io/@chris/front-end-interview-handbook-html#다른-html-템플릿-언어를-사용해본-적이-있나요)\n\n### `DOCTYPE`은 무엇을 하나요?\n\n**DOCTYPE**은 **document type**의 약어입니다.\n**DOCTYPE**은 항상 **DTD(Document Type Definition)**와 관련됩니다.\n\n**DTD**는 특정 문서가 어떻게 구성되어야 하는지 정의합니다(예시: `button`은 `span`을 포함할 수 있지만, `div`는 그럴 수 없다.), 반면, **DOCTYPE**은 문서가 *대략* 존중할만한 **DTD**를 선언합니다. (예시: 이 문서는 HTML DTD를 존중한다.)\n\n웹 페이지의는 DOCTYPE 선언이 필요합니다. 유저 에이전트에게 문서가 존중하는 HTML 사양의 버전을 알리는데 사용됩니다.\n유저 에이전트가 올바른 DOCTYPE을 인식하면, 문서를 읽는데에 DOCTYPE과 일치하는 **no-quirks mode**를 트리거합니다.\n유저 에이전트가 올바른 DOCTYPE을 인식하지 못하면, **quirks mode**를 트리거합니다.\n\nHTML5 표준에 대한 DOCTYPE 선언은 `<!DOCTYPE html>`입니다.\n\n###### 참고자료\n\n- https://html.spec.whatwg.org/multipage/syntax.html#the-doctype\n- https://html.spec.whatwg.org/multipage/xhtml.html\n- https://quirks.spec.whatwg.org/\n\n[[↑\\] Back to top](https://velog.io/@chris/front-end-interview-handbook-html#html-질문)\n\n### 여러 언어로 되어 있는 콘텐츠의 페이지를 어떻게 제공하나요?\n\n이 질문은 다소 모호합니다. 여러 언어로 제공되는 내용의 페이지를 제공하는 방법에 대한, 가장 일반적인 경우에 대해 묻고 있다고 가정합니다. 하지만 페이지 내의 내용은 하나의 일관된 언어로만 표시되어야합니다.\n\nHTTP 요청을 서버에 보내면, 대개 요청하는 유저 에이전트가 `Accept-Language` 헤더와 같은 기본 언어 설정에 대한 정보를 보냅니다. 그 다음 서버는 이 정보를 사용하여 해당 언어가 제공 가능한 경우, 해당 언어 버전의 문서를 반환할 수 있습니다. 반환된 HTML 문서는 `<html lang=\"en\">...</html>`과 같이 `<html>` 태그에 `lang` 속성을 선언해야 합니다.\n\n백엔드에서, HTML 마크업은 YML 또는 JSON 형식으로 저장된 특정 언어에 대한 `i18n` placeholder와 내용을 포함합니다. 그 다음 서버는 일반적으로 백엔드 프레임워크의 도움을 받아 특정 언어로 HTML 페이지를 동적 생성합니다.\n\n###### 참고자료\n\n- https://www.w3.org/International/getting-started/language\n\n[[↑\\] Back to top](https://velog.io/@chris/front-end-interview-handbook-html#html-질문)\n\n### 다국어 사이트를 디자인하거나 개발할 때 주의해야할 사항은 무엇인가요?\n\n- HTML에 `lang` 속성을 사용합니다.\n- 사용자를 그들의 모국어로 안내합니다 - 사용자가 번거롭지 않도록 쉽게 국가/언어를 변경할 수 있도록 합니다.\n- 텍스트를 포함한 이미지를 사용하는 것은 확장가능한 접근이 아닙니다 - 이미지에 텍스트를 배치하는 것은 잘 보이고 시스템 글꼴이 아닌 글꼴을 모든 컴퓨터에 표시하는데 여전히 널리 사용되는 방법입니다. 그러나 이미지에 텍스트를 번역하려면, 텍스트 문자열에 각 언어에 대해 만들어진 별도 이미지가 필요합니다. 이 같은 대체 방식이 늘어나면 금방 통제가 어려워집니다.\n- 단어/문장 길이 제한 - 일부 언어는 다른 언어로 작성될 때 더 길어질 수도 있습니다. 디자인에 레이아웃이나 오버 플로우 문제 발생에 주의하세요. 디자인에 필요한 텍스트의 양을 정하거나, 디자인이 꺠질 수 있는 디자인은 하지 않도록 하는 것이 가장 좋습니다. 문자 수 제한은 제목, 레이블, 버튼과 같은 항목에서 사용됩니다. 본문이나 댓글과 같이 자유롭게 흐르는 텍스트에 대해서는 문제가 되지 않습니다.\n- 색상이 어떻게 이해될지에 대해 주의 깊게보세요 - 색상은 언어와 문화에 따라 다르게 인식됩니다. 적절한 색상을 사용하여 디자인해야 합니다.\n- 날짜와 통화 형식 - 날짜는 종종 다른 방식으로 표현됩니다. 예) 미국의 \"May 31, 2012\" vs. 유럽의 \"31 May 2012\".\n- 번역된 문자열을 연결하지 않습니다 - `\"오늘의 날짜는 \" + date + \"입니다\"` 와 같은 것은 하지마세요. 단어의 순서가 다른 언어에서는 문자가 망가지게됩니다. 대신 각 언어에 대한 매개변수와 함께 템플릿 스트링을 사용하세요. 예를 들면, 영어와 한국어로된 다음 두 문장을 보세요. `I will travel on {% date %}`, `나는 {% date %}에 여행 갈거야`. 변수의 위치는 언어의 문법에 따라 달라집니다.\n- 언어를 읽는 방향 - 영어는 왼쪽에서 오른쪽으로, 위에서 아래로 읽지만, 전통적인 일본어는 위에서 아래로, 오른쪽에서 왼쪽으로 읽습니다.\n\n###### 참고자료\n\n- https://www.quora.com/What-kind-of-things-one-should-be-wary-of-when-designing-or-developing-for-multilingual-sites\n\n[[↑\\] Back to top](https://velog.io/@chris/front-end-interview-handbook-html#html-질문)\n\n### `data-`속성은 무엇에 좋은가요?\n\nJavaScript 프레임워크가 인기있기 전에, 프론트엔드 개발자는 비표준 속성, DOM 추가 프로퍼티 등의 조작없이, DOM 자체에 추가적인 데이터를 저장하기 위해 `data-`속성을 사용했었습니다. 이는 적절한 속성이나 요소가 없는 페이지나 애플리케이션에 사용자정의 데이터를 비공개로 저장하기 위한 것입니다.\n\n요즘에는, `data-`속성을 사용하는 것을 권장하지 않습니다. 그 이유 중 하나는 사용자가 브라우저의 inspect 기능를 사용하여 데이터 속성을 쉽게 수정할 수 있다는 것입니다. 데이터 모델은 JavaScript 자체에 더 잘 저장되며, 라이브러리나 프레임워크의 데이터 바인딩을 통해 DOM을 업데이트된 상태로 유지하는 것이 더 낫습니다.\n\n###### 참고자료\n\n- http://html5doctor.com/html5-custom-data-attributes/\n- https://www.w3.org/TR/html5/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes\n\n[[↑\\] Back to top](https://velog.io/@chris/front-end-interview-handbook-html#html-질문)\n\n### HTML5를 개방형 웹 플랫폼으로 간주할 때, HTML5의 구성 요소는 무엇인가요?\n\n- 의미 - 콘텐츠를 보다 더 정확하게 설명할 수 있도록 허용합니다.\n- 연결 - 새롭고 혁신적인 방법으로 서버와 통신할 수 있도록 허용합니다.\n- 오프라인과 저장소 - 웹 페이지가 클라이언트 측에서 데이터를 로컬로 저장하여, 오프라인에서보다 효율적으로 작동하도록 허용합니다.\n- 멀티미디어 - 개방형 웹에서 비디오와 오디오를 일급으로 만듭니다.\n- 2D/3D 그래픽과 효과 - 훨씬 다양한 프레젠테이션 옵션을 허용합니다.\n- 성능과 통합 - 컴퓨터 하드웨어의 성능 최적화와 개선으로 더 나은 사용을 제공합니다.\n- 장치 접근 - 다양한 입출력 장치의 사용을 허용합니다.\n- 스타일링 - 사용자가 더 세련된 테마를 사용하게 합니다.\n\n###### 참고자료\n\n- https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5\n\n[[↑\\] Back to top](https://velog.io/@chris/front-end-interview-handbook-html#html-질문)\n\n### `cookie`, `sessionStorage`, `localStorage` 사이의 차이점을 설명하세요.\n\n위 세 가지 기술은 모두 클라이언트 측에서 값을 저장하는 key-value 저장소 매커니즘입니다. 모두 문자열로만 값을 저장할 수 있습니다.\n\n|                                   | `cookie`                                                     | `localStorage` | `sessionStorage` |\n| --------------------------------- | ------------------------------------------------------------ | -------------- | ---------------- |\n| 생성자                            | 클라이언트나 서버. 서버는 `Set-Cookie` 헤더를 사용할 수 있습니다 | 클라이언트     | 클라이언트       |\n| 만료                              | 수동으로 설정                                                | 영구적         | 탭을 닫을 때     |\n| 브라우저 세션 전체에서 지속       | 만료 설정 여부에 따라 다름                                   | O              | X                |\n| 모든 HTTP 요청과 함께 서버로 보냄 | 쿠키는 `Cookie` 헤더를 통해 자동 전송됨                      | X              | X                |\n| 용량 (도메인당)                   | 4kb                                                          | 5MB            | 5MB              |\n| 접근성                            | 모든 윈도우                                                  | 모든 윈도우    | 같은 탭          |\n\n\n\n------',1,'2021-02-18 00:13:13','http://3.36.125.70/thumbimg/a7169a57-e822-4ce9-9bac-10808e988679_ogimage.png'),(292,'[CSS] CSS 기초','easydeveloper2@naver.com','## 1. margin, padding, border\n\n### (1). margin, padding 속성 순서\n\n- 속성을 네 개 넣는 경우 : top → right → bottom → left\n- 속성을 세 개 넣는 경우 : top → (left & right) → bottom\n- 속성을 두 개 넣는 경우 : (top & bottom) → (left & right)\n  → 이 경우 `margin: 0 auto`로 설정하면 가운데 정렬이 된다.\n\n```css\nmargin: 10px 5px 7px 5px\n```\n\n### (2).border 순서: 두께 선스타일 색깔;\n\n```css\nborder: 1px solid red;\n```\n\n- 꿀팁: `text-decoration: underline`을 border-bottom 으로 사용할 수 있다.\n  → 내가 원하는대로 디자인할 수 있다는 장점 정도...??\n\n  \n\n### (3).Border-box\n\n> ![img](https://media.vlpt.us/images/hayyim0626/post/37be3cc7-a5cc-4c66-a5c2-7b25a0ec1105/box-sizing.jpg)\n\n특정 엘리먼트가 padding이나 margin, border값을 가진 경우 처음 예상과는 달리 사이즈가 달라지는 경우가 있다.\n이 때 `box-sizing: border-box;`를 설정하게 되면 border를 기준으로 width, height값이 정렬되고 개발자는 일일이 영역을 계산해야하는 번거로움을 덜 수 있다.\n따라서 CSS를 작성할 때 웹페이지의 전체 태그를 의미하는 *(Asterisk)를 사용하여 border-box를 지정한다.\n\n```css\n  * {\n  box-sizing: border-box;\n  }\n```\n\n## 2. Grouping\n\n### 여러 태그나 클래스에 같은 스타일을 적용하는 방법\n\n```css\n.className, p, span {\n	color: green;\n    	width: 200px;\n}\n```\n\n## 3. Selector\n\n### (1).여러 selector 안에 있는 element에 접근하고자 할 때\n\n```css\n.container p .title {\n  font-size: 50px;\n}\n// container클래스 안의 p태그 안의 title클래스\n```\n\n### (2).class나 id가 selector일 때 태그와 결합할 수 있다.\n\n```css\np.pTag {\n  color: gray;	// p 태그이면서 pTag라는 클래스 이름을 가짐\n}\np#thirdLine {\n  text-decoration: underline;	// p 태그이면서 thirdLine이라는 아이디를 가짐\n}				//그러나 아이디가 지정된 경우 앞에 태그를 굳이 쓰지 않아도 됨.\n```\n\n### (3).CSS specify\n\ntag(1) <<< class(10) <<< id(100) <<< inline styling(1000)\n\n## 4. Block vs Inline\n\n### (1).자주 쓰는 Inline elements\n\n-대표적인 Inline elements : `<span>` `<a>` `<img>`\n-줄바꿈 없이 다른 element들과 나란히 배치됨.\n-해당 태그가 마크업하고 있는 요소의 크기만큼만 공간을 차지하기 때문에 `width` , `height` 속성을 지정해도 무시함.\n-`margin` , `padding`의 경우 좌우만 반영이 되고 상하는 반영이 안됨.\n\n### (2).자주 쓰는 Block elements\n\n-대표적인 Block elements : `<div>` `<p>` `<h1>`\n-줄바꿈이 되어 element를 다음 줄로 밀어냄.\n-inline element와는 다르게 `width`, `height`, `margin`, `padding` 속성이 모두 반영\n\n**그렇다면 Block elements를 Inline으로, Inline elements를 Block으로 어떻게 바꿀 수 있을까?**\n\n- Block → Inline: display, ~~float(요즘엔 잘 안씀)~~, **flex(요즘 대세!)**\n\n```css\n.inline-p {\n  display: inline-block;\n}\n.float-left {\n  float: left;\n}\n```\n\n- 반대의 경우\n\n```css\n.blockSpan {\n  display: block;\n}\n```\n\n- none: interactive한 웹을 구현하는 방법\n\n### 5. List\n\n목록 중에서 selector를 표기하는 방법\n\n```css\nselector: first-child{} - 첫번째 순서\nselector: last-child{} - 마지막 순서\nselector: nth-child(odd){} - 홀수\nselector: nth-child(even){} - 짝수\n```\n\n### 6. Input\n\n```css\n<type = \"text or number or password\" placeholder = \"도움말\">\n- input, button, textarea등은 inline 속성. 이를 block으로 바꾸기 위해서 <div>이용\n```\n\n- slelctor\n  https://www.w3schools.com/cssref/css_selectors.asp\n  여기 부분 다시 정리하기!!\n\n### 7. Position\n\nrelative, absolute, fixed\n\n### 8. Nav Bar\n\n계속 추가 예정',1,'2021-02-18 00:15:00','http://3.36.125.70/thumbimg/9302dca1-6a4c-4a49-b514-8ebce02f2348_html&css.png'),(293,'[React] React 기본 개념','easydeveloper2@naver.com','## 1. Why React?\n\n**애플리케이션의 규모가 커지고 다양한 UI(User Interface), UX(User Experience)를 구현**함에 따라 기존의 DOM과 jQuery로 **다양한 애플리케이션을 개발**하고 **코드를 유지보수** 하는 것이 한계점에 이르렀다.\n\n이에 따라 많은 양의 데이터를 관리하고 코드의 유지, 보수를 편리하게 하기 위해 **다양한 Framework(Library)가 등장**하게 되었는데 그 중 가장 많이 쓰이는 세 가지가 React, Vue, Angular 이다.\n![img](https://media.vlpt.us/images/hayyim0626/post/8188388a-9b0b-4c6f-83e5-2879a90e7ea9/angular-vs-react-vs-vuejs.png)\n\n## 2. What is React?\n\nReact는 페이스북에서 개발하고 관리하는 **사용자 인터페이스(UI)를 만들기 위한 JS 라이브러리**다.\nFrontEnd Library 또는 Framework를 사용하는 가장 큰 이유 중 하나는 UI를 자동으로 업데이트 해준다는 것인데,\nReact는 가상 돔(Virtual Dom)을 통해 UI를 빠르게 업데이트 한다.\n가상 돔은 **이전 상태의 UI를 메모리에 유지하고, 변경되는 UI의 최소 집합을 계산**함으로써 불필요한 UI업데이트를 줄이고 보다 나은 성능을 가능하게 만들었다.\n\n## 3. Node.js & npm?\n\n![img](https://media.vlpt.us/images/hayyim0626/post/6e9a6d32-3184-4fed-b5ea-d2c21fb708df/nodejs%20and%20npm.png)\n\n### Node.js\n\n**Node.js 는 자바스크립트가 브라우저 밖(ex. 서버)에서도 동작하게 하는 환경을 의미**한다.\n사실상 React는 브라우저 내에서 실행되는 코드이기 때문에 Node.js와 직접적인 연관은 없으나 프로젝트를 개발하는데 필요한 주요 도구들이 Node.js기반이기 때문에 필수적으로 설치해야 한다.\nNode.js를 설치하게 되면 npm이 자동으로 설치되게 되는데 npm을 사용하기 위해서는 Node.js가 반드시 설치되어 있어야 한다.\n\n### npm\n\nNode 기반의 패키지를 사용하려면 npm(node package manager)이 필요하다.\nnpm을 통해 다양한 패키지를 설치하고 버전을 관리할 수 있다.\n\n## 4. CRA(Create React App)\n\nCRA는 **리액트로 웹 애플리케이선을 만드는데 필요한 개발 환경을 세팅해주는 toolchain**이다.\nCRA를 통해 기존 기능을 개선하거나 새로운 기능을 추가했을 때 패키지 버전만 올리면 된다는 장점이 있다.\nCRA를 설치하게 되면 초기 폴더 구성은 다음과 같다.\n![img](https://media.vlpt.us/images/hayyim0626/post/fde39561-a364-4c5d-b1b8-f71ba6f522e8/%EC%B4%88%EA%B8%B0%EC%84%A4%EC%B9%98.png)\n\n### node.modules - package.json - .gitignore\n\n**1) node.modules**\n\n- CRA 를 구성하는 모든 패키지 소스 코드가 존재하는 폴더\n\n**2) package.json**\n\n- CRA 기본 패키지 외 추가로 설치된 라이브러리/패키지 정보(종류, 버전)가 기록되는 파일\n- 모든 프로젝트마다 package.json 하나씩 존재\n- 참고) [package.json vs. package-lock.json](https://www.youtube.com/watch?v=P2CtFD6xa54)\n\n**3) .gitignore**\n\n- `.gitignore` 파일에 github 에 올리고 싶지 않은 폴더와 파일을 작성할 수 있다.\n- `push` 를 해도 `.gitignore` 파일에 작성된 폴더와 파일은 올라가지 않는다.',0,'2021-02-18 00:15:51','http://3.36.125.70/thumbimg/678f84f1-a94a-4165-96f1-be9234c8a956_react.jpg'),(294,'리액트의 Hooks 완벽 정복하기','easydeveloper2@naver.com','Hooks 는 리액트 v16.8 에 새로 도입된 기능으로서, 함수형 컴포넌트에서도 상태 관리를 할 수 있는 useState, 그리고 렌더링 직후 작업을 설정하는 useEffect 등의 기능등을 제공하여 기존의 함수형 컴포넌트에서 할 수 없었던 다양한 작업을 할 수 있게 해줍니다.\n\n이번 튜토리얼을 진행하기 위하여 create-react-app 을 사용하여 새로운 프로젝트를 생성해주세요.\n\n```bash\n$ yarn create react-app hooks-tutorial\n```\n\n## 1. useState\n\nuseState 는 가장 기본적인 Hook 으로서, 함수형 컴포넌트에서도 가변적인 상태를 지니고 있을 수 있게 해줍니다. 만약에 함수형 컴포넌트에서 상태를 관리해야 되는 일이 발생한다면 이 Hook 을 사용하시면 됩니다.\n\n한번 이 기능을 사용해서 숫자 카운터를 구현해보겠습니다.\n\nsrc 디렉터리에 Counter.js 파일을 생성하고 다음 코드를 입력해보세요.\n\n#### Counter.js\n\n```javascript\nimport React, { useState } from \'react\';\n\nconst Counter = () => {\n  const [value, setValue] = useState(0);\n  return (\n    <div>\n      <p>\n        현재 카운터 값은 <b>{value}</b> 입니다.\n      </p>\n      <button onClick={() => setValue(value + 1)}>+1</button>\n      <button onClick={() => setValue(value - 1)}>-1</button>\n    </div>\n  );\n};\n```\n\nuseState 를 사용 할 땐 코드의 상단에서 import 구문을 통하여 불러오고, 다음과 같이 사용합니다.\n\n```javascript\nconst [value, setValue] = useState(0);\n```\n\n이러한 문법을 처음 보셔서 헷갈릴 수도 있을 것 입니다. 이 문법은 배열 비구조화 할당 문법입니다. 다음 코드는 배열 비구조화 할당의 더 쉬운 예제입니다.\n\n```javascript\nconst array = [\'dog\', \'cat\', \'sheep\'];\nconst [first, second] = array;\nconsole.log(first, second); // dog cat\n```\n\n이제 다시 useState Hook 을 이해 해보자면, 이 함수의 파라미터에는 상태의 기본값을 넣어줍니다. 우리는 현재 0 을 넣어줬는데, 결국 카운터의 기본값을 0 으로 설정하겠다는 의미입니다. 이 함수가 호출되고 나면 배열을 반환하는데요, 그 배열의 첫번째 원소는 상태 값이고, 두번째 원소는 상태를 설정하는 함수입니다. 이 함수에 파라미터를 넣어서 호출하게 되면 전달받은 파라미터로 값이 바뀌게 되고 컴포넌트는 정상적으로 리렌더링 됩니다.\n\n코드를 다 작성하고, 이해하셨다면 App 컴포넌트를 열어서 기존에 보여주고 있던 내용을 다 지우시고 Counter 컴포넌트를 렌더링하세요.\n\n#### App.js\n\n```javascript\nimport React from \'react\';\nimport Counter from \'./Counter\';\n\nconst App = () => {\n  return <Counter />;\n};\n\nexport default App;\n```\n\n그리고, 터미널에 yarn start 명령어를 입력하여 개발 서버를 구동하세요.\n\n![img](https://i.imgur.com/YQDbZiJ.png)\n\n카운터가 잘 작동하나요? 어떤가요? 함수형 컴포넌트에서 상태 관리를 하기 위하여 굳이 클래스 형태로 변환 할 필요가 없어서 매우 편리하죠?\n\n### 1.1 useState 를 여러번 사용하기\n\n하나의 useState 함수는 하나의 상태 값만 관리를 할 수 있기 때문에 만약에 컴포넌트에서 관리해야 할 상태가 여러 개라면 useState 를 여러번 사용하시면 됩니다.\n\n이번에는 src 디렉터리에 Info.js 파일을 생성하여 다음 코드를 작성해보세요.\n\n#### Info.js\n\n```javascript\nimport React, { useState } from \'react\';\n\nconst Info = () => {\n  const [name, setName] = useState(\'\');\n  const [nickname, setNickname] = useState(\'\');\n\n  const onChangeName = e => {\n    setName(e.target.value);\n  };\n\n  const onChangeNickname = e => {\n    setNickname(e.target.value);\n  };\n\n  return (\n    <div>\n      <div>\n        <input value={name} onChange={onChangeName} />\n        <input value={nickname} onChange={onChangeNickname} />\n      </div>\n      <div>\n        <div>\n          <b>이름:</b> {name}\n        </div>\n        <div>\n          <b>닉네임: </b>\n          {nickname}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Info;\n```\n\n그 다음엔 App 컴포넌트에서 이 컴포넌트를 렌더링해보세요.\n\n#### App.js\n\n```javascript\nimport React from \'react\';\nimport Info from \'./Info\';\n\nconst App = () => {\n  return <Info />;\n};\n\nexport default App;\n```\n\n이제 화면을 확인해볼까요?\n\n![img](https://i.imgur.com/w4VAmif.png)\n\n관리할 상태가 여러개인 경우에도, useState 로 편하게 관리 할 수 있겟죠?\n\n## 2. useEffect\n\nuseEffect 는 리액트 컴포넌트가 렌더링 될 때마다 특정 작업을 수행하도록 설정 할 수 있는 Hook 입니다. 클래스형 컴포넌트의 componentDidMount 와 componentDidUpdate 를 합친 형태로 보아도 무방합니다.\n\n한번, 우리가 기존에 만들었던 Info 컴포넌트에 useEffect 를 적용해보겠습니다.\n\n#### Info.js\n\n```javascript\nimport React, { useState, useEffect } from \'react\';\n\nconst Info = () => {\n  const [name, setName] = useState(\'\');\n  const [nickname, setNickname] = useState(\'\');\n  useEffect(() => {\n    console.log(\'렌더링이 완료되었습니다!\');\n    console.log({\n      name,\n      nickname\n    });\n  });\n\n  const onChangeName = e => {\n    setName(e.target.value);\n  };\n\n  const onChangeNickname = e => {\n    setNickname(e.target.value);\n  };\n\n  return (\n    (...)\n  );\n};\n\nexport default Info;\n```\n\n이제 한번 브라우저에서 개발자 도구를 열고 인풋의 내용을 변경해보세요.\n\n![img](https://i.imgur.com/q9sshnK.png)\n\n### 2.1 마운트 될 때만 실행하고 싶을 때\n\n만약 useEffect 에서 설정한 함수가 컴포넌트가 화면에 가장 처음 렌더링 될 때만 실행되고 업데이트 할 경우에는 실행 할 필요가 없는 경우엔 함수의 두번째 파라미터로 비어있는 배열을 넣어주시면 됩니다.\n기존의 useEffect 코드를 다음과 같이 변경해보세요.\n\n#### Info.js - useEffect\n\n```javascript\n  useEffect(() => {\n    console.log(\'마운트 될 때만 실행됩니다.\');\n  }, []);\n```\n\n코드를 작성하셨으면 브라우저를 다시 열어서 인풋을 수정해보세요. 컴포넌트가 처음 나타날 때만 콘솔에 문구가 나타나고 그 이후에는 나타나지 않을 것입니다.\n\n![img](https://i.imgur.com/DxcQXuX.png)\n\n### 2.2 특정 값이 업데이트 될 때만 실행하고 싶을 때\n\nuseEffect 를 사용 할 때 특정 값이 변경이 될 때만 호출하게 하고 싶을 경우도 있을 것입니다. 만약 클래스형 컴포넌트라면 다음과 같이 작성하겠죠.\n\n```javascript\ncomponentDidUpdate(prevProps, prevState) {\n  if (prevProps.value !== this.props.value) {\n    doSomething();  \n  }\n}\n```\n\n위 코드에서는 props 안에 들어있는 value 값이 바뀔 때에만 특정 작업을 수행하도록 하였습니다. 만약 이러한 작업을 useEffect 에서 해야한다면 어떻게 해야 할까요?\n\n바로, useEffect 의 두번째 파라미터로 전달되는 배열 안에 검사하고 싶은 값을 넣어주시면 된답니다.\n\n한번 Info 컴포넌트의 useEffect 부분을 다음과 같이 수정해보세요.\n\n#### Info.js - useEffect\n\n```javascript\n  useEffect(() => {\n    console.log(name);\n  }, [name]);\n```\n\n배열 안에는 useState 를 통해 관리하고 있는 상태를 넣어줘도 되고, props 로 전달받은 값을 넣어주어도 됩니다.\n\n![img](https://i.imgur.com/ozdTH2M.png)\n\n### 2.3 뒷정리 하기\n\nuseEffect 는 기본적으로 렌더링 되고난 직후마다 실행되며, 두번째 파라미터 배열에 무엇을 넣느냐에 따라 실행되는 조건이 달라집니다.\n\n만약 컴포넌트가 언마운트되기 전이나, 업데이트 되기 직전에 어떠한 작업을 수행하고 싶다면 useEffect 에서 뒷정리(cleanup) 함수를 반환해주어야 합니다.\n\nInfo 컴포넌트의 useEffect 부분을 다음과 같이 수정해보세요.\n\n#### Info.js - useEffect\n\n```javascript\n  useEffect(() => {\n    console.log(\'effect\');\n    console.log(name);\n    return () => {\n      console.log(\'cleanup\');\n      console.log(name);\n    };\n  });\n```\n\n이제 App 컴포넌트에서 Info 컴포넌트의 가시성을 바꿀 수 있게 해봅시다. 이번에도 useState 를 사용하여 상태를 관리해보세요!\n\n#### App.js\n\n```javascript\nimport React, { useState } from \'react\';\nimport Info from \'./Info\';\n\nconst App = () => {\n  const [visible, setVisible] = useState(false);\n  return (\n    <div>\n      <button\n        onClick={() => {\n          setVisible(!visible);\n        }}\n      >\n        {visible ? \'숨기기\' : \'보이기\'}\n      </button>\n      <hr />\n      {visible && <Info />}\n    </div>\n  );\n};\n\nexport default App;\n```\n\n다 작성하셨다면 상단의 보이기 / 숨기기 버튼을 눌러보세요.\n\n![img](https://i.imgur.com/FNtljyD.png)\n\n컴포넌트가 나타날 때 콘솔에 effect 가 보이고, 사라질 때 cleanup 이 보여지게 됩니다.\n\n그 다음엔, 한번 인풋에 이름을 적어보고 콘솔에 어떤 결과가 나타나는지 확인해보세요.\n\n![img](https://i.imgur.com/iVIkafI.png)\n\n렌더링이 될 때마다 뒷정리 함수가 계속 보여지고 있는 것을 확인 할 수 있습니다. 그리고, 뒷정리 함수가 호출 될 때에는 업데이트 되기 직전의 값을 보여주고 있습니다.\n\n만약에, 오직 언마운트 될 때만 뒷정리 함수를 호출하고 싶으시다면 useEffect 함수의 두번째 파라미터에 비어있는 배열을 넣으시면 됩니다.\n\n#### Info.js - useEffect\n\n```javascript\n  useEffect(() => {\n    console.log(\'effect\');\n    console.log(name);\n    return () => {\n      console.log(\'cleanup\');\n      console.log(name);\n    };\n  }, []);\n```\n\n## 3. useContext\n\n이 Hook 을 사용하면 함수형 컴포넌트에서 Context 를 보다 더 쉽게 사용 할 수 있습니다.\n\nsrc 디렉터리에 ContextSample.js 이라는 컴포넌트를 만들어보세요.\n\n#### ContextSample.js\n\n```javascript\nimport React, { createContext, useContext } from \'react\';\n\nconst ThemeContext = createContext(\'black\');\nconst ContextSample = () => {\n  const theme = useContext(ThemeContext);\n  const style = {\n    width: \'24px\',\n    height: \'24px\',\n    background: theme\n  };\n  return <div style={style} />;\n};\n\nexport default ContextSample;\n```\n\n다 만드셨으면 App 컴포넌트에서 렌더링도 해주세요.\n\n#### App.js\n\n```javascript\nimport React from \'react\';\nimport ContextSample from \'./ContextSample\';\n\nconst App = () => {\n  return <ContextSample />;\n};\n\nexport default App;\n```\n\n다 작성하셨으면 브라우저를 확인해보세요. 검정색 사각형이 나타났나요?\n\n![img](https://i.imgur.com/5UGqVnm.png)\n\n## 4. useReducer\n\nuseReducer 는 useState 보다 컴포넌트에서 더 다양한 상황에 따라 다양한 상태를 다른 값으로 업데이트해주고 싶을 때 사용하는 Hook 입니다. 리듀서(reducer) 라는 개념은 조만간 다루게 될 Redux 를 배우게 될 때 더 자세히 알아보게 됩니다. 만약 현재 이 내용이 어렵다고 느껴지신다면 추후 리덕스를 공부하고나서 나서 이 내용을 다시 한번 확인해보세요.\n\n리듀서는 현재 상태와, 업데이트를 위해 필요한 정보를 담은 액션(action) 값을 전달 받아 새로운 상태를 반환하는 함수입니다. 리듀서 함수에서 새로운 상태를 만들 때는 꼭 불변성을 지켜주어야 합니다.\n\n```javascript\nfunction reducer(state, action) {\n  return { ... }; // 불변성을 지키면서 업데이트한 새로운 상태를 반환합니다\n}\n```\n\n액션값은 주로 다음과 같은 형태로 이루어져있습니다.\n\n```javascript\n{\ntype: \'INCREMENT\',\n// 다른 값들이 필요하다면, 추가적으로 들어감\n}\n```\n\nRedux 에서는 액션 객체에는 어떤 액션인지 알려주는 type 필드가 꼭 있어야 하지만, useReducer 에서 사용하는 액션 객체는 꼭 type 를 지니고 있을 필요가 없습니다. 심지어, 객체가 아니라 문자열이나, 숫자여도 상관이 없습니다.',0,'2021-02-18 00:20:54','http://3.36.125.70/thumbimg/d864b419-52d2-4d8d-b7f2-696f3b4858b7_reacthooks.png'),(295,'Vue CLI 초기셋팅 방법','easydeveloper2@naver.com','## Vue CLI\n\nwebPack CLI는 webpack설치 시 발생하는 많은 문제와, 버전충돌 문제 설정등을 편하게 지원해주는 기능입니다. webpack을 처음부터 사용해보는것도 좋지만 CLI도구를 이용해 시간을 절약 할 수 도 있습니다.\n\n## 프로젝트 생성\n\n> vue create <프로젝트명>\n\n1. manually select features를 선택합니다. 선택할때는 방향키로 지정할 수 있습니다\n   ![img](https://media.vlpt.us/images/keywookim/post/cd28a71d-3900-4c2c-9f90-57c8c08ceb4c/Untitled.png)\n2. 추가로 사용할 router, Vuex, CSS Pre-processors를 선택해줍니다.\n   (마우스로 이동후 spacebar로 선택할 수 있습니다.)\n   ![img](https://media.vlpt.us/images/keywookim/post/577398ff-d4af-4511-b05a-4262e2885ac2/Untitled%20(1).png)\n3. Choose Vue version을 선택하고 2.x를 선택해주세요.\n   (3.x으로 프로젝트를 진행하고자 한다면 사용하셔도 무방합니다)\n   ![img](https://media.vlpt.us/images/keywookim/post/cb2197f3-4c65-4a24-895b-9b6521090e95/Untitled%20(2).png)\n4. router의 history모드를 사용합니다.\n   히스토리 모드를 사용하면 router-push같은 부가적인 기능 활용에 용이합니다.\n   ![img](https://media.vlpt.us/images/keywookim/post/8f1df1c3-86dd-4845-a1e4-d1aba994efeb/Untitled%20(3).png)\n5. node-sass를 선택해줍니다.\n   ![img](https://media.vlpt.us/images/keywookim/post/35fd0a87-0b36-4ade-8154-b0cc3a7653d1/Untitled%20(4).png)\n6. ESLint with error prevention only를 선택해주세요.\n   ![img](https://media.vlpt.us/images/keywookim/post/fba887e9-f971-4deb-964e-53562c299c5a/Untitled%20(5).png)\n7. lint on save를 선택해주고\n   ![img](https://media.vlpt.us/images/keywookim/post/23f4603a-4667-4651-9217-c730c3721efc/Untitled%20(6).png)\n8. in package.json을 선택해 줍니다.\n   ![img](https://media.vlpt.us/images/keywookim/post/72ee6612-faca-450b-8baa-ed44e2626512/Untitled%20(7).png)',0,'2021-02-18 13:04:29','http://3.36.125.70/thumbimg/610a632d-5a50-42a7-a085-1a5f21e07066_Untitled.png'),(296,'axios 사용해보기','easydeveloper2@naver.com','1. ### axios?\n\n   ```null\n   Promise based HTTP client for the browser and node.js\n   ```\n\n   axios는 node.js와 브라우저를 위한 http통신 javascript 라이브러리입니다.\n\n   아래와 같이 모든 브라우저를 지원합니다. (Fetch와 달리 크로스 브라우징에 최적화)\n\n   ![img](https://media.vlpt.us/post-images/sss5793/a79c2770-3733-11ea-8617-a9b798622e0b/-2020-01-15-10.08.49.png)\n\n   ### 특징\n\n   - 브라우저에선 [XMLHttpRequests](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest)을 nodejs에선 [http](https://nodejs.org/api/http.html) 요청 생성\n   - [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise) API 지원\n   - 요청과 응답을 중단\n   - JSON 데이터 자동 변환\n   - 요청 취소\n   - [XSRF](https://en.wikipedia.org/wiki/Cross-site_request_forgery)로부터 보호하기위한 클라이언트 측 지원\n\n   ### 설치\n\n   npm\n\n   ```null\n   $ npm install axios\n   ```\n\n   bower\n\n   ```null\n   $ bower install axios\n   ```\n\n   yarn\n\n   ```null\n   $ yarn add axios\n   ```\n\n   cdn\n\n   ```null\n   <script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\n   ```\n\n   ### 예제\n\n   #### GET 요청\n\n   ```null\n   // GET request for remote image\n   axios({\n     method: \'get\',\n     url: \'http://bit.ly/2mTM3nY\',\n     responseType: \'stream\'\n   })\n     .then(function (response) {\n       response.data.pipe(fs.createWriteStream(\'ada_lovelace.jpg\'))\n     });\n   ```\n\n   or\n\n   ```null\n   axios.get(\'/user\', {\n       params: {\n         ID: 12345\n       }\n     })\n     .then(function (response) {\n       console.log(response);\n     })\n     .catch(function (error) {\n       console.log(error);\n     })\n     .finally(function () {\n       // always executed\n     }); \n   ```\n\n   #### POST 요청\n\n   ```null\n   axios({\n     method: \'post\',\n     url: \'/user/12345\',\n     data: {\n       firstName: \'Fred\',\n       lastName: \'Flintstone\'\n     }\n   });\n   ```\n\n   or\n\n   ```null\n   axios.post(\'/user\', {\n       firstName: \'Fred\',\n       lastName: \'Flintstone\'\n     })\n     .then(function (response) {\n       console.log(response);\n     })\n     .catch(function (error) {\n       console.log(error);\n     });\n   ```\n\n   위의 예시와 같이 method에 요청별로 사용할 수도 있고, 명확하게 사용도 가능합니다.\n\n   참고 - https://github.com/axios/axios, https://tuhbm.github.io/2019/03/21/axios/\n\n',0,'2021-02-18 13:24:00','http://3.36.125.70/thumbimg/66a8191c-fce3-4742-9726-8c65ae9c91f6_axiosd.png'),(297,'[Spring Boot] Spring Boot 프로젝트 시작하기','easydeveloper2@naver.com','## Spring Boot 시작하기\n\nSpring boot는 아래의 url 에서 간단하게 프로젝트를 생성하고 시작 할 수 있다.\n[Spring initializer](https://start.spring.io/)\n![img](https://media.vlpt.us/images/yebali/post/cc76130a-3cec-4558-bfbd-c33cdb76cf2d/image.png)\n프로젝트의 종류(Maven or Gradle), 프로그래밍 언어, Spring Boot 버전 등을 설정한다.\n\n![img](https://media.vlpt.us/images/yebali/post/4629ff75-f3b1-40b7-9c4a-cdd432c1d4c9/image.png)\ndeplendencies 메뉴를 이용해 원하는 라이브러리를 쉽게 가져올 수 있다.\n\nJar file로 압축된 프로젝트는 압축 해제 후, Intellij등 IDE에서 불러오면 쉽게 Spring Boot 프로젝트를 시작 할 수 있다.',1,'2021-02-18 13:35:18','http://3.36.125.70/thumbimg/5f896089-57f6-4887-a513-471460548d3b_image.png'),(298,'REST API와 RESTful API','easydeveloper2@naver.com','## 1. REST란?\n\n`Representational State Transfe`라는 용어의 약자이다.\n자원을 `URI`로 표시하고 해당 자원의 상태를 주고 받는 것을 의미한다.\n\nREST의 구성 요소는\n\n- `자원(Resource): URI`\n- `행위(Verb): HTTP METHOD`\n- `표현(Representations)`\n  로 이루어져 있다.\n\n즉 `Rest`는 `URI`를 통해 자원을 표시하고, `HTTP METHO`를 이용하여 해당 자원의 행위를 정해주며\n그 결과를 받는 것을 말한다.\n\n## 2. REST의 특징\n\n1. Uniform Interface (유니폼 인터페이스)\n   `HTTP` 표준만 따른다면 어떤 언어 혹은 어떤 플랫폼에서 사용하여도 사용이 가능한 인터페이스 스타일이다.\n   안드로이드 플랫폼, IOS 플랫폼 등 특정 언어나 플랫폼에 종속되지 않고 사용이 가능하다.\n2. Stateless (상태 정보 유지 안함)\n   `Rest`는 상태 정보를 유지하지 않는다.\n   서버는 각각의 요청을 완전히 다른 것으로 인식하고 처리를 한다.\n   이전 요청이 다음 요청 처리에 연관이 되면 안된다.\n3. Cacheable (캐시 가능)\n   `HTTP`의 기존 웹 표준을 그대로 사용하기 때문에 `HTTP`가 가진 캐싱 기능 적용이 가능하다.\n4. Self-descriptiveness (자체 표현 구조)\n   `Rest API` 메시지만 보고도 쉽게 이해할 수 있는 자체 표현 구조로 되어있다.\n5. Client-Server\n   `Rest` 서버는 `API` 제공을 하고 클라이언트는 사용자 인증에 관련된 일들을 직접 관리한다.\n   자원이 있는 쪽을 Server라고 하고 자원을 요청하는 쪽이 Client가 된다.\n   서로간의 의존성이 줄어들기 때문에 역할이 확실하게 구분되어 개발해야할 내용들이 명확해진다.\n6. Layerd System (계층화)\n   클라이언트는 `Rest API` 서버만 호출한다.\n   `Rest` 서버는 다중 계층으로 구성될수 있으면 로드 밸런싱, 암호화, 사용자 인증 등을 추가하여 구조상의\n   유연성을 둘 수 있다.\n\n## 3. REST API란?\n\nRest 기반의 규칙들을 지켜서 설계된 API를 Rest API 혹은 Restful API이라고 한다.\n\n## 4. REST API 설계 규칙\n\n1. URI는 정보의 자원을 표현해야한다.\n\n   자원의 이름은 동사보다는 명사를 사용한다.\n\n   URI는 자원을 표현하는데 중점을 두어야 하기 때문에 행위에 대한 표현이 들어가면 안된다.\n\n   (URI에 HTTP METHOD와 행위에대한 동사 표현이 들어가면 안된다.)\n\n   ```null\n   GET /users/321\n   ```\n\n2. 자원에 대한 행위는 HTTP METHOD로 표현한다. (GET, POST, PUT DELETE)\n\n   URI에 자원의 행위에 대한 표현이 들어가지 않는 대신 HTTP METHOD를 통해 대신한다.\n\n   ```null\n   GET /users/321 321 ID를 가진 유저 정보를 가져오기\n   DELETE /users/321 321 ID를 가진 유저 정보를 삭제하기\n   POST /users 유저를 생성하기\n   ```\n\n3. 슬래시 (/)는 계층 관계를 나타내는데 사용한다.\n\n   ```null\n   http://restapi.test.com/users/rooms\n   http://restapi.test.com/users/board\n   ```\n\n4. URI 마지막은 슬래시(/)를 사용하면 안된다.\n\n   ```null\n   http://restapi.test.com/users/rooms/ [X]\n   http://restapi.test.com/users/rooms  [O]\n   ```\n\n5. 하이픈 (-)은 URI의 가독성을 높이는데 사용한다.\n   불가피하게 긴 URI를 사용하게 될 경우 하이픈을 이용하여 가독성을 높인다.\n\n6. 언더바(_) 혹은 밑줄은 URI에 사용하지 않는다.\n   밑줄은 보기 어렵거나 밑줄 때문에 문자가 가려지기도 한다.\n   그래서 대신 언더바를 사용하지 않고 하이픈을 이용한다.\n\n7. URI는 경로에는 소문자가 적합하다.\n   URI 경로에는 대문자 사용을 피해야한다.\n   대소문자에 따라 각자 다른 리소스로 인식하기 때문이다.\n   RFC3986(URI 문법 형식)은 URI 스키마와 호스트를 제외하고는 대소문자를 구별하도록 규정하기 때문이다.\n\n8. 파일 확장자는 URI에 포함하지 않는다.\n   REST API에서는 메시지 바디 내용의 포맷을 나타내기 위한 파일 확장자를 URI 안에 포함시키지 않는다.\n   Accept header를 사용한다.\n\n9. 리소스 간의 관계를 표현하는 방법\n\n   ```null\n   GET : /users/{userid}/devices\n   ```\n\n## 5. RESTFUL API란?\n\n위에서 설명했던 REST를 REST답게 쓰기 위한 방법이지만 누군가가 공식적으로 발표한 것이 아니고\n그저 개발자들이 비공식적으로 의견을 제시한 것이라 명확한 정의는 없다고 한다.\n하지만 RESTFUL의 목적은 이해하기 쉽고 사용하기 쉬운 REST API를 만드는 것이다.\n\n| CRUD             | HTTP METHOD | URI        |\n| ---------------- | ----------- | ---------- |\n| user들을 표시    | GET         | /users     |\n| user 하나만 표시 | GET         | /users/:id |\n| user를 생성      | POST        | /users     |\n| user를 수정      | PUT         | /users:id  |\n| user를 삭제      | DELETE      | /users:id  |\n\n- Restful 하지 못한 경우\n\n- CRUD 기능을 전부 POST METHOD로만 처리하는 API\n\n- URI에 자원과 id외 정보가 들어가는 경우\n\n  ```null\n   PUT /users/update-nickname [X]\n   PUT /users/:id/nickname [O]\n  ```\n\n## 6. 번외 - HTTP 응답 코드\n\n1. 2xx 성공\n\n- 200: 클라이언트의 요청을 정상적으로 수행함.\n- 201: 클라이언트에게 생성 작업을 요청 받았고, 생성 작업을 성공함.\n- 204: 요청은 성공 했지만 응답할 콘텐츠가 없음.\n\n1. 3xx 리다이렉션\n\n- 301: 클라이언트가 요청한 리소스에 대한 URI가 영구적으로 변경되었을 때 사용함.\n- 302: 301과 같으나 임시적으로 주소가 바뀌었을 경우 사용함.\n- 304: 이전에 방문했을 때의 요청 결과와 다르지 않을 경우 사용함. 캐시된 페이지를 그대로 사용.\n- 307: 임시 페이지로 리다이렉트.\n\n1. 4xx 클라이언트 오류\n\n- 400: 클라이언트가 올바르지 못한 요청을 보냄.\n- 401: 로그인을 하지 않아 페이지를 열 권한이 없음.\n- 403: 금지된 페이지, 로그인을 하든 안하든 접근할 수 없음. (관리자 페이지)\n- 404: 찾을 수 없는 페이지, 주소를 잘 못 입력했을 때 사용함.\n  403 대신에 사용할 수도 있음.(해커들의 공격을 방지하고자 페이지가 없는 것처럼 위장함)\n- 408: 요청 시간이 초과됨.\n- 409: 서버가 요청을 처리하는 과정에서 충돌이 발생한 경우. (회원가입 중 중복된 아이디인 경우)\n- 410: 영구적으로 사용할 수 없는 페이지.\n\n1. 5xx 서버 오류\n\n- 501: 해당 요청을 처리하는 기능이 만들어지지 않음.\n- 502: 서버로 가능 요청이 중간에서 유실된 경우.\n- 503: 서버가 터졌거나 유지 보수 중\n  (유지 보수 중일때는 유지 보수중이라는 것을 알려주는 페이지로 전송해주는 것이 좋음)\n- 504: 서버 게이트웨이에 문제가 생겨 시간 초과가 된 경우.\n- 505: HTTP 버전이 달라 요청이 처리할 수 없음.',0,'2021-02-18 13:39:19','http://3.36.125.70/thumbimg/bd5e00f9-7fb9-48b7-bf76-0244d647f742_rest.png'),(299,'vue 리팩토링 ','easydeveloper1@naver.com','기존의 통계 프로젝트를 리팩토링 해야한다고 하여 기본환경 세팅 / 라이브러리 설정을 맡아 하게 되었다.\n리팩토링 설정과 recoil 위주의 정리를 해보려고 한다!\n\n------\n\n기본환경 세팅은 다음과 같이 했다\n\n- 기본 아키텍쳐 구조 정의\n- 컨벤션 정의\n- eslint 설정\n- prettier 설정\n- 서버 - express / js\n- 클라이언트 - react / ts\n\n라이브러리 선정은 다음과 같이 했다.\n\n- 화면 ui 라이브러리 - antd\n- 차트 라이브러리 - apexcharts\n- 상태관리 라이브러리 - recoil\n- 미들웨어 라이브러리 - client : recoil 사용으로 불필요/ server : express.use, cors\n- 스타일 라이브러리 - less\n\n화면 라이브러리 / 차트 라이브러리는 antd와 apexcharts가 사용하기도 간단하고, 깔끔해서 선정했다.\n상태관리 라이브러리는 recoil로 사용을 하게 되었는데, 새로운 라이브러리를 도입해보고 싶기도 했고, 해당 프로젝트에서는 복잡한 상태관리를 할 일이 없었기에 사수분과 의견 일치로 선정했다.\n\n------\n\n새로운 프로젝트 설정은 처음 해보는 것이기에 구조를 잡는것이 조금 어려웠다. 그동안 했던 다른 프로젝트와 다른 프로젝트들 몇개를 참고하며 시작했다.\n\n- 디렉토리 구조\n  ![img](https://media.vlpt.us/images/2h5i/post/f03d8605-68dd-4f33-b9f4-5712fae73abf/react-app-env_d_ts_%E2%80%94_new-imflow.png)\n\n디렉토리 구조는 다음과 같이 정의 했다.\n\n- @types - _.d.ts 파일들, 타입 정의가 되어있는 디렉토리\n- assets - img 등 프로젝트에 필요한 파일 디렉토리\n- components - 컴포넌트 디렉토리\n- libs - utils / 공용 api 디렉토리\n- modules\n  ![img](https://media.vlpt.us/images/2h5i/post/d6c8b334-c7e2-4a75-bce7-b49e7fe36226/react-app-env_d_ts_%E2%80%94_new-imflow.png)\n  recoil - atom / selector 와 api가 정의된 디렉토리\n- pages - 페이지 디렉토리\n- routes - route가 정의된 디렉토리\n\n------\n\n1. CRA로 타입스크립트 프로젝트를 생성.\n\n```null\nyarn create react-app [project] --typescript\n```\n\n1. eslint,prettier, 추가 모듈 설치\n\n```null\nyarn add eslint --save-dev\nyarn add prettier --save-dev --save-exact\nyarn add eslint-config-prettier --save-dev\nyarn add eslint-plugin-prettier --save-dev\n```\n\n--save-exact 라는 옵션은 버전이 달라지면서 생기는 변화에 대응을 할 수 있기 때문에 붙이는 것이라고 한다.\n\n1. .eslintrc파일 설정\n\n```null\n{\n  \"env\": {\n    \"es2020\": true,\n    \"node\": true,\n    \"browser\": true,\n    \"jest\": true\n  },\n  \"extends\": [\n    \"eslint:recommended\",\n    \"plugin:@typescript-eslint/eslint-recommended\",\n    \"plugin:@typescript-eslint/recommended\",\n    \"plugin:@typescript-eslint/recommended-requiring-type-checking\",\n    \"plugin:prettier/recommended\",\n    \"prettier/@typescript-eslint\",\n    \"airbnb\",\n    \"prettier/react\",\n    \"plugin:react/recommended\",\n    \"airbnb-base\",\n    \"prettier\"\n  ],\n  \"parser\": \"@typescript-eslint/parser\",\n  \"parserOptions\": {\n    \"ecmaVersion\": 11,\n    \"sourceType\": \"module\",\n    \"project\": \"./tsconfig.json\",\n    \"ecmaFeatures\": {\n      \"jsx\": true\n    }\n  },\n  \"plugins\": [\"@typescript-eslint\", \"react\"],\n  \"globals\": {\n    \"Atomic\": \"readonly\",\n    \"SharedArrayBuffer\": \"readonly\"\n  },\n  \"rules\": {\n    \"import/prefer-default-export\": 0,\n    \"import/extensions\": 0,\n    \"no-use-before-define\": \"off\",\n    \"react/jsx-filename-extension\": [1, { \"extensions\": [\".tsx\"] }],\n    \"arrow-body-style\": \"off\",\n    \"no-console\": \"off\",\n    \"object-curly-newline\": \"off\",\n    \"spaced-comment\": \"off\",\n    \"react/no-array-index-key\": \"off\",\n    \"no-undef\": \"off\",\n    \"no-unused-vars\": \"warn\",\n    \"max-len\": [\"error\", { \"code\": 120 }],\n    .\n    .\n    .\n  },\n  \"ignorePatterns\": [\"dist/\", \"node_modules/\", \"*.js\"],\n  \"settings\": {\n    \"react\": {\n      \"pragma\": \"React\",\n      \"version\": \"detect\"\n    },\n    \"import/resolver\": {\n      \"node\": {\n        \"extensions\": [\".js\", \".jsx\", \".ts\", \".tsx\"],\n        \"moduleDirectory\": [\"node_modules\", \"src/\"]\n      }\n    }\n  },\n  \"overrides\": [\n    {\n      \"files\": [\"src/*\"],\n      \"rules\": {\n        \"require-jsdoc\": \"off\"\n      }\n    }\n  ]\n}\n```\n\neslint 설정은 이것저것 찾아보며 적용 시켰다. 필요한 부분을 검색해가며 적용했다.\n\n1. .prettierrc파일 설정\n\n```null\n{\n  \"printWidth\": 120,\n  \"tabWidth\": 2,\n  \"useTabs\": false,\n  \"semi\": true,\n  \"singleQuote\": true,\n  \"trailingComma\": \"all\",\n  \"bracketSpacing\": true,\n  \"arrowParens\": \"always\",\n  \"jsxSingleQuote\": false\n}\n```\n\n다른 프로젝트에서 주로 사용하는 설정대로 설정했다.\n\n1. antd & less 설정\n\n```null\nyarn add antd\nyarn add craco-antd\n```\n\nless 설정은 craco-antd를 사용해 가능하다.\ncraco.config.js 파일을 만들고 다음과 같이 작성한다\n\n```null\nmodule.exports = {\n  plugins: [\n    {\n      plugin: require(\'craco-antd\'),\n      options: {\n        customizeTheme: {\n          \'@primary-color\': \'#008ffb\',\n          \'@menu-item-active-bg\': \'#008ffb\',\n          \'@menu-highlight-color\': \'#008ffb\',\n          \'@menu-bg\': \'#f5f5f5\',\n          \'@font-size-base\': \'14px\',\n          \'@dropdown-font-size\': \'12px\',\n        },\n      },\n    },\n  ],\n};\n```\n\n플러그인으로 craco-antd를 사용하고 , 테마를 커스텀 할 수도 있다. craco.config.js에 craco-antd 플러그인을 사용하면 less를 따로 설정하지 않아도 less를 사용할 수 있다고 한다.\n\ncraco.config.js 는 cra로 만든 프로젝트를 별도로 eject하지 않고도 설정 할 수 있게 도와준다.',0,'2021-02-18 14:05:03','http://3.36.125.70/thumbimg/72ae1a3b-fa7c-4bd5-b2f4-08be64d63a9b_리팩토링.png'),(300,'Spring Boot와 Vue.js로 만든 첫번째 사이드 프로젝트','easydeveloper1@naver.com','### 1. 서론\n\n요즘 이력서 피드백을 받으면서 취업 준비가 한참이다...라고 하고 싶지만\n사실상 이제까지 한거라고는 블로그랑 깃허브 관리다. (시간이 너무 오래걸림 ㅠ)\n\n무튼 끝내고 나니 본격 시작해야하지 않을까? 이제 좀 시작하자!\n\n최근 받은 이력서 피드백은\n**코치님께서 미경님 이력서 굉장히 깔끔하고 잘 쓰셨는데 부족한 부분들이 있다고 하시네요ㅠㅠ 아래 블로그 보시고 비교도 해보시면서 부족한 부분에 대해서 생각해보시라고 하셨습니다!**\n\nhttps://yeon-kr.tistory.com/131\n\n블로그를 확인해보니 개인 프로젝트 후기 글이었다.\n아무래도 마지막으로 배운 Spring과 Vue.js로 개인 프로젝트를 해야겠다.\n\n### 2. 목표\n\n이번 프로젝트 목표는 그동안 쌓은 웹 개발 지식을 정리하면서\n웹 개발자라면 꼭 알아야 하지 않을까? 싶은 기능을 구현하는 것이다.\n\n- 가장 기본인 CRUD는 필수!\n- 파일 업로드\n- 오픈 API 사용하기\n\n### 3. 기술 스택\n\nFront-end : Vue CLI\nBack-end : Spring Boot + Maven, MySQL\n\n### 4. 결과\n\n\n\n- 기간 : 20.09.03 ~ 20.09.09 (일주일)\n- 코드 : https://github.com/ednadev/project-book\n- 포트폴리오 : https://vo.la/T89LH\n\n- 개발하면서 필수 사항 :\n  - Junit을 이용한 단위테스트\n  - Postman을 이용한 API 테스트\n  - Spring Boot와 Vue.js 연동 후 테스트\n\n### 5. 구현한 기능\n\n![img](https://media.vlpt.us/images/ednadev/post/19041b6a-a2bb-4c12-afe8-08f82cd6463b/image.png)\n\n1) **로그인 : 네이버 & 카카오 로그인 API 사용**\n2) 문제 발생 : 로그인 API 추가 --> Vue 컴포넌트 에러\n3) 해결 : cdn 방식으로 변경\n\n4) 추후 보완하고 싶은 기능 :\n\n- 로그인 API Vue CLI로 변경\n- 구글 & 페이스북 API 추가\n- JWT 토큰 사용해보기\n\n![img](https://media.vlpt.us/images/ednadev/post/a94e9806-f255-4d78-ab1d-00f63b18c62c/image.png)\n\n1) **메인 페이지 : 책 API를 통한 검색, 프로필 사진 및 이름 변경**\n2) 문제 발생 : 프로필 사진 업로드가 되지 않음\n3) 해결 : @ModelAttribute로 변경하니 MultipartFile 가져오는 게 가능\n\n4) 추후 보완하고 싶은 기능 :\n\n- 여러 사용자들이 사용하게 될 시 기능 추가\n- 추가 기능에 맞춰 메인 디자인 업데이트\n\n![img](https://media.vlpt.us/images/ednadev/post/42a7717b-ff34-4f3f-8491-cf9ced1858bf/image.png)\n\n1) **북리스트 수정 및 삭제**\n2) 문제점 : index가 아닌 다른 화면 이동\n3) 해결 : Vue router에 대한 이해\n\n4) 추후 보완하고 싶은 기능 : 캘린더\n\n![img](https://media.vlpt.us/images/ednadev/post/c69fbb2c-8b84-4e1b-8cf1-c60c36c854ad/image.png)\n\n1) **아이디어 노트 CRUD**\n2) 문제점 : CRUD 작동이 바로 되지 않음\n3) 해결 : 추가하는 부분 제외 가능하도록 변경\n\n4) 추후 보완하고 싶은 기능 : 추가할 때 reload 말고 바로 추가\n\n### 6. 마무리\n\n기술 스택 부분까지 작성하고 바로 프로젝트에 돌입했던 지난주!\n\n그리고 오늘! 드디어 프로젝트를 완성했다.. 사실 좀 더 보완하고 싶은 기능들이 많지만 일단 **프로젝트를 한번이라도 끝내는 것에 중점**을 두었다.\n\n이번 프로젝트를 통해 얻은게 많다. 홀로 백엔드부터 프론트엔드까지 전부 책임을 지고 개발을 해야했기에 내가 **어떤 부분이 미흡한지**가 보다 확실해졌다.\n\n향후 보완하고 싶은 기능을 추가하기 위해 공부할 예정이다.\n그전에 **AWS**를 다뤄보는 게 먼저지만~~',7,'2021-02-18 14:07:31','http://3.36.125.70/thumbimg/bfe6d60a-97c2-4496-91fe-7944088fd848_springboot.png'),(301,'Linting & ESlint 사용법','easydeveloper1@naver.com','## WHAT IS ESLint\n\n- ESLint란?\n  : ESLint는 JavaScript 코드에서 발견 된 문제 패턴을 식별하기위한 정적 코드 분석 도구입니다. ESLint의 규칙은 구성 가능하며 사용자 정의 된 규칙을 정의하고로드 할 수 있습니다. ESLint는 코드 품질과 코딩 스타일 문제를 모두 다룹니다. (by 위키)\n  [공식문서는 여기를 참고! -> 꼭 참고하세요! 설치 및 사용법을 모두 익힐 수 있습니다.](https://eslint.org/docs/user-guide/getting-started)\n- 글로벌 설치를 추천하지 않는 이유?\n  : 글로벌 설치시, ESLint의 규칙을 모든 whole 프로젝트에 적용됨\n  - 글로벌이란?\n    - 공식문서에서 답을 찾을 수 있음\n    - 어떤 디렉토리에서든지 사용할 수 있음\n    - 문제점? : 개별 프로젝트 진행시, 버전이 맞지 않는 문제가 생길 수 있음\n    - (설치를 지울 때 : uninstall)\n    - 글로벌로 설치되었는지 확인하는 방법\n      - `npm ls` : 전체 파일 확인\n      - `npm ls --depth=0` : 주요 기능만 확인\n      - `npm ls --depth=0 -- global` : 글로벌 설치된 파일 확인\n    - 설치 후, eslintrc.js 파일에서, rules 에 담기 내용을 0~2(경고, 완화 등)까지로 지정해서 볼 수 있음\n    - eslint를 통해 경고메시지를 좀더 디테일하게 알려주어 많은 에러를 잡아줄 수 있으며, 중복 선언, 일치 연산자 사용 등 많고 디테일한 부가적인 기능들을 도와주어, 더 나은 코드를 지향할 수 있음\n\n### ESLint 설치\n\n[공식문서는 여기를 참고! -> 꼭 참고하세요! 설치 및 사용법을 모두 익힐 수 있습니다.](https://eslint.org/docs/user-guide/getting-started)\n\n- 설치 후 확인 : `package.json` 파일의 `devDependencies` 항목에 eslint가 추가 되었는지 확인\n\n### ESLint 설정\n\n- 설정파일 : `.eslintrc.js` 또는 `.eslintrc.json` 과 같은 형식\n- 설정파일에서 `rules` 로 쓰인 부분을 자세히 살펴볼 것\n- 실행확인 : `npm run lint`\n\n### ESLint 검사\n\n[공식문서_reference는 여기를 참고! -> 꼭 참고하세요!](https://eslint.org/docs/rules/)',1,'2021-02-18 14:10:05','http://3.36.125.70/thumbimg/f9d1e882-c607-494a-bed1-34ce0c03cf7e_eslint.png'),(302,'어중간히 알면 안되는 JS 개념 #1 this','easydeveloper1@naver.com','자바스크립트를 통해 개발하다보면 가끔보게 되는 키워드가 있는 데, 바로 `this`라는 녀셕입니다.\n\n\"this? 대충 이렇게 작동하는 녀석아닌가??\" 하고 지나칠 수 있지만, 정확히 알고 적절하게 활용한다면 더욱 깔끔하고 디버깅이 편한 코드를 작성할 수 있을 것입니다.\n\n# 일단 this를 찍어보자\n\n`F12`키를 눌러 console에서 `this`를 한번 찍어봅시다. 그러면 아래와 같은 값이 나올 것 입니다.\n\n```javascript\n> this\n> Window {\napplicationCache: ApplicationCache {status: 0,\nLocalNTP: ƒ LocalNTP()\nalert: ƒ alert() oncached: null…}\nassert: ƒ assert(condition, opt_message)\nassertInstanceof: ƒ assertInstanceof(value, type, opt_message)\n...\n}\n```\n\n네, **Window 객체**가 나옵니다. Window 객체는 일반적으로 브라우저의 요소와 자바스크립트 엔진과 관련된 모든 정보를 포함하고 있는 객체입니다.\n\n하지만 단순히 `this` = `Window 객체` 라면, 이 글을 쓰지 않았겠죠?\n\n# 문법에 따라 this가 바뀐다?\n\n전에 커뮤니티에 이런 글이 하나 올라왔었습니다.\n\n> Q . `function` 과 `() => {}` (화살표 함수)의 차이점이 무엇인가요?\n>\n> A : \"this가 달라요\"\n> B : \"function은 this를 가지고, 화살표함수는 this를 가지지 않아요\"\n\n틀린 답변은 아니지만, 정확히 어떻게 `this`가 다르다는 걸까요?\n\n입문자 분들이 말 뜻대로 생각했을 때, 아래 코드처럼 생각할 지도 모르죠.\n\n```javascript\n// 서로 다른 값이 출력??\nfunction normalFunc() {\n  console.log(this); \n}\n\nconst arrowFunc = () => {\n  console.log(this);\n}\n```\n\n\"function은 `this`를 가지니까 자기자신 즉 `normalFunc`를 가리키고, 화살표함수는 `this`를 안가지니까 Window 함수를 가지겠구나?\" 라고 생각할 수 있지만, 출력해보시면 둘 다 **Window 객체**를 출력하는 것을 알 수 있습니다.\n\n그럼 대체 뭐가 다른걸까요? 이글을 다 읽고 나시면 알게 되실 겁니다. ㅋㅋ\n\n우선 **실행 컨텍스트**라는 개념을 알아야 합니다.\n\n# 실행 컨텍스트(Execution Context)\n\n**실행 컨텍스트**란 자바스크립트 코드가 실행되고 연산되는 범위를 나타내는 추상적인 개념으로 코드가 실행된다면 실행 컨텍스트 내부에서 작동하고 있는 것이라고 보면 됩니다.\n\n실행 컨텍스트는 크게 3가지로 분류되는 데, 메인 주제가 아니므로 주요한 2가지만 간단하게 알아보겠습니다. (자세한 내용은 구글에...)\n\n### Global Execution Context\n\n기본적으로 코드가 실행되는 영역이며, 여기서 글로벌 객체인 Window 객체를 생성하며, `this`를 글로벌 객체(Window 객체)로 설정해줍니다.\n\n그래서 아까 `this`를 찍었을 때, Window 객체가 출력된 것이죠.\n\n### Functional Execution Context\n\n각각의 함수가 가지는 실행 컨텍스트로, 함수가 호출될 때 해당 실행 컨텍스트 생성이 됩니다.\n\n![img](https://media.vlpt.us/images/wlsdud2194/post/3c06a902-bf11-4d82-8e0a-2952f7113f64/example.png)\n\n# 언제 this가 바뀔까\n\nthis는 기본적으로 Window 객체를 말합니다(Node.js는 Global 객체).\n\n하지만 this의 값이 바뀌는 경우가 있습니다. 때문에 this 값이 어떻게 바뀌고 있는지, 해당 this가 무슨 값인지 알기 위해선 코드의 문맥을 살펴볼 필요가 있습니다.\n\n### 객체의 메소드를 호출하는 경우\n\n```javascript\nconst myObj = {\n  myValue: 6,\n  myWindow: this,\n  myFunc: function() {\n    console.log(this);\n  },\n  myArrow: () => {\n    console.log(this);\n  },\n};\n\nconsole.log(myObj.myFunc()); // myObj 객체\nconsole.log(myObj.myArrow()); // Window 객체\n```\n\n출력되는 this의 값이 바뀌었나요? MDN에는 아래와 같이 설명하고 있습니다.\n\n> - 함수를 어떤 객체의 메소드로 호출하면 this의 값은 그 객체를 사용합니다.\n> - ES2015는 스스로의 this 바인딩을 제공하지 않는 화살표 함수를 추가했습니다.\n>\n> -MDN web docs-\n\n이것이 아까 위에서 나왔던 답변의 정확한 의미입니다. `function` 키워드는 해당 객체를 바인딩하여 `this`의 값을 변경하는 것이고, `() => {}`는 상위 객체의 this를 그대로 이어받아(?) 사용하는 것입니다.\n\n### 생성자를 통해 객체를 생성하는 경우\n\n```javascript\nfunction Programmer(name, age) {\n  this.name = name;\n  this.age = age;\n}\n\n// 생성자를 사용하지 않은 경우 - 단순 호출\nconst covy = Programmer(\'Covy\', 20); // covy 변수는 undefined\nconsole.log(window.name, window.age); // Covy 20\n\n// 생성자를 통한 객체 생성\nconst tony = new Programmer(\'Tony\', 25);\nconsole.log(tony.name, tony.age); // Tony 25 - this가 해당 객체에 바인딩됨\n```\n\n`new` 키워드를 통해 객채를 생성하면, `this`가 해당 객체에 바인딩 되어 해당 값을 읽게 되는 것입니다. es6에 추가된 `class`를 사용하면 동일하게 작동하는 것을 볼 수 있습니다.\n\n### 예외적인 경우\n\nJquery, React 등에 일부 라이브러리에서 엘리먼트에 이벤트를 추가할 때, 콜백함수에서 `this`를 사용하면 값이 바뀌는 경우가 있습니다.\n\n아래 코드를 봐주세요\n\n```javascript\n// Jquery\n$(\'div\').on(\'click\', function() {\n  console.log(this); // <div>\n  function normalFunc() {\n    console.log(this); // Window 객체\n  }\n  const arrowFunc = () => {\n    console.log(this); // <div>\n  }\n});\n```\n\n위 코드처럼 라이브러리 상에서 this를 바인딩 해주는 경우가 있기도하니 this를 사용할 때는 해당 라이브러리의 document를 찾아보는 것도 중요할 것입니다. (아니면 stack overflow)\n\n# apply(), call(), bind() ?\n\n사실 `this`는 이 3개를 이해하기 위한 발판입니다. 개발하시면서 자동완성 땜에 한번쯤 보신적 있으실겁니다.\n\n자바스크립트에서는 `this`를 자유자제로 바꿀 수 있도록 해주는 메소드를 제공하는 데, 바로 **apply, call, bind** 입니다.\n\n> ES5는 함수를 어떻게 호출했는지 상관하지 않고 this 값을 설정할 수 있는 bind 메서드를 도입했습니다.\n>\n> -MDN web docs-\n\n```javascript\nconst Tom = {\n  age: 25,\n  gender: \'man\',\n};\n\nfunction printProfile(name) {\n  console.log(name, this.age, this.gender);\n}\n\nprintProfile.apply(Tom, [\'Tom\']); // Tom 25 man\nprintProfile.call(Tom, \'Tom\'); // Tom 25 man\nprintProfile.bind(Tom, \'Tom\').call(); // Tom 25 man\n```\n\n- apply : `call` 함수와 유사하지만, 매개변수는 배열로 받는것에 있어 차이가 있다.\n- call : 객채를 바인딩 함과 동시에 호출을 한다.\n- bind : 바인딩이된 함수를 반환하며, 한번더 호출시 함수를 실행한다.\n\n# 마치며\n\n사실 자바스크립트로 개발하면서 this를 보게될 일은 적습니다. 하지만 모르고 코드를 쓰는 것보다. 알고 더욱 좋은 코드로 발전 시키는 것에는 분명한 차이가 있을 것입니다.\n\n+) 글의 오류, 오타가 있다면 언제든 댓글을 남겨주세요 😀',9,'2021-02-18 14:13:44','http://3.36.125.70/thumbimg/08216e7f-9714-4eef-a775-4efdb545df29_this.png');
/*!40000 ALTER TABLE `post` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `post_like`
--

DROP TABLE IF EXISTS `post_like`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `post_like` (
  `lid` bigint(20) NOT NULL AUTO_INCREMENT,
  `pid` bigint(20) NOT NULL,
  `uid` bigint(20) NOT NULL,
  PRIMARY KEY (`lid`),
  KEY `pid` (`pid`),
  KEY `uid` (`uid`),
  CONSTRAINT `post_like_ibfk_3` FOREIGN KEY (`pid`) REFERENCES `post` (`pid`) ON DELETE CASCADE,
  CONSTRAINT `post_like_ibfk_4` FOREIGN KEY (`uid`) REFERENCES `member` (`uid`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=254 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `post_like`
--

LOCK TABLES `post_like` WRITE;
/*!40000 ALTER TABLE `post_like` DISABLE KEYS */;
INSERT INTO `post_like` VALUES (162,253,86),(163,252,86),(164,246,86),(165,255,86),(166,259,86),(168,258,86),(169,257,86),(170,267,88),(173,268,84),(174,286,86),(175,289,86),(176,290,86),(177,270,89),(178,270,86),(179,279,86),(180,290,89),(182,289,89),(184,276,89),(185,280,89),(187,265,86),(188,287,89),(189,283,89),(190,251,86),(191,284,89),(192,278,89),(193,288,89),(194,277,89),(197,291,86),(198,263,86),(199,259,89),(203,259,84),(204,301,84),(205,277,84),(206,302,84),(208,288,86),(209,285,86),(210,260,86),(211,297,86),(212,292,86),(213,267,86),(216,289,93),(217,277,93),(218,259,93),(219,300,93),(220,302,87),(221,302,94),(222,302,95),(223,300,95),(224,289,95),(225,277,95),(226,302,96),(227,300,96),(228,289,96),(229,277,96),(230,302,97),(231,289,97),(232,300,97),(233,277,97),(234,302,98),(235,300,98),(236,289,98),(237,277,98),(238,302,99),(239,289,99),(240,300,99),(241,259,99),(242,267,99),(243,270,99),(244,277,99),(245,288,99),(246,290,99),(250,300,94),(251,259,94),(252,302,101);
/*!40000 ALTER TABLE `post_like` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `post_tag`
--

DROP TABLE IF EXISTS `post_tag`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `post_tag` (
  `ptid` bigint(20) NOT NULL AUTO_INCREMENT,
  `pid` bigint(20) NOT NULL,
  `tid` bigint(20) DEFAULT NULL,
  `uid` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`ptid`),
  KEY `pid` (`pid`),
  KEY `tag_id` (`tid`),
  KEY `uid` (`uid`),
  CONSTRAINT `post_tag_ibfk_4` FOREIGN KEY (`pid`) REFERENCES `post` (`pid`) ON DELETE CASCADE,
  CONSTRAINT `post_tag_ibfk_5` FOREIGN KEY (`uid`) REFERENCES `member` (`uid`) ON DELETE CASCADE,
  CONSTRAINT `post_tag_ibfk_6` FOREIGN KEY (`tid`) REFERENCES `tag` (`tid`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=345 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `post_tag`
--

LOCK TABLES `post_tag` WRITE;
/*!40000 ALTER TABLE `post_tag` DISABLE KEYS */;
INSERT INTO `post_tag` VALUES (183,246,106,84),(184,246,116,84),(185,247,117,84),(186,249,118,86),(187,249,119,86),(188,250,120,86),(189,250,121,86),(190,250,122,86),(191,250,123,86),(192,251,124,86),(193,251,125,86),(194,252,114,86),(195,252,126,86),(196,253,127,86),(197,253,128,86),(198,254,123,86),(199,254,71,86),(202,256,131,84),(203,256,117,84),(204,257,131,84),(205,257,119,84),(206,258,119,84),(207,258,131,84),(212,260,123,84),(213,260,134,84),(214,260,28,84),(215,261,135,84),(216,261,123,84),(217,261,71,84),(218,262,136,84),(219,262,28,84),(220,262,137,84),(221,263,138,84),(222,263,139,84),(223,264,138,87),(224,264,139,87),(225,265,140,87),(226,265,121,87),(227,265,141,87),(228,265,142,87),(232,267,121,88),(233,267,126,88),(234,267,146,88),(235,267,71,88),(236,268,147,88),(237,268,148,88),(238,268,126,88),(240,270,150,87),(245,272,86,87),(246,273,86,87),(248,275,86,87),(249,276,131,84),(250,276,28,84),(251,277,131,84),(252,277,28,84),(253,278,86,87),(254,278,151,87),(255,278,152,87),(256,279,86,87),(257,279,153,87),(258,279,154,87),(259,280,119,84),(260,280,131,84),(261,280,155,84),(262,281,86,87),(263,281,156,87),(264,282,131,84),(265,282,157,84),(266,282,119,84),(267,282,28,84),(268,283,119,84),(269,283,131,84),(270,283,28,84),(280,284,29,84),(281,284,126,84),(282,284,114,84),(283,284,158,84),(284,285,159,87),(285,285,160,87),(286,285,137,87),(287,286,161,87),(288,286,85,87),(289,286,162,87),(293,287,163,84),(294,287,164,84),(295,255,129,NULL),(296,255,130,NULL),(297,255,28,NULL),(298,288,85,87),(299,288,86,87),(300,288,165,87),(301,288,166,87),(302,289,29,84),(303,289,158,84),(304,289,132,84),(305,290,167,84),(306,290,131,84),(307,290,117,84),(308,291,71,87),(309,292,168,87),(310,293,121,87),(311,294,121,87),(312,294,114,87),(315,295,169,NULL),(316,295,139,NULL),(317,295,29,NULL),(318,296,170,87),(319,296,139,87),(320,297,171,87),(321,297,172,87),(322,297,85,87),(323,298,173,87),(324,298,172,87),(325,299,169,84),(326,299,139,84),(327,299,29,84),(328,299,132,84),(329,300,174,84),(330,300,139,84),(331,300,166,84),(332,300,29,84),(333,301,175,84),(334,301,139,84),(335,301,176,84),(336,301,29,84),(337,302,114,84),(338,302,177,84),(339,259,132,NULL),(340,259,133,NULL),(341,259,114,NULL),(342,259,29,NULL);
/*!40000 ALTER TABLE `post_tag` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tag`
--

DROP TABLE IF EXISTS `tag`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tag` (
  `tid` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`tid`)
) ENGINE=InnoDB AUTO_INCREMENT=180 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tag`
--

LOCK TABLES `tag` WRITE;
/*!40000 ALTER TABLE `tag` DISABLE KEYS */;
INSERT INTO `tag` VALUES (1,'[\"안녕\"'),(2,'\"하이\"'),(3,'\"펭하\"]'),(4,'ㄹㅇㅎㄹㅇㅎ'),(5,'ㄹㅇㅎㅇㅀ'),(6,'ㄹㅇㅎ'),(7,'fsdf'),(8,'sdf,'),(9,'sdfdf,'),(10,'dsfsdfdfdsf,'),(11,'sdfsdfdf'),(12,'안녕'),(13,'동식'),(14,'테스트 중이야~'),(15,'ㅋㅋㅋ'),(16,'[\'안녕\']'),(21,'[\'안녕\''),(22,'\'나야\''),(23,'\'ㅇㅇ\']'),(24,'\'안녕\''),(25,'\'ㅇㅇ\''),(26,'나야'),(27,'ㅇㅇ'),(28,'python'),(29,'vue'),(33,'fdgfd'),(34,'sf'),(35,'sdfdsf'),(36,'dsfds'),(37,'fdfdfd'),(38,'fsdfsd'),(39,'dfsdf'),(40,'dfdf'),(41,'fdf'),(42,'dsfdsf'),(43,'dffd'),(44,'ㅁㄴㅇ'),(45,'ㅁㄴㅇㄹ'),(46,'강사 소개'),(47,'스프링 기반 REST API 개발'),(48,'강좌 소개'),(49,'ㄴㅇㄹㅇㅍㅇㅌㅇ'),(50,'ㅇㄹㅇㄴㄹㄴㅇㄹ'),(51,'sadasd'),(52,'asdas'),(53,'fdsfsdf'),(54,'df'),(55,'dfdfd'),(56,'test1'),(57,'test2'),(58,'기본적 의미'),(59,'Klaytn 클레이튼 블록체인 어플리케이션 만들기 - 토큰'),(60,'dtest'),(61,'zzz'),(62,'dsfsdf'),(63,'sdfdfdd'),(64,'ㄴㅇㄹ'),(65,'ㅇㄹㄴㅇㄹㄴㅇ'),(66,'ㅇㅇㅇ'),(67,'tdfd'),(68,'fdsfsd'),(69,'errer'),(70,'asdf'),(71,'html'),(72,'정보처리기사'),(73,'테스트야'),(74,'다시'),(75,'태그'),(76,'포트폴리오'),(77,'계정 3개 만들기'),(78,'취업특강'),(79,'재미없다'),(80,'졸리다'),(81,'자소서싫다'),(82,'인터페이스'),(83,'완전검색'),(84,'그리디'),(85,'SPRING'),(86,'JAVA'),(87,'왜 안돼'),(88,'사진'),(89,'연습'),(90,'그림'),(91,'asdfdf'),(92,'테스트'),(93,'수정'),(94,'ㅁㅇㄹ'),(95,'ㅁㄴㅇㄹㄴㄹㅇㄹㅇㄹㅇ'),(96,'fdsfdsf'),(97,'zzds'),(98,'ds'),(99,'dsd'),(100,'#vue'),(101,'aa'),(102,'ddd'),(103,'ejal'),(104,'adf'),(105,'dk'),(106,'DFS'),(107,'asd'),(108,'데이터 타입 - 숫자'),(109,'WEB2 - Python 기초'),(110,'아나콘다 주피터 노트북 사용법 알아보기'),(111,'공공데이터로 파이썬 데이터 분석 시작하기'),(112,'hello'),(113,'hi'),(114,'javascript'),(115,'HTTP'),(116,'알고리즘문제풀이'),(117,'GIT'),(118,'docker'),(119,'DB'),(120,'axios'),(121,'REACT'),(122,'모듈화'),(123,'TIL'),(124,'iOS'),(125,'SWIFT'),(126,'frontend'),(127,'머신러닝'),(128,'인공지능'),(129,'제코베 포트폴리오 템플릿'),(130,'Python 부트캠프'),(131,'django'),(132,'프론트엔드'),(133,'꿀팁'),(134,'WECODE'),(135,'마크다운'),(136,'BFS'),(137,'알고리즘 문제풀이'),(138,'라우터 설치 및 라우터 구현'),(139,'Vue.js 완벽 가이드 - 실습과 리팩토링으로 배우는 실전 개념'),(140,'Redux'),(141,'recoil'),(142,'react-query'),(143,'HTML, CSS, JS와 Front-end! 무엇을 할 수 있나요?!'),(144,'제주 하간디 이신 데이터들 Python으로 몬딱 분석해불게'),(145,'Call Stack'),(146,'DOM'),(147,'스터디'),(148,'springboot'),(149,'근'),(150,'matlab'),(151,'array'),(152,'list'),(153,'string'),(154,'class'),(155,'SQLITE'),(156,'stack'),(157,'CRUD'),(158,'컴포넌트'),(159,'queue'),(160,'linked list'),(161,'jpa'),(162,'mysql'),(163,'Vue.js'),(164,'채팅앱'),(165,'spring security'),(166,'spring boot'),(167,'Heroku'),(168,'css'),(169,'Vue CLI로 프로젝트 생성 및 ESLint 로그 확인'),(170,'axios를 이용한 api 호출'),(171,'Spring Boot 개요'),(172,'Spring Boot를 이용한 RESTful Web Services 개발'),(173,'REST API 설계'),(174,'제작할 사이트 및 API 소개'),(175,'ESLint 도구 소개와 사용해야 하는 이유?'),(176,'eslint'),(177,'function'),(178,'프로젝트 생성'),(179,'실전! 스프링 부트와 JPA 활용1 - 웹 애플리케이션 개발');
/*!40000 ALTER TABLE `tag` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temp_post_tag`
--

DROP TABLE IF EXISTS `temp_post_tag`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `temp_post_tag` (
  `tptid` bigint(20) NOT NULL AUTO_INCREMENT,
  `tpid` bigint(20) DEFAULT NULL,
  `tid` bigint(20) NOT NULL,
  `uid` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`tptid`),
  KEY `uid` (`uid`),
  KEY `tid` (`tid`),
  KEY `tpid` (`tpid`),
  CONSTRAINT `temp_post_tag_ibfk_2` FOREIGN KEY (`uid`) REFERENCES `member` (`uid`) ON DELETE CASCADE,
  CONSTRAINT `temp_post_tag_ibfk_3` FOREIGN KEY (`tid`) REFERENCES `tag` (`tid`) ON DELETE CASCADE,
  CONSTRAINT `temp_post_tag_ibfk_4` FOREIGN KEY (`tpid`) REFERENCES `temppost` (`tpid`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=25 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temp_post_tag`
--

LOCK TABLES `temp_post_tag` WRITE;
/*!40000 ALTER TABLE `temp_post_tag` DISABLE KEYS */;
INSERT INTO `temp_post_tag` VALUES (24,14,114,86);
/*!40000 ALTER TABLE `temp_post_tag` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `temppost`
--

DROP TABLE IF EXISTS `temppost`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `temppost` (
  `tpid` bigint(20) NOT NULL AUTO_INCREMENT,
  `title` varchar(100) CHARACTER SET utf8 DEFAULT NULL,
  `email` varchar(100) CHARACTER SET utf8 NOT NULL,
  `content` varchar(16000) DEFAULT NULL,
  `create_date` datetime DEFAULT current_timestamp(),
  `postimage` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  PRIMARY KEY (`tpid`),
  KEY `email` (`email`),
  CONSTRAINT `temppost_ibfk_4` FOREIGN KEY (`email`) REFERENCES `member` (`email`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `temppost`
--

LOCK TABLES `temppost` WRITE;
/*!40000 ALTER TABLE `temppost` DISABLE KEYS */;
INSERT INTO `temppost` VALUES (14,'[Javascript] Node.js란 무엇인가?','frontend@gmail.com','# Node.js란?\n\nJava 언어가 모든 OS 운영체제에서 Virtual Machine 환경 안에서 Runtime 이 구동 되듯이 Node.JS 는 웹브라우저에 종속적인 자바스크립트에서 외부에서 실행할 수 있는 Runtime 환경을 Chrome V8 엔진을 제공하여 여러 OS 환경에서 실행할 수 있는 환경을 제공하게 됩니다. 이것을 Node.JS 라고 정의할 수 있습니다.\n\n## 호출 스택과 이벤트 루프\n\n```jsx\nfunction first() {\n   second()\n   console.log(\'첫 번째 실행\')\n}\nfunction second() {\n   third()\n   console.log(\'두 번째 실행\')\n}\nfunction third() {\n   console.log(\'세 번째 실행\')\n}\nfirst()\n```\n\n**위 코드의 출력은 세 번째, 두 번째, 첫 번째 실행으로 실행 됩니다.** 이 부분의 실행 순서를 이야기 하기 위해선 호출 스택의 자료 구조로 first(), second(), third() 가 메모리에 들어가게 되어 있습니다. 스택의 특징으로는 Last In First Out(후입선출) 의 특징을 가지고 있습니다.\n\n위의 코드는 first, second, third 함수가 정의 되어있고 first 함수 부터 호출을 합니다. 체이닝으로 실행이 연결되어 있고 first가 먼저 호출 되어있지만 second 함수는 first 함수에서 호출되고 second 함수는 third 함수에서 호출되게 됩니다. third 함수는 console.log를 실행하게 되고 가장 윗 부분에 상주해 있다가 스택에서 빠져 나오게 됩니다. 그 다음 second 안에 있는 console.log를 실행하게 되고 최종적으로는 first의 console.log를 가장 나중에 실행하게 됩니다. 결과는 아래와 같습니다.\n\n![img](https://media.vlpt.us/images/sms8377/post/0c7ae0db-fcd2-4629-8895-2b7c151c971a/image.png)\n\n```jsx\nfunction run() {\n   console.log(`3초 후 실행함`)\n}\nconsole.log(`시작`)\nsetTimeout(run, 3000)\nconsole.log(`끝`)\n```\n\n위 코드의 출력은 아래와 같이 실행이 됩니다.\n\n![img](https://media.vlpt.us/images/sms8377/post/ec59596f-e7e2-4100-ab33-077ab22f217b/image.png)\n\nsetTimeout은 시간을 지연시켜 함수를 실행하는 타이머 함수입니다. 시간은 정해져있지만 실제로 자바스크립트는 비동기 처리에 대한 함수가 많기 때문에 위의 예제를 통해 이벤트 루프를 설명하자면 이렇습니다.실제로 동기적인 처리를 할 때는 자바스크립트는 컨텍스트 상 호출 스택 구조에서 가장 나중에 처리된 부분이 가장 먼저 처리 되는 현상을 볼 수가 있었습니다. 그 다음 console.log를 통해 찍어주는 단순한 키워드인 ‘시작\' 과 ‘끝\' 이후 setTimeout 이라는 타이머 함수를 통해 ‘3초 후에 실행함\' 이라는 키워드가 가장 마지막에 동작하는 것을 보실 수 있었습니다. 이 때 비동기적인 결과에 대한 부분들은 태스크 큐라는 부분에 적재를 시키게 되고 큐는 자료구조상 First In First Out(선입선출) 특성을 가지고 있습니다.\n\n이 때 3초 뒤에 스택으로 넘겨서 태스크가 실행이 되도록 하게 할 것이냐 라는 문제를 관리하는 놈이 바로 이벤트루프입니다. 이상 대략적인 스택, 태스크 큐 그리고 이벤트 루프의 설명이였습니다.','2021-02-17 20:56:39','');
/*!40000 ALTER TABLE `temppost` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user_course`
--

DROP TABLE IF EXISTS `user_course`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_course` (
  `uid` bigint(20) NOT NULL,
  `gid` bigint(20) NOT NULL,
  KEY `gid` (`gid`),
  CONSTRAINT `user_course_ibfk_1` FOREIGN KEY (`gid`) REFERENCES `course_info` (`gid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user_course`
--

LOCK TABLES `user_course` WRITE;
/*!40000 ALTER TABLE `user_course` DISABLE KEYS */;
INSERT INTO `user_course` VALUES (86,45),(86,46),(84,47),(87,47),(84,49),(84,50),(87,51),(95,53),(95,55);
/*!40000 ALTER TABLE `user_course` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2021-02-18  7:02:14
